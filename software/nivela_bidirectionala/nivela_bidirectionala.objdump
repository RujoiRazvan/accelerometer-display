
nivela_bidirectionala.elf:     file format elf32-littlenios2
nivela_bidirectionala.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0002023c

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x00010cd0 memsz 0x00010cd0 flags r-x
    LOAD off    0x00011cf0 vaddr 0x00030cf0 paddr 0x00032920 align 2**12
         filesz 0x00001c30 memsz 0x00001c30 flags rw-
    LOAD off    0x00000550 vaddr 0x00034550 paddr 0x00034550 align 2**12
         filesz 0x00000000 memsz 0x00000164 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000021c  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001038c  0002023c  0002023c  0000123c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000728  000305c8  000305c8  000115c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c30  00030cf0  00032920  00011cf0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000164  00034550  00034550  00014550  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  000346b4  000346b4  00013920  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  00013920  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001148  00000000  00000000  00013950  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   0002e653  00000000  00000000  00014a98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000c2a2  00000000  00000000  000430eb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   00011309  00000000  00000000  0004f38d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  00002634  00000000  00000000  00060698  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    000028fd  00000000  00000000  00062ccc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_alt_sim_info 00000040  00000000  00000000  000655cc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000070  00000000  00000000  00065610  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line_str 000021d1  00000000  00000000  00065680  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_loclists 0001505d  00000000  00000000  00067851  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_rnglists 0000178b  00000000  00000000  0007c8ae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .thread_model 00000003  00000000  00000000  00081742  2**0
                  CONTENTS, READONLY
 20 .cpu          0000000c  00000000  00000000  00081745  2**0
                  CONTENTS, READONLY
 21 .qsys         00000001  00000000  00000000  00081751  2**0
                  CONTENTS, READONLY
 22 .simulation_enabled 00000001  00000000  00000000  00081752  2**0
                  CONTENTS, READONLY
 23 .sysid_hash   00000004  00000000  00000000  00081753  2**0
                  CONTENTS, READONLY
 24 .sysid_base   00000004  00000000  00000000  00081757  2**0
                  CONTENTS, READONLY
 25 .sysid_time   00000004  00000000  00000000  0008175b  2**0
                  CONTENTS, READONLY
 26 .stderr_dev   0000000b  00000000  00000000  0008175f  2**0
                  CONTENTS, READONLY
 27 .stdin_dev    0000000b  00000000  00000000  0008176a  2**0
                  CONTENTS, READONLY
 28 .stdout_dev   0000000b  00000000  00000000  00081775  2**0
                  CONTENTS, READONLY
 29 .sopc_system_name 00000010  00000000  00000000  00081780  2**0
                  CONTENTS, READONLY
 30 .quartus_project_dir 0000003c  00000000  00000000  00081790  2**0
                  CONTENTS, READONLY
 31 .jdi          00005780  00000000  00000000  000817cc  2**0
                  CONTENTS, READONLY
 32 .sopcinfo     0006791f  00000000  00000000  00086f4c  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
0002023c l    d  .text	00000000 .text
000305c8 l    d  .rodata	00000000 .rodata
00030cf0 l    d  .rwdata	00000000 .rwdata
00034550 l    d  .bss	00000000 .bss
000346b4 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 crt0.o
00020274 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 accelerometer.c
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 global.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 hex_displays.c
00000000 l    df *ABS*	00000000 tests.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
000306c0 l     O .rodata	00000010 zeroes.0
00022fe0 l     F .text	000000c4 __sbprintf
000306d0 l     O .rodata	00000010 blanks.1
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
000231f0 l     F .text	000001fc quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00024ec0 l     F .text	00000008 __fp_lock
00024ed4 l     F .text	00000008 __fp_unlock
00024edc l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00030cf0 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0003077c l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
0002831c l     F .text	000000f4 __sprint_r.part.0
000308a0 l     O .rodata	00000010 zeroes.0
000296b4 l     F .text	000000c4 __sbprintf
000308b0 l     O .rodata	00000010 blanks.1
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0002d9bc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002dac8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002db30 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0002dc3c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0002dd1c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002de48 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002df34 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0002e108 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00032910 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0002e380 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0002e4b4 l     F .text	00000034 alt_dev_reg
00031830 l     O .rwdata	00001060 jtag_uart_0
00032890 l     O .rwdata	0000002c accelerometer_spi_0
000328bc l     O .rwdata	0000002c adc_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0002e7a0 l     F .text	00000218 altera_avalon_jtag_uart_irq
0002e9b8 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_up_avalon_accelerometer_spi.c
00000000 l    df *ABS*	00000000 altera_up_avalon_adc.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0002f7f8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0002fa54 l     F .text	000000b0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0002fd00 l     F .text	0000003c alt_get_errno
0002fd3c l     F .text	000000b8 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00034588 g     O .bss	00000004 alt_instruction_exception_handler
00027a44 g     F .text	00000070 _mprec_log10
00027b30 g     F .text	00000060 __any_on
00029dbc g     F .text	00000058 _isatty_r
00030788 g     O .rodata	00000028 __mprec_tinytens
0002e044 g     F .text	0000007c alt_main
00020aa4 g     F .text	000000d0 _puts_r
000345b4 g     O .bss	00000100 alt_irq
00029f08 g     F .text	00000064 _lseek_r
00032920 g       *ABS*	00000000 __flash_rwdata_start
0002c454 g     F .text	00000094 .hidden __eqdf2
000346b4 g       *ABS*	00000000 __alt_heap_start
0002a844 g     F .text	00000060 _kill_r
00020a6c g     F .text	00000038 printf
0002a23c g     F .text	0000006c _wcrtomb_r
0002a3e0 g     F .text	00000090 _signal_r
000282b8 g     F .text	0000005c __sseek
000251f4 g     F .text	00000010 __sinit
0002a0dc g     F .text	00000148 __swbuf_r
00029e14 g     F .text	00000074 _setlocale_r
00025044 g     F .text	00000068 __sfmoreglue
000207ac g     F .text	000000dc test_hex_displays
0002e0e4 g     F .text	00000024 __malloc_unlock
0002681c g     F .text	00000128 memmove
000251e0 g     F .text	00000014 _cleanup
00026a3c g     F .text	000000a4 _Balloc
0002c4e8 g     F .text	000000fc .hidden __gtdf2
00030118 g     F .text	00000024 altera_nios2_gen2_irq_init
000299f0 g     F .text	0000000c __errno
00020000 g     F .entry	0000000c __reset
00025c4c g     F .text	00000008 __localeconv_l
0002f154 g     F .text	000000d4 alt_up_accelerometer_spi_read_x_axis
00020020 g       *ABS*	00000000 __flash_exceptions_start
00029d5c g     F .text	00000060 _fstat_r
00034564 g     O .bss	00000004 errno
00028230 g     F .text	00000008 __seofread
00034570 g     O .bss	00000004 alt_argv
0003a8e8 g       *ABS*	00000000 _gp
0002e350 g     F .text	00000030 usleep
0002dc1c g     F .text	00000020 getpid
0002067c g     F .text	00000064 hex_init
000316b0 g     O .rwdata	00000180 alt_fd_list
00020650 g     F .text	0000002c get_hex_address
0002f9a4 g     F .text	00000090 alt_find_dev
0002671c g     F .text	00000100 memcpy
00024ec8 g     F .text	0000000c _cleanup_r
0002d824 g     F .text	000000b8 .hidden __floatsidf
0002fb04 g     F .text	0000007c alt_io_redirect
0002c5e4 g     F .text	000000f8 .hidden __ltdf2
000305c8 g       *ABS*	00000000 __DTOR_END__
00020b74 g     F .text	00000010 puts
000302e4 g     F .text	00000074 alt_exception_cause_generated_bad_addr
0002799c g     F .text	000000a8 __ratio
00029698 g     F .text	0000001c __vfiprintf_internal
0002ebbc g     F .text	00000220 altera_avalon_jtag_uart_read
00020a3c g     F .text	00000030 _printf_r
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0002097c g     F .text	00000064 .hidden __udivsi3
0002dc78 g     F .text	000000a4 isatty
0002a470 g     F .text	000000b0 _raise_r
00029834 g     F .text	00000064 __assert_func
000307d8 g     O .rodata	000000c8 __mprec_tens
00034560 g     O .bss	00000004 __malloc_top_pad
0002a8a4 g     F .text	00000004 _getpid_r
00025c54 g     F .text	0000000c _localeconv_r
00026e90 g     F .text	000000b0 __i2b
00025668 g     F .text	000004a4 __sfvwrite_r
0002a520 g     F .text	000000bc __sigtramp_r
00028184 g     F .text	00000058 _sbrk_r
00029fbc g     F .text	00000064 _read_r
00032908 g     O .rwdata	00000004 alt_max_fd
000299fc g     F .text	000000f8 _fclose_r
00024e3c g     F .text	00000084 fflush
0003455c g     O .bss	00000004 __malloc_max_sbrked_mem
0002fb80 g     F .text	00000180 alt_irq_register
0002b308 g     F .text	00000904 .hidden __adddf3
00020388 g     F .text	000000c8 hysteresis
00027744 g     F .text	00000100 __b2d
0002adf8 g     F .text	00000510 .hidden __umoddi3
0002df70 g     F .text	000000d4 lseek
000328e8 g     O .rwdata	00000004 _global_impure_ptr
00027b90 g     F .text	000005f4 _realloc_r
000346b4 g       *ABS*	00000000 __bss_end
0002f3d0 g     F .text	0000003c alt_up_adc_open_dev
0002ffec g     F .text	0000012c alt_tick
0002a8a8 g     F .text	00000550 .hidden __udivdi3
00029cc0 g     F .text	00000024 _fputwc_r
000307b0 g     O .rodata	00000028 __mprec_bigtens
00026c34 g     F .text	00000138 __s2b
0002a36c g     F .text	00000018 abort
0002d8dc g     F .text	00000090 .hidden __floatunsidf
0002745c g     F .text	00000058 __mcmp
00025214 g     F .text	00000014 __fp_lock_all
0002ff48 g     F .text	000000a4 alt_alarm_stop
00034578 g     O .bss	00000004 alt_irq_active
000200fc g     F .exceptions	000000cc alt_irq_handler
00031688 g     O .rwdata	00000028 alt_dev_null
00034554 g     O .bss	00000004 adc_device
0002f7d8 g     F .text	00000020 alt_dcache_flush_all
00026d6c g     F .text	00000074 __hi0bits
0002d7a4 g     F .text	00000080 .hidden __fixdfsi
00032920 g       *ABS*	00000000 __ram_rwdata_end
00032900 g     O .rwdata	00000008 alt_dev_list
0002e3bc g     F .text	000000f8 write
00030cf0 g       *ABS*	00000000 __ram_rodata_end
0002db6c g     F .text	000000b0 fstat
0002dd58 g     F .text	000000f0 kill
0002c5e4 g     F .text	000000f8 .hidden __ledf2
00027194 g     F .text	00000140 __pow5mult
00028428 g     F .text	00001270 ___vfiprintf_internal_r
000209e0 g     F .text	0000005c .hidden __umodsi3
000346b4 g       *ABS*	00000000 end
0002e6ec g     F .text	000000b4 altera_avalon_jtag_uart_init
000201c8 g     F .exceptions	00000074 alt_instruction_exception_entry
000305c8 g       *ABS*	00000000 __CTOR_LIST__
00040000 g       *ABS*	00000000 __alt_stack_pointer
0002d96c g     F .text	00000050 .hidden __clzsi2
00020734 g     F .text	00000078 set_hex_state
0002eddc g     F .text	00000228 altera_avalon_jtag_uart_write
00025204 g     F .text	00000004 __sfp_lock_acquire
0002664c g     F .text	000000d0 memchr
00020c1c g     F .text	000023a8 ___vfprintf_internal_r
00025360 g     F .text	00000308 _free_r
00030a14 g     O .rodata	00000180 _ctype_b
00029e88 g     F .text	0000000c __locale_mb_cur_max
000304a8 g     F .text	00000120 __call_exitprocs
000328f0 g     O .rwdata	00000004 __malloc_sbrk_base
0002023c g     F .text	0000003c _start
0003457c g     O .bss	00000004 _alt_tick_rate
000272d4 g     F .text	00000188 __lshift
00034580 g     O .bss	00000008 _alt_nticks
0002a690 g     F .text	00000098 signal
0002e144 g     F .text	000000fc read
0002e524 g     F .text	00000064 alt_sys_init
0002f040 g     F .text	00000044 alt_up_accelerometer_spi_read_address_register
00030418 g     F .text	00000090 __register_exitproc
00026f40 g     F .text	00000254 __multiply
0002ea60 g     F .text	00000068 altera_avalon_jtag_uart_close
00030cf0 g       *ABS*	00000000 __ram_rwdata_start
000305c8 g       *ABS*	00000000 __ram_rodata_start
0003458c g     O .bss	00000028 __malloc_current_mallinfo
00027844 g     F .text	00000158 __d2b
0002e588 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00030244 g     F .text	000000a0 alt_get_fd
0002f680 g     F .text	00000158 alt_busy_sleep
0002f228 g     F .text	000000d4 alt_up_accelerometer_spi_read_y_axis
000297dc g     F .text	00000058 _close_r
000303a0 g     F .text	00000078 memcmp
0002e648 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
000346b4 g       *ABS*	00000000 __alt_stack_base
0002e698 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
000202fc g     F .text	0000008c print_accelerometer_axis
000230a4 g     F .text	0000014c __swsetup_r
0002bc0c g     F .text	00000848 .hidden __divdf3
000250ac g     F .text	00000134 __sfp
00027ab4 g     F .text	0000007c __copybits
00031114 g     O .rwdata	00000408 __malloc_av_
00025210 g     F .text	00000004 __sinit_lock_release
0002c6dc g     F .text	000006d8 .hidden __muldf3
000281dc g     F .text	00000054 __sread
0003013c g     F .text	00000108 alt_find_file
0002f834 g     F .text	000000a8 alt_dev_llist_insert
0002e0c0 g     F .text	00000024 __malloc_lock
0002e298 g     F .text	000000b8 sbrk
00024ddc g     F .text	00000060 _fflush_r
000298ac g     F .text	00000144 _calloc_r
00034550 g       *ABS*	00000000 __bss_start
00026944 g     F .text	000000f8 memset
00020494 g     F .text	000001bc main
00034574 g     O .bss	00000004 alt_envp
00034558 g     O .bss	00000004 __malloc_max_total_mem
0002e5e8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0002a224 g     F .text	00000018 __swbuf
00028314 g     F .text	00000008 __sclose
00040000 g       *ABS*	00000000 __alt_heap_limit
00029af4 g     F .text	00000010 fclose
000233ec g     F .text	000017e8 _dtoa_r
00025e98 g     F .text	000007b4 _malloc_r
0002a33c g     F .text	00000030 __ascii_wctomb
0003290c g     O .rwdata	00000004 alt_errno
00029b04 g     F .text	00000020 _fiprintf_r
0002a728 g     F .text	00000060 _init_signal
0002f40c g     F .text	00000114 alt_up_adc_read
00025b0c g     F .text	00000098 _fwalk
00020450 g     F .text	00000044 getAdcValue
00029f6c g     F .text	0000000c _mbtowc_r
000206e0 g     F .text	00000054 set_hex_value
00020888 g     F .text	00000080 .hidden __divsi3
0002523c g     F .text	00000124 _malloc_trim_r
000305c8 g       *ABS*	00000000 __CTOR_END__
0002a020 g     F .text	000000b8 strcmp
000305c8 g       *ABS*	00000000 __flash_rodata_start
000305c8 g       *ABS*	00000000 __DTOR_LIST__
0002c454 g     F .text	00000094 .hidden __nedf2
0002e4e8 g     F .text	0000003c alt_irq_init
0002e240 g     F .text	00000058 alt_release_fd
00030b94 g     O .rodata	00000100 .hidden __clz_tab
00034568 g     O .bss	00000004 _PathLocale
00030358 g     F .text	00000014 atexit
00029778 g     F .text	00000064 _write_r
00029e94 g     F .text	00000074 setlocale
000328ec g     O .rwdata	00000004 _impure_ptr
0003456c g     O .bss	00000004 alt_argc
00024bd4 g     F .text	00000208 __sflush_r
0002f940 g     F .text	00000064 _do_dtors
00020020 g       .exceptions	00000000 alt_irq_entry
00029f78 g     F .text	00000044 __ascii_mbtowc
000276e4 g     F .text	00000060 __ulp
00025228 g     F .text	00000014 __fp_unlock_all
000328f8 g     O .rwdata	00000008 alt_fs_list
00020020 g       *ABS*	00000000 __ram_exceptions_start
0002f004 g     F .text	0000003c alt_up_accelerometer_spi_open_dev
00025c60 g     F .text	0000000c localeconv
00025e0c g     F .text	0000008c __swhatbuf_r
00034550 g     O .bss	00000004 accelerometer_device
00032920 g       *ABS*	00000000 _edata
000346b4 g       *ABS*	00000000 _end
00029b5c g     F .text	00000164 __fputwc
0002023c g       *ABS*	00000000 __ram_exceptions_end
0002eac8 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
00028238 g     F .text	00000080 __swrite
000328f4 g     O .rwdata	00000004 __malloc_trim_threshold
0003036c g     F .text	00000034 exit
00029b24 g     F .text	00000038 fiprintf
0002a0d8 g     F .text	00000004 _vfiprintf_r
00025ba4 g     F .text	000000a8 _fwalk_reent
000274b4 g     F .text	00000230 __mdiff
00020908 g     F .text	00000074 .hidden __modsi3
0002f2fc g     F .text	000000d4 alt_up_accelerometer_spi_read_z_axis
00040000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00025208 g     F .text	00000004 __sfp_lock_release
00030910 g     O .rodata	00000101 _ctype_
0002d750 g     F .text	00000054 .hidden __unorddf2
0002daf4 g     F .text	0000003c _exit
0002f520 g     F .text	00000160 alt_alarm_start
0002f084 g     F .text	00000068 alt_up_accelerometer_spi_read
0002f0ec g     F .text	00000068 alt_up_accelerometer_spi_write
00025c6c g     F .text	000001a0 __smakebuf_r
00020b84 g     F .text	00000098 strlen
0002a384 g     F .text	0000005c _init_signal_r
0002fdf4 g     F .text	00000154 open
0002c4e8 g     F .text	000000fc .hidden __gedf2
00029898 g     F .text	00000014 __assert
00020278 g     F .text	00000084 read_ADXL345_deviceID
00028410 g     F .text	00000018 __sprint_r
0002fa34 g     F .text	00000020 alt_icache_flush_all
00032914 g     O .rwdata	00000004 alt_priority_mask
00022fc4 g     F .text	0000001c __vfprintf_internal
0002a330 g     F .text	0000000c _wctomb_r
0002cdb4 g     F .text	0000099c .hidden __subdf3
00026de0 g     F .text	000000b0 __lo0bits
00032918 g     O .rwdata	00000008 alt_alarm_list
0002f8dc g     F .text	00000064 _do_ctors
0002a788 g     F .text	000000bc __sigtramp
0002a2a8 g     F .text	00000088 wcrtomb
0002d9f8 g     F .text	000000d0 close
0003151c g     O .rwdata	0000016c __global_locale
0002deb0 g     F .text	00000084 alt_load
00029ce4 g     F .text	00000078 fputwc
0002a5dc g     F .text	000000b4 raise
0002520c g     F .text	00000004 __sinit_lock_acquire
00026b04 g     F .text	00000130 __multadd
00026ae0 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20000:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20004:	08408f14 	ori	at,at,572
    jmp r1
   20008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
   20094:	e93fff04 	addi	r4,ea,-4
   20098:	00201c80 	call	201c8 <alt_instruction_exception_entry>
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>
   200a0:	ebffff04 	addi	r15,ea,-4
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffc15 	stw	r2,-16(fp)

  return active;
   20118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0ffff17 	ldw	r3,-4(fp)
   20130:	e0bffe17 	ldw	r2,-8(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001226 	beq	r2,zero,20184 <alt_irq_handler+0x88>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
   2013c:	e0bffd17 	ldw	r2,-12(fp)
   20140:	100690fa 	slli	r3,r2,3
   20144:	008000f4 	movhi	r2,3
   20148:	1885883a 	add	r2,r3,r2
   2014c:	10d16d17 	ldw	r3,17844(r2)
   20150:	e0bffd17 	ldw	r2,-12(fp)
   20154:	100890fa 	slli	r4,r2,3
   20158:	008000f4 	movhi	r2,3
   2015c:	2085883a 	add	r2,r4,r2
   20160:	10916e17 	ldw	r2,17848(r2)
   20164:	e17ffd17 	ldw	r5,-12(fp)
   20168:	1009883a 	mov	r4,r2
   2016c:	183ee83a 	callr	r3
#endif
        break;
   20170:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
   20174:	0005313a 	rdctl	r2,ipending
   20178:	e0bffb15 	stw	r2,-20(fp)
  return active;
   2017c:	e0bffb17 	ldw	r2,-20(fp)
   20180:	00000706 	br	201a0 <alt_irq_handler+0xa4>
      }
      mask <<= 1;
   20184:	e0bffe17 	ldw	r2,-8(fp)
   20188:	1085883a 	add	r2,r2,r2
   2018c:	e0bffe15 	stw	r2,-8(fp)
      i++;
   20190:	e0bffd17 	ldw	r2,-12(fp)
   20194:	10800044 	addi	r2,r2,1
   20198:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
   2019c:	003fe306 	br	2012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
   201a0:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
   201a4:	e0bfff17 	ldw	r2,-4(fp)
   201a8:	103fdd1e 	bne	r2,zero,20120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201ac:	0001883a 	nop
}
   201b0:	0001883a 	nop
   201b4:	e037883a 	mov	sp,fp
   201b8:	dfc00117 	ldw	ra,4(sp)
   201bc:	df000017 	ldw	fp,0(sp)
   201c0:	dec00204 	addi	sp,sp,8
   201c4:	f800283a 	ret

000201c8 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201c8:	defffb04 	addi	sp,sp,-20
   201cc:	dfc00415 	stw	ra,16(sp)
   201d0:	df000315 	stw	fp,12(sp)
   201d4:	df000304 	addi	fp,sp,12
   201d8:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   201dc:	000531fa 	rdctl	r2,exception
   201e0:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   201e4:	e0bfff17 	ldw	r2,-4(fp)
   201e8:	1004d0ba 	srli	r2,r2,2
   201ec:	108007cc 	andi	r2,r2,31
   201f0:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   201f4:	0005333a 	rdctl	r2,badaddr
   201f8:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   201fc:	d0a72817 	ldw	r2,-25440(gp)
   20200:	10000726 	beq	r2,zero,20220 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   20204:	d0a72817 	ldw	r2,-25440(gp)
   20208:	e0ffff17 	ldw	r3,-4(fp)
   2020c:	e1bffe17 	ldw	r6,-8(fp)
   20210:	e17ffd17 	ldw	r5,-12(fp)
   20214:	1809883a 	mov	r4,r3
   20218:	103ee83a 	callr	r2
   2021c:	00000206 	br	20228 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   20220:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   20224:	0005883a 	mov	r2,zero
}
   20228:	e037883a 	mov	sp,fp
   2022c:	dfc00117 	ldw	ra,4(sp)
   20230:	df000017 	ldw	fp,0(sp)
   20234:	dec00204 	addi	sp,sp,8
   20238:	f800283a 	ret

Disassembly of section .text:

0002023c <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   2023c:	06c00134 	movhi	sp,4
    ori sp, sp, %lo(__alt_stack_pointer)
   20240:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   20244:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   20248:	d6aa3a14 	ori	gp,gp,43240
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   2024c:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   20250:	10915414 	ori	r2,r2,17744

    movhi r3, %hi(__bss_end)
   20254:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20258:	18d1ad14 	ori	r3,r3,18100

    beq r2, r3, 1f
   2025c:	10c00326 	beq	r2,r3,2026c <_start+0x30>

0:
    stw zero, (r2)
   20260:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   20264:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20268:	10fffd36 	bltu	r2,r3,20260 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   2026c:	002deb00 	call	2deb0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   20270:	002e0440 	call	2e044 <alt_main>

00020274 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   20274:	003fff06 	br	20274 <alt_after_alt_main>

00020278 <read_ADXL345_deviceID>:
 *      Author: razva
 */
#include "accelerometer.h"

void read_ADXL345_deviceID (alt_up_accelerometer_spi_dev *accelerometer_dev)
{
   20278:	defffa04 	addi	sp,sp,-24
   2027c:	dfc00515 	stw	ra,20(sp)
   20280:	df000415 	stw	fp,16(sp)
   20284:	df000404 	addi	fp,sp,16
   20288:	e13ffc15 	stw	r4,-16(fp)
    alt_u32 device_id_address = 0x00;	// Accelerometer ID address
   2028c:	e03fff15 	stw	zero,-4(fp)
    alt_u8 data = 0;
   20290:	e03ffdc5 	stb	zero,-9(fp)

    int error = alt_up_accelerometer_spi_read(accelerometer_dev, device_id_address, &data);
   20294:	e0bfff17 	ldw	r2,-4(fp)
   20298:	10803fcc 	andi	r2,r2,255
   2029c:	e0fffdc4 	addi	r3,fp,-9
   202a0:	180d883a 	mov	r6,r3
   202a4:	100b883a 	mov	r5,r2
   202a8:	e13ffc17 	ldw	r4,-16(fp)
   202ac:	002f0840 	call	2f084 <alt_up_accelerometer_spi_read>
   202b0:	e0bffe15 	stw	r2,-8(fp)

    if (!error)
   202b4:	e0bffe17 	ldw	r2,-8(fp)
   202b8:	1000071e 	bne	r2,zero,202d8 <read_ADXL345_deviceID+0x60>
    {
        printf("Accelerometer ID: 0x%X", data);
   202bc:	e0bffdc3 	ldbu	r2,-9(fp)
   202c0:	10803fcc 	andi	r2,r2,255
   202c4:	100b883a 	mov	r5,r2
   202c8:	010000f4 	movhi	r4,3
   202cc:	21017204 	addi	r4,r4,1480
   202d0:	0020a6c0 	call	20a6c <printf>
    }
    else
    	printf("Wrong Accelerometer ID\r\n");
}
   202d4:	00000306 	br	202e4 <read_ADXL345_deviceID+0x6c>
    	printf("Wrong Accelerometer ID\r\n");
   202d8:	010000f4 	movhi	r4,3
   202dc:	21017804 	addi	r4,r4,1504
   202e0:	0020b740 	call	20b74 <puts>
}
   202e4:	0001883a 	nop
   202e8:	e037883a 	mov	sp,fp
   202ec:	dfc00117 	ldw	ra,4(sp)
   202f0:	df000017 	ldw	fp,0(sp)
   202f4:	dec00204 	addi	sp,sp,8
   202f8:	f800283a 	ret

000202fc <print_accelerometer_axis>:

void print_accelerometer_axis(alt_up_accelerometer_spi_dev *accelerometer_dev)
{
   202fc:	defffa04 	addi	sp,sp,-24
   20300:	dfc00515 	stw	ra,20(sp)
   20304:	df000415 	stw	fp,16(sp)
   20308:	df000404 	addi	fp,sp,16
   2030c:	e13ffc15 	stw	r4,-16(fp)
	alt_32 x = 0;
   20310:	e03fff15 	stw	zero,-4(fp)
	alt_32 y = 0;
   20314:	e03ffe15 	stw	zero,-8(fp)
	alt_32 z = 0;
   20318:	e03ffd15 	stw	zero,-12(fp)
	alt_up_accelerometer_spi_read_x_axis(accelerometer_dev, &x);
   2031c:	e0bfff04 	addi	r2,fp,-4
   20320:	100b883a 	mov	r5,r2
   20324:	e13ffc17 	ldw	r4,-16(fp)
   20328:	002f1540 	call	2f154 <alt_up_accelerometer_spi_read_x_axis>
	alt_up_accelerometer_spi_read_y_axis(accelerometer_dev, &y);
   2032c:	e0bffe04 	addi	r2,fp,-8
   20330:	100b883a 	mov	r5,r2
   20334:	e13ffc17 	ldw	r4,-16(fp)
   20338:	002f2280 	call	2f228 <alt_up_accelerometer_spi_read_y_axis>
	alt_up_accelerometer_spi_read_z_axis(accelerometer_dev, &z);
   2033c:	e0bffd04 	addi	r2,fp,-12
   20340:	100b883a 	mov	r5,r2
   20344:	e13ffc17 	ldw	r4,-16(fp)
   20348:	002f2fc0 	call	2f2fc <alt_up_accelerometer_spi_read_z_axis>
	printf("x: %d, y: %d, z: %d \r\n", x, y, z);
   2034c:	e0bfff17 	ldw	r2,-4(fp)
   20350:	e0fffe17 	ldw	r3,-8(fp)
   20354:	e13ffd17 	ldw	r4,-12(fp)
   20358:	200f883a 	mov	r7,r4
   2035c:	180d883a 	mov	r6,r3
   20360:	100b883a 	mov	r5,r2
   20364:	010000f4 	movhi	r4,3
   20368:	21017e04 	addi	r4,r4,1528
   2036c:	0020a6c0 	call	20a6c <printf>
}
   20370:	0001883a 	nop
   20374:	e037883a 	mov	sp,fp
   20378:	dfc00117 	ldw	ra,4(sp)
   2037c:	df000017 	ldw	fp,0(sp)
   20380:	dec00204 	addi	sp,sp,8
   20384:	f800283a 	ret

00020388 <hysteresis>:

int hysteresis(int current_value, int *state) {
   20388:	defffd04 	addi	sp,sp,-12
   2038c:	df000215 	stw	fp,8(sp)
   20390:	df000204 	addi	fp,sp,8
   20394:	e13fff15 	stw	r4,-4(fp)
   20398:	e17ffe15 	stw	r5,-8(fp)
    if (*state == 0 && current_value > UPPER_THRESHOLD) {
   2039c:	e0bffe17 	ldw	r2,-8(fp)
   203a0:	10800017 	ldw	r2,0(r2)
   203a4:	1000071e 	bne	r2,zero,203c4 <hysteresis+0x3c>
   203a8:	e0bfff17 	ldw	r2,-4(fp)
   203ac:	10801e50 	cmplti	r2,r2,121
   203b0:	1000041e 	bne	r2,zero,203c4 <hysteresis+0x3c>
        *state = 1;
   203b4:	e0bffe17 	ldw	r2,-8(fp)
   203b8:	00c00044 	movi	r3,1
   203bc:	10c00015 	stw	r3,0(r2)
   203c0:	00001d06 	br	20438 <hysteresis+0xb0>
    } else if (*state == 1 && current_value < LOWER_THRESHOLD) {
   203c4:	e0bffe17 	ldw	r2,-8(fp)
   203c8:	10800017 	ldw	r2,0(r2)
   203cc:	10800058 	cmpnei	r2,r2,1
   203d0:	1000061e 	bne	r2,zero,203ec <hysteresis+0x64>
   203d4:	e0bfff17 	ldw	r2,-4(fp)
   203d8:	10801b88 	cmpgei	r2,r2,110
   203dc:	1000031e 	bne	r2,zero,203ec <hysteresis+0x64>
        *state = 0;
   203e0:	e0bffe17 	ldw	r2,-8(fp)
   203e4:	10000015 	stw	zero,0(r2)
   203e8:	00001306 	br	20438 <hysteresis+0xb0>
    } else if (*state == 0 && current_value < NEG_LOWER_THRESHOLD) {
   203ec:	e0bffe17 	ldw	r2,-8(fp)
   203f0:	10800017 	ldw	r2,0(r2)
   203f4:	1000071e 	bne	r2,zero,20414 <hysteresis+0x8c>
   203f8:	e0bfff17 	ldw	r2,-4(fp)
   203fc:	10bfe208 	cmpgei	r2,r2,-120
   20400:	1000041e 	bne	r2,zero,20414 <hysteresis+0x8c>
        *state = -1;
   20404:	e0bffe17 	ldw	r2,-8(fp)
   20408:	00ffffc4 	movi	r3,-1
   2040c:	10c00015 	stw	r3,0(r2)
   20410:	00000906 	br	20438 <hysteresis+0xb0>
    } else if (*state == -1 && current_value > NEG_UPPER_THRESHOLD) {
   20414:	e0bffe17 	ldw	r2,-8(fp)
   20418:	10800017 	ldw	r2,0(r2)
   2041c:	10bfffd8 	cmpnei	r2,r2,-1
   20420:	1000051e 	bne	r2,zero,20438 <hysteresis+0xb0>
   20424:	e0bfff17 	ldw	r2,-4(fp)
   20428:	10bfe4d0 	cmplti	r2,r2,-109
   2042c:	1000021e 	bne	r2,zero,20438 <hysteresis+0xb0>
        *state = 0;
   20430:	e0bffe17 	ldw	r2,-8(fp)
   20434:	10000015 	stw	zero,0(r2)
    }
    return *state;
   20438:	e0bffe17 	ldw	r2,-8(fp)
   2043c:	10800017 	ldw	r2,0(r2)
}
   20440:	e037883a 	mov	sp,fp
   20444:	df000017 	ldw	fp,0(sp)
   20448:	dec00104 	addi	sp,sp,4
   2044c:	f800283a 	ret

00020450 <getAdcValue>:


#include "adc.h"

unsigned int getAdcValue(alt_up_adc_dev * adc)
{
   20450:	defffd04 	addi	sp,sp,-12
   20454:	dfc00215 	stw	ra,8(sp)
   20458:	df000115 	stw	fp,4(sp)
   2045c:	df000104 	addi	fp,sp,4
   20460:	e13fff15 	stw	r4,-4(fp)
	alt_up_adc_update (adc);
   20464:	e0bfff17 	ldw	r2,-4(fp)
   20468:	10800a17 	ldw	r2,40(r2)
   2046c:	0007883a 	mov	r3,zero
   20470:	10c00035 	stwio	r3,0(r2)
	return alt_up_adc_read(adc, 0);
   20474:	000b883a 	mov	r5,zero
   20478:	e13fff17 	ldw	r4,-4(fp)
   2047c:	002f40c0 	call	2f40c <alt_up_adc_read>
}
   20480:	e037883a 	mov	sp,fp
   20484:	dfc00117 	ldw	ra,4(sp)
   20488:	df000017 	ldw	fp,0(sp)
   2048c:	dec00204 	addi	sp,sp,8
   20490:	f800283a 	ret

00020494 <main>:
alt_up_accelerometer_spi_dev* accelerometer_device = NULL;

alt_up_adc_dev* adc_device = NULL;

int main()
{
   20494:	defff704 	addi	sp,sp,-36
   20498:	dfc00815 	stw	ra,32(sp)
   2049c:	df000715 	stw	fp,28(sp)
   204a0:	df000704 	addi	fp,sp,28
	printf("Program start\r\n");
   204a4:	010000f4 	movhi	r4,3
   204a8:	21018404 	addi	r4,r4,1552
   204ac:	0020b740 	call	20b74 <puts>
	hex_init(TURN_OFF);
   204b0:	01003fc4 	movi	r4,255
   204b4:	002067c0 	call	2067c <hex_init>
	accelerometer_device = alt_up_accelerometer_spi_open_dev(ACCELEROMETER_SPI_0_NAME);
   204b8:	010000f4 	movhi	r4,3
   204bc:	21018804 	addi	r4,r4,1568
   204c0:	002f0040 	call	2f004 <alt_up_accelerometer_spi_open_dev>
   204c4:	d0a71a15 	stw	r2,-25496(gp)
	adc_device = alt_up_adc_open_dev(ADC_0_NAME);
   204c8:	010000f4 	movhi	r4,3
   204cc:	21018f04 	addi	r4,r4,1596
   204d0:	002f3d00 	call	2f3d0 <alt_up_adc_open_dev>
   204d4:	d0a71b15 	stw	r2,-25492(gp)
	if (adc_device != NULL)
   204d8:	d0a71b17 	ldw	r2,-25492(gp)
   204dc:	10000326 	beq	r2,zero,204ec <main+0x58>
		printf("ADC Device is initialised \r\n");
   204e0:	010000f4 	movhi	r4,3
   204e4:	21019204 	addi	r4,r4,1608
   204e8:	0020b740 	call	20b74 <puts>
	read_ADXL345_deviceID(accelerometer_device);
   204ec:	d0a71a17 	ldw	r2,-25496(gp)
   204f0:	1009883a 	mov	r4,r2
   204f4:	00202780 	call	20278 <read_ADXL345_deviceID>

	alt_32 y = 512, x = 512;
   204f8:	00808004 	movi	r2,512
   204fc:	e0bffb15 	stw	r2,-20(fp)
   20500:	00808004 	movi	r2,512
   20504:	e0bffa15 	stw	r2,-24(fp)
	int state = 0;
   20508:	e03ff915 	stw	zero,-28(fp)
	while(1)
	{
		alt_up_accelerometer_spi_read_x_axis(accelerometer_device, &x);
   2050c:	d0a71a17 	ldw	r2,-25496(gp)
   20510:	e0fffa04 	addi	r3,fp,-24
   20514:	180b883a 	mov	r5,r3
   20518:	1009883a 	mov	r4,r2
   2051c:	002f1540 	call	2f154 <alt_up_accelerometer_spi_read_x_axis>
		alt_up_accelerometer_spi_read_y_axis(accelerometer_device, &y);
   20520:	d0a71a17 	ldw	r2,-25496(gp)
   20524:	e0fffb04 	addi	r3,fp,-20
   20528:	180b883a 	mov	r5,r3
   2052c:	1009883a 	mov	r4,r2
   20530:	002f2280 	call	2f228 <alt_up_accelerometer_spi_read_y_axis>
		int index = (x + 255) / 86;
   20534:	e0bffa17 	ldw	r2,-24(fp)
   20538:	10803fc4 	addi	r2,r2,255
   2053c:	01401584 	movi	r5,86
   20540:	1009883a 	mov	r4,r2
   20544:	00208880 	call	20888 <__divsi3>
   20548:	e0bffe15 	stw	r2,-8(fp)
		x = (index < 0) ? 0 : (index >= 6) ? 5 : index;
   2054c:	e0bffe17 	ldw	r2,-8(fp)
   20550:	10000516 	blt	r2,zero,20568 <main+0xd4>
   20554:	e0bffe17 	ldw	r2,-8(fp)
   20558:	10c00190 	cmplti	r3,r2,6
   2055c:	1800031e 	bne	r3,zero,2056c <main+0xd8>
   20560:	00800144 	movi	r2,5
   20564:	00000106 	br	2056c <main+0xd8>
   20568:	0005883a 	mov	r2,zero
   2056c:	e0bffa15 	stw	r2,-24(fp)
		int current_state = hysteresis(y, &state);
   20570:	e0bffb17 	ldw	r2,-20(fp)
   20574:	e0fff904 	addi	r3,fp,-28
   20578:	180b883a 	mov	r5,r3
   2057c:	1009883a 	mov	r4,r2
   20580:	00203880 	call	20388 <hysteresis>
   20584:	e0bffd15 	stw	r2,-12(fp)

		if (current_state == 1)
   20588:	e0bffd17 	ldw	r2,-12(fp)
   2058c:	10800058 	cmpnei	r2,r2,1
   20590:	1000061e 	bne	r2,zero,205ac <main+0x118>
			set_hex_value(TURN_ON_DOWN_LEDS, x);
   20594:	e0bffa17 	ldw	r2,-24(fp)
   20598:	10803fcc 	andi	r2,r2,255
   2059c:	100b883a 	mov	r5,r2
   205a0:	010028c4 	movi	r4,163
   205a4:	00206e00 	call	206e0 <set_hex_value>
   205a8:	00000e06 	br	205e4 <main+0x150>
		else if (current_state == -1)
   205ac:	e0bffd17 	ldw	r2,-12(fp)
   205b0:	10bfffd8 	cmpnei	r2,r2,-1
   205b4:	1000061e 	bne	r2,zero,205d0 <main+0x13c>
			set_hex_value(TURN_ON_UP_LEDS, x);
   205b8:	e0bffa17 	ldw	r2,-24(fp)
   205bc:	10803fcc 	andi	r2,r2,255
   205c0:	100b883a 	mov	r5,r2
   205c4:	01002704 	movi	r4,156
   205c8:	00206e00 	call	206e0 <set_hex_value>
   205cc:	00000506 	br	205e4 <main+0x150>
		else
			set_hex_value(TURN_ON_MIDDLE_LINE, x);
   205d0:	e0bffa17 	ldw	r2,-24(fp)
   205d4:	10803fcc 	andi	r2,r2,255
   205d8:	100b883a 	mov	r5,r2
   205dc:	01002fc4 	movi	r4,191
   205e0:	00206e00 	call	206e0 <set_hex_value>

		for (int i = 0; i < 6; i++) { if (i != x) { set_hex_value(0xFF, i); } };
   205e4:	e03fff15 	stw	zero,-4(fp)
   205e8:	00000b06 	br	20618 <main+0x184>
   205ec:	e0bffa17 	ldw	r2,-24(fp)
   205f0:	e0ffff17 	ldw	r3,-4(fp)
   205f4:	18800526 	beq	r3,r2,2060c <main+0x178>
   205f8:	e0bfff17 	ldw	r2,-4(fp)
   205fc:	10803fcc 	andi	r2,r2,255
   20600:	100b883a 	mov	r5,r2
   20604:	01003fc4 	movi	r4,255
   20608:	00206e00 	call	206e0 <set_hex_value>
   2060c:	e0bfff17 	ldw	r2,-4(fp)
   20610:	10800044 	addi	r2,r2,1
   20614:	e0bfff15 	stw	r2,-4(fp)
   20618:	e0bfff17 	ldw	r2,-4(fp)
   2061c:	10800190 	cmplti	r2,r2,6
   20620:	103ff21e 	bne	r2,zero,205ec <main+0x158>
		int x = getAdcValue(adc_device);
   20624:	d0a71b17 	ldw	r2,-25492(gp)
   20628:	1009883a 	mov	r4,r2
   2062c:	00204500 	call	20450 <getAdcValue>
   20630:	e0bffc15 	stw	r2,-16(fp)
		printf("adc value: %d \r\n", x);
   20634:	e17ffc17 	ldw	r5,-16(fp)
   20638:	010000f4 	movhi	r4,3
   2063c:	21019904 	addi	r4,r4,1636
   20640:	0020a6c0 	call	20a6c <printf>
		usleep(10000);
   20644:	0109c404 	movi	r4,10000
   20648:	002e3500 	call	2e350 <usleep>
	{
   2064c:	003faf06 	br	2050c <main+0x78>

00020650 <get_hex_address>:
#include "hex_displays.h"

volatile uint32_t* get_hex_address(int hex_index)
{
   20650:	defffe04 	addi	sp,sp,-8
   20654:	df000115 	stw	fp,4(sp)
   20658:	df000104 	addi	fp,sp,4
   2065c:	e13fff15 	stw	r4,-4(fp)
    return (volatile uint32_t*)(HEX_BASE_ADDR + hex_index * HEX_OFFSET);
   20660:	e0bfff17 	ldw	r2,-4(fp)
   20664:	10904044 	addi	r2,r2,16641
   20668:	1004913a 	slli	r2,r2,4
}
   2066c:	e037883a 	mov	sp,fp
   20670:	df000017 	ldw	fp,0(sp)
   20674:	dec00104 	addi	sp,sp,4
   20678:	f800283a 	ret

0002067c <hex_init>:

void hex_init (uint32_t hexState)
{
   2067c:	defffc04 	addi	sp,sp,-16
   20680:	dfc00315 	stw	ra,12(sp)
   20684:	df000215 	stw	fp,8(sp)
   20688:	df000204 	addi	fp,sp,8
   2068c:	e13ffe15 	stw	r4,-8(fp)
	for(int i = 0; i < 6; i++)
   20690:	e03fff15 	stw	zero,-4(fp)
   20694:	00000806 	br	206b8 <hex_init+0x3c>
	{
		IOWR_ALTERA_AVALON_PIO_DATA(get_hex_address(i), hexState);
   20698:	e13fff17 	ldw	r4,-4(fp)
   2069c:	00206500 	call	20650 <get_hex_address>
   206a0:	1007883a 	mov	r3,r2
   206a4:	e0bffe17 	ldw	r2,-8(fp)
   206a8:	18800035 	stwio	r2,0(r3)
	for(int i = 0; i < 6; i++)
   206ac:	e0bfff17 	ldw	r2,-4(fp)
   206b0:	10800044 	addi	r2,r2,1
   206b4:	e0bfff15 	stw	r2,-4(fp)
   206b8:	e0bfff17 	ldw	r2,-4(fp)
   206bc:	10800190 	cmplti	r2,r2,6
   206c0:	103ff51e 	bne	r2,zero,20698 <hex_init+0x1c>
	}
}
   206c4:	0001883a 	nop
   206c8:	0001883a 	nop
   206cc:	e037883a 	mov	sp,fp
   206d0:	dfc00117 	ldw	ra,4(sp)
   206d4:	df000017 	ldw	fp,0(sp)
   206d8:	dec00204 	addi	sp,sp,8
   206dc:	f800283a 	ret

000206e0 <set_hex_value>:

void set_hex_value (alt_u8 value, alt_u8 hex_index) {
   206e0:	defffc04 	addi	sp,sp,-16
   206e4:	dfc00315 	stw	ra,12(sp)
   206e8:	df000215 	stw	fp,8(sp)
   206ec:	df000204 	addi	fp,sp,8
   206f0:	2005883a 	mov	r2,r4
   206f4:	2807883a 	mov	r3,r5
   206f8:	e0bfff05 	stb	r2,-4(fp)
   206fc:	1805883a 	mov	r2,r3
   20700:	e0bffe05 	stb	r2,-8(fp)
	IOWR_ALTERA_AVALON_PIO_DATA(get_hex_address(hex_index), value);
   20704:	e0bffe03 	ldbu	r2,-8(fp)
   20708:	1009883a 	mov	r4,r2
   2070c:	00206500 	call	20650 <get_hex_address>
   20710:	1007883a 	mov	r3,r2
   20714:	e0bfff03 	ldbu	r2,-4(fp)
   20718:	18800035 	stwio	r2,0(r3)
}
   2071c:	0001883a 	nop
   20720:	e037883a 	mov	sp,fp
   20724:	dfc00117 	ldw	ra,4(sp)
   20728:	df000017 	ldw	fp,0(sp)
   2072c:	dec00204 	addi	sp,sp,8
   20730:	f800283a 	ret

00020734 <set_hex_state>:

void set_hex_state (alt_u8 state, alt_u8 hex_index)
{
   20734:	defffc04 	addi	sp,sp,-16
   20738:	dfc00315 	stw	ra,12(sp)
   2073c:	df000215 	stw	fp,8(sp)
   20740:	df000204 	addi	fp,sp,8
   20744:	2005883a 	mov	r2,r4
   20748:	2807883a 	mov	r3,r5
   2074c:	e0bfff05 	stb	r2,-4(fp)
   20750:	1805883a 	mov	r2,r3
   20754:	e0bffe05 	stb	r2,-8(fp)
	if(state)
   20758:	e0bfff03 	ldbu	r2,-4(fp)
   2075c:	10000726 	beq	r2,zero,2077c <set_hex_state+0x48>
		IOWR_ALTERA_AVALON_PIO_DATA(get_hex_address(hex_index), TURN_ON);	// Turn on 7Segment Display
   20760:	e0bffe03 	ldbu	r2,-8(fp)
   20764:	1009883a 	mov	r4,r2
   20768:	00206500 	call	20650 <get_hex_address>
   2076c:	1007883a 	mov	r3,r2
   20770:	00802004 	movi	r2,128
   20774:	18800035 	stwio	r2,0(r3)
	else
		IOWR_ALTERA_AVALON_PIO_DATA(get_hex_address(hex_index), TURN_OFF);	// Turn off 7Segment Display
}
   20778:	00000606 	br	20794 <set_hex_state+0x60>
		IOWR_ALTERA_AVALON_PIO_DATA(get_hex_address(hex_index), TURN_OFF);	// Turn off 7Segment Display
   2077c:	e0bffe03 	ldbu	r2,-8(fp)
   20780:	1009883a 	mov	r4,r2
   20784:	00206500 	call	20650 <get_hex_address>
   20788:	1007883a 	mov	r3,r2
   2078c:	00803fc4 	movi	r2,255
   20790:	18800035 	stwio	r2,0(r3)
}
   20794:	0001883a 	nop
   20798:	e037883a 	mov	sp,fp
   2079c:	dfc00117 	ldw	ra,4(sp)
   207a0:	df000017 	ldw	fp,0(sp)
   207a4:	dec00204 	addi	sp,sp,8
   207a8:	f800283a 	ret

000207ac <test_hex_displays>:
 */

#include "hex_displays.h"

void test_hex_displays()
{
   207ac:	defffa04 	addi	sp,sp,-24
   207b0:	dfc00515 	stw	ra,20(sp)
   207b4:	df000415 	stw	fp,16(sp)
   207b8:	df000404 	addi	fp,sp,16
	for(int i = 0; i < 6; i++)
   207bc:	e03fff15 	stw	zero,-4(fp)
   207c0:	00001106 	br	20808 <test_hex_displays+0x5c>
	{
		set_hex_value(1, i);
   207c4:	e0bfff17 	ldw	r2,-4(fp)
   207c8:	10803fcc 	andi	r2,r2,255
   207cc:	100b883a 	mov	r5,r2
   207d0:	01000044 	movi	r4,1
   207d4:	00206e00 	call	206e0 <set_hex_value>
		for(int j = 0; j < 1000000; j++)
   207d8:	e03ffe15 	stw	zero,-8(fp)
   207dc:	00000306 	br	207ec <test_hex_displays+0x40>
   207e0:	e0bffe17 	ldw	r2,-8(fp)
   207e4:	10800044 	addi	r2,r2,1
   207e8:	e0bffe15 	stw	r2,-8(fp)
   207ec:	e0fffe17 	ldw	r3,-8(fp)
   207f0:	008003f4 	movhi	r2,15
   207f4:	10908fc4 	addi	r2,r2,16959
   207f8:	10fff90e 	bge	r2,r3,207e0 <test_hex_displays+0x34>
	for(int i = 0; i < 6; i++)
   207fc:	e0bfff17 	ldw	r2,-4(fp)
   20800:	10800044 	addi	r2,r2,1
   20804:	e0bfff15 	stw	r2,-4(fp)
   20808:	e0bfff17 	ldw	r2,-4(fp)
   2080c:	10800190 	cmplti	r2,r2,6
   20810:	103fec1e 	bne	r2,zero,207c4 <test_hex_displays+0x18>
			;
	}
	for(int i = 0; i < 6; i++)
   20814:	e03ffd15 	stw	zero,-12(fp)
   20818:	00001106 	br	20860 <test_hex_displays+0xb4>
		{
			set_hex_value(0, i);
   2081c:	e0bffd17 	ldw	r2,-12(fp)
   20820:	10803fcc 	andi	r2,r2,255
   20824:	100b883a 	mov	r5,r2
   20828:	0009883a 	mov	r4,zero
   2082c:	00206e00 	call	206e0 <set_hex_value>
			for(int j = 0; j < 1000000; j++)
   20830:	e03ffc15 	stw	zero,-16(fp)
   20834:	00000306 	br	20844 <test_hex_displays+0x98>
   20838:	e0bffc17 	ldw	r2,-16(fp)
   2083c:	10800044 	addi	r2,r2,1
   20840:	e0bffc15 	stw	r2,-16(fp)
   20844:	e0fffc17 	ldw	r3,-16(fp)
   20848:	008003f4 	movhi	r2,15
   2084c:	10908fc4 	addi	r2,r2,16959
   20850:	10fff90e 	bge	r2,r3,20838 <test_hex_displays+0x8c>
	for(int i = 0; i < 6; i++)
   20854:	e0bffd17 	ldw	r2,-12(fp)
   20858:	10800044 	addi	r2,r2,1
   2085c:	e0bffd15 	stw	r2,-12(fp)
   20860:	e0bffd17 	ldw	r2,-12(fp)
   20864:	10800190 	cmplti	r2,r2,6
   20868:	103fec1e 	bne	r2,zero,2081c <test_hex_displays+0x70>
				;
		}
}
   2086c:	0001883a 	nop
   20870:	0001883a 	nop
   20874:	e037883a 	mov	sp,fp
   20878:	dfc00117 	ldw	ra,4(sp)
   2087c:	df000017 	ldw	fp,0(sp)
   20880:	dec00204 	addi	sp,sp,8
   20884:	f800283a 	ret

00020888 <__divsi3>:
   20888:	20001a16 	blt	r4,zero,208f4 <__divsi3+0x6c>
   2088c:	000f883a 	mov	r7,zero
   20890:	2800020e 	bge	r5,zero,2089c <__divsi3+0x14>
   20894:	014bc83a 	sub	r5,zero,r5
   20898:	39c0005c 	xori	r7,r7,1
   2089c:	200d883a 	mov	r6,r4
   208a0:	00c00044 	movi	r3,1
   208a4:	2900092e 	bgeu	r5,r4,208cc <__divsi3+0x44>
   208a8:	00800804 	movi	r2,32
   208ac:	00c00044 	movi	r3,1
   208b0:	00000106 	br	208b8 <__divsi3+0x30>
   208b4:	10001226 	beq	r2,zero,20900 <__divsi3+0x78>
   208b8:	294b883a 	add	r5,r5,r5
   208bc:	10bfffc4 	addi	r2,r2,-1
   208c0:	18c7883a 	add	r3,r3,r3
   208c4:	293ffb36 	bltu	r5,r4,208b4 <__divsi3+0x2c>
   208c8:	18000d26 	beq	r3,zero,20900 <__divsi3+0x78>
   208cc:	0005883a 	mov	r2,zero
   208d0:	31400236 	bltu	r6,r5,208dc <__divsi3+0x54>
   208d4:	314dc83a 	sub	r6,r6,r5
   208d8:	10c4b03a 	or	r2,r2,r3
   208dc:	1806d07a 	srli	r3,r3,1
   208e0:	280ad07a 	srli	r5,r5,1
   208e4:	183ffa1e 	bne	r3,zero,208d0 <__divsi3+0x48>
   208e8:	38000126 	beq	r7,zero,208f0 <__divsi3+0x68>
   208ec:	0085c83a 	sub	r2,zero,r2
   208f0:	f800283a 	ret
   208f4:	0109c83a 	sub	r4,zero,r4
   208f8:	01c00044 	movi	r7,1
   208fc:	003fe406 	br	20890 <__divsi3+0x8>
   20900:	0005883a 	mov	r2,zero
   20904:	003ff806 	br	208e8 <__divsi3+0x60>

00020908 <__modsi3>:
   20908:	20001716 	blt	r4,zero,20968 <__modsi3+0x60>
   2090c:	000f883a 	mov	r7,zero
   20910:	2005883a 	mov	r2,r4
   20914:	2800010e 	bge	r5,zero,2091c <__modsi3+0x14>
   20918:	014bc83a 	sub	r5,zero,r5
   2091c:	00c00044 	movi	r3,1
   20920:	2900092e 	bgeu	r5,r4,20948 <__modsi3+0x40>
   20924:	01800804 	movi	r6,32
   20928:	00c00044 	movi	r3,1
   2092c:	00000106 	br	20934 <__modsi3+0x2c>
   20930:	30001026 	beq	r6,zero,20974 <__modsi3+0x6c>
   20934:	294b883a 	add	r5,r5,r5
   20938:	31bfffc4 	addi	r6,r6,-1
   2093c:	18c7883a 	add	r3,r3,r3
   20940:	293ffb36 	bltu	r5,r4,20930 <__modsi3+0x28>
   20944:	18000b26 	beq	r3,zero,20974 <__modsi3+0x6c>
   20948:	1806d07a 	srli	r3,r3,1
   2094c:	11400136 	bltu	r2,r5,20954 <__modsi3+0x4c>
   20950:	1145c83a 	sub	r2,r2,r5
   20954:	280ad07a 	srli	r5,r5,1
   20958:	183ffb1e 	bne	r3,zero,20948 <__modsi3+0x40>
   2095c:	38000126 	beq	r7,zero,20964 <__modsi3+0x5c>
   20960:	0085c83a 	sub	r2,zero,r2
   20964:	f800283a 	ret
   20968:	0109c83a 	sub	r4,zero,r4
   2096c:	01c00044 	movi	r7,1
   20970:	003fe706 	br	20910 <__modsi3+0x8>
   20974:	2005883a 	mov	r2,r4
   20978:	003ff806 	br	2095c <__modsi3+0x54>

0002097c <__udivsi3>:
   2097c:	200d883a 	mov	r6,r4
   20980:	2900152e 	bgeu	r5,r4,209d8 <__udivsi3+0x5c>
   20984:	28001416 	blt	r5,zero,209d8 <__udivsi3+0x5c>
   20988:	00800804 	movi	r2,32
   2098c:	00c00044 	movi	r3,1
   20990:	00000206 	br	2099c <__udivsi3+0x20>
   20994:	10000e26 	beq	r2,zero,209d0 <__udivsi3+0x54>
   20998:	28000416 	blt	r5,zero,209ac <__udivsi3+0x30>
   2099c:	294b883a 	add	r5,r5,r5
   209a0:	10bfffc4 	addi	r2,r2,-1
   209a4:	18c7883a 	add	r3,r3,r3
   209a8:	293ffa36 	bltu	r5,r4,20994 <__udivsi3+0x18>
   209ac:	18000826 	beq	r3,zero,209d0 <__udivsi3+0x54>
   209b0:	0005883a 	mov	r2,zero
   209b4:	31400236 	bltu	r6,r5,209c0 <__udivsi3+0x44>
   209b8:	314dc83a 	sub	r6,r6,r5
   209bc:	10c4b03a 	or	r2,r2,r3
   209c0:	1806d07a 	srli	r3,r3,1
   209c4:	280ad07a 	srli	r5,r5,1
   209c8:	183ffa1e 	bne	r3,zero,209b4 <__udivsi3+0x38>
   209cc:	f800283a 	ret
   209d0:	0005883a 	mov	r2,zero
   209d4:	f800283a 	ret
   209d8:	00c00044 	movi	r3,1
   209dc:	003ff406 	br	209b0 <__udivsi3+0x34>

000209e0 <__umodsi3>:
   209e0:	2005883a 	mov	r2,r4
   209e4:	2900132e 	bgeu	r5,r4,20a34 <__umodsi3+0x54>
   209e8:	28001216 	blt	r5,zero,20a34 <__umodsi3+0x54>
   209ec:	01800804 	movi	r6,32
   209f0:	00c00044 	movi	r3,1
   209f4:	00000206 	br	20a00 <__umodsi3+0x20>
   209f8:	30000c26 	beq	r6,zero,20a2c <__umodsi3+0x4c>
   209fc:	28000416 	blt	r5,zero,20a10 <__umodsi3+0x30>
   20a00:	294b883a 	add	r5,r5,r5
   20a04:	31bfffc4 	addi	r6,r6,-1
   20a08:	18c7883a 	add	r3,r3,r3
   20a0c:	293ffa36 	bltu	r5,r4,209f8 <__umodsi3+0x18>
   20a10:	18000626 	beq	r3,zero,20a2c <__umodsi3+0x4c>
   20a14:	1806d07a 	srli	r3,r3,1
   20a18:	11400136 	bltu	r2,r5,20a20 <__umodsi3+0x40>
   20a1c:	1145c83a 	sub	r2,r2,r5
   20a20:	280ad07a 	srli	r5,r5,1
   20a24:	183ffb1e 	bne	r3,zero,20a14 <__umodsi3+0x34>
   20a28:	f800283a 	ret
   20a2c:	2005883a 	mov	r2,r4
   20a30:	f800283a 	ret
   20a34:	00c00044 	movi	r3,1
   20a38:	003ff606 	br	20a14 <__umodsi3+0x34>

00020a3c <_printf_r>:
   20a3c:	defffd04 	addi	sp,sp,-12
   20a40:	2805883a 	mov	r2,r5
   20a44:	dfc00015 	stw	ra,0(sp)
   20a48:	d9800115 	stw	r6,4(sp)
   20a4c:	d9c00215 	stw	r7,8(sp)
   20a50:	21400217 	ldw	r5,8(r4)
   20a54:	d9c00104 	addi	r7,sp,4
   20a58:	100d883a 	mov	r6,r2
   20a5c:	0020c1c0 	call	20c1c <___vfprintf_internal_r>
   20a60:	dfc00017 	ldw	ra,0(sp)
   20a64:	dec00304 	addi	sp,sp,12
   20a68:	f800283a 	ret

00020a6c <printf>:
   20a6c:	defffc04 	addi	sp,sp,-16
   20a70:	dfc00015 	stw	ra,0(sp)
   20a74:	d9400115 	stw	r5,4(sp)
   20a78:	d9800215 	stw	r6,8(sp)
   20a7c:	d9c00315 	stw	r7,12(sp)
   20a80:	008000f4 	movhi	r2,3
   20a84:	108a3b17 	ldw	r2,10476(r2)
   20a88:	200b883a 	mov	r5,r4
   20a8c:	d9800104 	addi	r6,sp,4
   20a90:	11000217 	ldw	r4,8(r2)
   20a94:	0022fc40 	call	22fc4 <__vfprintf_internal>
   20a98:	dfc00017 	ldw	ra,0(sp)
   20a9c:	dec00404 	addi	sp,sp,16
   20aa0:	f800283a 	ret

00020aa4 <_puts_r>:
   20aa4:	defff504 	addi	sp,sp,-44
   20aa8:	dc000815 	stw	r16,32(sp)
   20aac:	2021883a 	mov	r16,r4
   20ab0:	2809883a 	mov	r4,r5
   20ab4:	dc400915 	stw	r17,36(sp)
   20ab8:	dfc00a15 	stw	ra,40(sp)
   20abc:	2823883a 	mov	r17,r5
   20ac0:	0020b840 	call	20b84 <strlen>
   20ac4:	11000044 	addi	r4,r2,1
   20ac8:	d8800515 	stw	r2,20(sp)
   20acc:	00800044 	movi	r2,1
   20ad0:	00c000f4 	movhi	r3,3
   20ad4:	d8800715 	stw	r2,28(sp)
   20ad8:	d8800404 	addi	r2,sp,16
   20adc:	18c19e04 	addi	r3,r3,1656
   20ae0:	d8800115 	stw	r2,4(sp)
   20ae4:	00800084 	movi	r2,2
   20ae8:	dc400415 	stw	r17,16(sp)
   20aec:	d8c00615 	stw	r3,24(sp)
   20af0:	d9000315 	stw	r4,12(sp)
   20af4:	d8800215 	stw	r2,8(sp)
   20af8:	81400217 	ldw	r5,8(r16)
   20afc:	80000226 	beq	r16,zero,20b08 <_puts_r+0x64>
   20b00:	80800e17 	ldw	r2,56(r16)
   20b04:	10001426 	beq	r2,zero,20b58 <_puts_r+0xb4>
   20b08:	2880030b 	ldhu	r2,12(r5)
   20b0c:	10c8000c 	andi	r3,r2,8192
   20b10:	1800061e 	bne	r3,zero,20b2c <_puts_r+0x88>
   20b14:	28c01917 	ldw	r3,100(r5)
   20b18:	0137ffc4 	movi	r4,-8193
   20b1c:	10880014 	ori	r2,r2,8192
   20b20:	1906703a 	and	r3,r3,r4
   20b24:	2880030d 	sth	r2,12(r5)
   20b28:	28c01915 	stw	r3,100(r5)
   20b2c:	d9800104 	addi	r6,sp,4
   20b30:	8009883a 	mov	r4,r16
   20b34:	00256680 	call	25668 <__sfvwrite_r>
   20b38:	1007883a 	mov	r3,r2
   20b3c:	00800284 	movi	r2,10
   20b40:	18000a1e 	bne	r3,zero,20b6c <_puts_r+0xc8>
   20b44:	dfc00a17 	ldw	ra,40(sp)
   20b48:	dc400917 	ldw	r17,36(sp)
   20b4c:	dc000817 	ldw	r16,32(sp)
   20b50:	dec00b04 	addi	sp,sp,44
   20b54:	f800283a 	ret
   20b58:	8009883a 	mov	r4,r16
   20b5c:	d9400015 	stw	r5,0(sp)
   20b60:	00251f40 	call	251f4 <__sinit>
   20b64:	d9400017 	ldw	r5,0(sp)
   20b68:	003fe706 	br	20b08 <_puts_r+0x64>
   20b6c:	00bfffc4 	movi	r2,-1
   20b70:	003ff406 	br	20b44 <_puts_r+0xa0>

00020b74 <puts>:
   20b74:	008000f4 	movhi	r2,3
   20b78:	200b883a 	mov	r5,r4
   20b7c:	110a3b17 	ldw	r4,10476(r2)
   20b80:	0020aa41 	jmpi	20aa4 <_puts_r>

00020b84 <strlen>:
   20b84:	208000cc 	andi	r2,r4,3
   20b88:	10000926 	beq	r2,zero,20bb0 <strlen+0x2c>
   20b8c:	2005883a 	mov	r2,r4
   20b90:	00000306 	br	20ba0 <strlen+0x1c>
   20b94:	10800044 	addi	r2,r2,1
   20b98:	10c000cc 	andi	r3,r2,3
   20b9c:	18000526 	beq	r3,zero,20bb4 <strlen+0x30>
   20ba0:	10c00007 	ldb	r3,0(r2)
   20ba4:	183ffb1e 	bne	r3,zero,20b94 <strlen+0x10>
   20ba8:	1105c83a 	sub	r2,r2,r4
   20bac:	f800283a 	ret
   20bb0:	2005883a 	mov	r2,r4
   20bb4:	11400017 	ldw	r5,0(r2)
   20bb8:	01ffbff4 	movhi	r7,65279
   20bbc:	39ffbfc4 	addi	r7,r7,-257
   20bc0:	29c7883a 	add	r3,r5,r7
   20bc4:	01a02074 	movhi	r6,32897
   20bc8:	014a303a 	nor	r5,zero,r5
   20bcc:	1946703a 	and	r3,r3,r5
   20bd0:	31a02004 	addi	r6,r6,-32640
   20bd4:	1986703a 	and	r3,r3,r6
   20bd8:	1800071e 	bne	r3,zero,20bf8 <strlen+0x74>
   20bdc:	11400117 	ldw	r5,4(r2)
   20be0:	10800104 	addi	r2,r2,4
   20be4:	29c7883a 	add	r3,r5,r7
   20be8:	014a303a 	nor	r5,zero,r5
   20bec:	1946703a 	and	r3,r3,r5
   20bf0:	1986703a 	and	r3,r3,r6
   20bf4:	183ff926 	beq	r3,zero,20bdc <strlen+0x58>
   20bf8:	10c00007 	ldb	r3,0(r2)
   20bfc:	183fea26 	beq	r3,zero,20ba8 <strlen+0x24>
   20c00:	10c00047 	ldb	r3,1(r2)
   20c04:	10800044 	addi	r2,r2,1
   20c08:	183fe726 	beq	r3,zero,20ba8 <strlen+0x24>
   20c0c:	10c00047 	ldb	r3,1(r2)
   20c10:	10800044 	addi	r2,r2,1
   20c14:	183ffa1e 	bne	r3,zero,20c00 <strlen+0x7c>
   20c18:	003fe306 	br	20ba8 <strlen+0x24>

00020c1c <___vfprintf_internal_r>:
   20c1c:	deffbc04 	addi	sp,sp,-272
   20c20:	dfc04315 	stw	ra,268(sp)
   20c24:	dc803c15 	stw	r18,240(sp)
   20c28:	dc003a15 	stw	r16,232(sp)
   20c2c:	d9000515 	stw	r4,20(sp)
   20c30:	2021883a 	mov	r16,r4
   20c34:	d9400415 	stw	r5,16(sp)
   20c38:	3025883a 	mov	r18,r6
   20c3c:	d9c00715 	stw	r7,28(sp)
   20c40:	df004215 	stw	fp,264(sp)
   20c44:	ddc04115 	stw	r23,260(sp)
   20c48:	dd804015 	stw	r22,256(sp)
   20c4c:	dd403f15 	stw	r21,252(sp)
   20c50:	dd003e15 	stw	r20,248(sp)
   20c54:	dcc03d15 	stw	r19,244(sp)
   20c58:	dc403b15 	stw	r17,236(sp)
   20c5c:	0025c540 	call	25c54 <_localeconv_r>
   20c60:	10800017 	ldw	r2,0(r2)
   20c64:	1009883a 	mov	r4,r2
   20c68:	d8800d15 	stw	r2,52(sp)
   20c6c:	0020b840 	call	20b84 <strlen>
   20c70:	d8800c15 	stw	r2,48(sp)
   20c74:	80000226 	beq	r16,zero,20c80 <___vfprintf_internal_r+0x64>
   20c78:	80800e17 	ldw	r2,56(r16)
   20c7c:	10022b26 	beq	r2,zero,2152c <___vfprintf_internal_r+0x910>
   20c80:	d9400417 	ldw	r5,16(sp)
   20c84:	2880030b 	ldhu	r2,12(r5)
   20c88:	10c8000c 	andi	r3,r2,8192
   20c8c:	1800071e 	bne	r3,zero,20cac <___vfprintf_internal_r+0x90>
   20c90:	28c01917 	ldw	r3,100(r5)
   20c94:	11080014 	ori	r4,r2,8192
   20c98:	00b7ffc4 	movi	r2,-8193
   20c9c:	1886703a 	and	r3,r3,r2
   20ca0:	2900030d 	sth	r4,12(r5)
   20ca4:	2005883a 	mov	r2,r4
   20ca8:	28c01915 	stw	r3,100(r5)
   20cac:	10c0020c 	andi	r3,r2,8
   20cb0:	1800f626 	beq	r3,zero,2108c <___vfprintf_internal_r+0x470>
   20cb4:	d8c00417 	ldw	r3,16(sp)
   20cb8:	18c00417 	ldw	r3,16(r3)
   20cbc:	1800f326 	beq	r3,zero,2108c <___vfprintf_internal_r+0x470>
   20cc0:	1080068c 	andi	r2,r2,26
   20cc4:	10800298 	cmpnei	r2,r2,10
   20cc8:	1000f926 	beq	r2,zero,210b0 <___vfprintf_internal_r+0x494>
   20ccc:	dc402a04 	addi	r17,sp,168
   20cd0:	04c000f4 	movhi	r19,3
   20cd4:	9029883a 	mov	r20,r18
   20cd8:	dc401d15 	stw	r17,116(sp)
   20cdc:	d8001f15 	stw	zero,124(sp)
   20ce0:	d8001e15 	stw	zero,120(sp)
   20ce4:	d8000915 	stw	zero,36(sp)
   20ce8:	d8000a15 	stw	zero,40(sp)
   20cec:	d8000b15 	stw	zero,44(sp)
   20cf0:	d8000e15 	stw	zero,56(sp)
   20cf4:	d8001115 	stw	zero,68(sp)
   20cf8:	d8000615 	stw	zero,24(sp)
   20cfc:	9cc1b004 	addi	r19,r19,1728
   20d00:	8825883a 	mov	r18,r17
   20d04:	a0800007 	ldb	r2,0(r20)
   20d08:	1000cd26 	beq	r2,zero,21040 <___vfprintf_internal_r+0x424>
   20d0c:	a021883a 	mov	r16,r20
   20d10:	00000306 	br	20d20 <___vfprintf_internal_r+0x104>
   20d14:	80800047 	ldb	r2,1(r16)
   20d18:	84000044 	addi	r16,r16,1
   20d1c:	10015126 	beq	r2,zero,21264 <___vfprintf_internal_r+0x648>
   20d20:	10800958 	cmpnei	r2,r2,37
   20d24:	103ffb1e 	bne	r2,zero,20d14 <___vfprintf_internal_r+0xf8>
   20d28:	852fc83a 	sub	r23,r16,r20
   20d2c:	85014f1e 	bne	r16,r20,2126c <___vfprintf_internal_r+0x650>
   20d30:	80800003 	ldbu	r2,0(r16)
   20d34:	10803fcc 	andi	r2,r2,255
   20d38:	1080201c 	xori	r2,r2,128
   20d3c:	10bfe004 	addi	r2,r2,-128
   20d40:	1000bf26 	beq	r2,zero,21040 <___vfprintf_internal_r+0x424>
   20d44:	82c00047 	ldb	r11,1(r16)
   20d48:	85000044 	addi	r20,r16,1
   20d4c:	d8001645 	stb	zero,89(sp)
   20d50:	023fffc4 	movi	r8,-1
   20d54:	0021883a 	mov	r16,zero
   20d58:	001b883a 	mov	r13,zero
   20d5c:	a5000044 	addi	r20,r20,1
   20d60:	5839883a 	mov	fp,r11
   20d64:	e0bff804 	addi	r2,fp,-32
   20d68:	10c01668 	cmpgeui	r3,r2,89
   20d6c:	18006a1e 	bne	r3,zero,20f18 <___vfprintf_internal_r+0x2fc>
   20d70:	100490ba 	slli	r2,r2,2
   20d74:	00c000b4 	movhi	r3,2
   20d78:	10c7883a 	add	r3,r2,r3
   20d7c:	18836117 	ldw	r2,3460(r3)
   20d80:	1000683a 	jmp	r2
   20d84:	000215fc 	xorhi	zero,zero,2135
   20d88:	00020f18 	cmpnei	zero,zero,2108
   20d8c:	00020f18 	cmpnei	zero,zero,2108
   20d90:	000215f0 	cmpltui	zero,zero,2135
   20d94:	00020f18 	cmpnei	zero,zero,2108
   20d98:	00020f18 	cmpnei	zero,zero,2108
   20d9c:	00020f18 	cmpnei	zero,zero,2108
   20da0:	00020f18 	cmpnei	zero,zero,2108
   20da4:	00020f18 	cmpnei	zero,zero,2108
   20da8:	00020f18 	cmpnei	zero,zero,2108
   20dac:	0002156c 	andhi	zero,zero,2133
   20db0:	000215e0 	cmpeqi	zero,zero,2135
   20db4:	00020f18 	cmpnei	zero,zero,2108
   20db8:	00021584 	movi	zero,2134
   20dbc:	00021590 	cmplti	zero,zero,2134
   20dc0:	00020f18 	cmpnei	zero,zero,2108
   20dc4:	000215d4 	movui	zero,2135
   20dc8:	00020ee8 	cmpgeui	zero,zero,2107
   20dcc:	00020ee8 	cmpgeui	zero,zero,2107
   20dd0:	00020ee8 	cmpgeui	zero,zero,2107
   20dd4:	00020ee8 	cmpgeui	zero,zero,2107
   20dd8:	00020ee8 	cmpgeui	zero,zero,2107
   20ddc:	00020ee8 	cmpgeui	zero,zero,2107
   20de0:	00020ee8 	cmpgeui	zero,zero,2107
   20de4:	00020ee8 	cmpgeui	zero,zero,2107
   20de8:	00020ee8 	cmpgeui	zero,zero,2107
   20dec:	00020f18 	cmpnei	zero,zero,2108
   20df0:	00020f18 	cmpnei	zero,zero,2108
   20df4:	00020f18 	cmpnei	zero,zero,2108
   20df8:	00020f18 	cmpnei	zero,zero,2108
   20dfc:	00020f18 	cmpnei	zero,zero,2108
   20e00:	00020f18 	cmpnei	zero,zero,2108
   20e04:	00020f18 	cmpnei	zero,zero,2108
   20e08:	00020f18 	cmpnei	zero,zero,2108
   20e0c:	00020f18 	cmpnei	zero,zero,2108
   20e10:	00020f18 	cmpnei	zero,zero,2108
   20e14:	000210fc 	xorhi	zero,zero,2115
   20e18:	00021398 	cmpnei	zero,zero,2126
   20e1c:	00020f18 	cmpnei	zero,zero,2108
   20e20:	00021398 	cmpnei	zero,zero,2126
   20e24:	00020f18 	cmpnei	zero,zero,2108
   20e28:	00020f18 	cmpnei	zero,zero,2108
   20e2c:	00020f18 	cmpnei	zero,zero,2108
   20e30:	00020f18 	cmpnei	zero,zero,2108
   20e34:	00021648 	cmpgei	zero,zero,2137
   20e38:	00020f18 	cmpnei	zero,zero,2108
   20e3c:	00020f18 	cmpnei	zero,zero,2108
   20e40:	00021164 	muli	zero,zero,2117
   20e44:	00020f18 	cmpnei	zero,zero,2108
   20e48:	00020f18 	cmpnei	zero,zero,2108
   20e4c:	00020f18 	cmpnei	zero,zero,2108
   20e50:	00020f18 	cmpnei	zero,zero,2108
   20e54:	00020f18 	cmpnei	zero,zero,2108
   20e58:	0002118c 	andi	zero,zero,2118
   20e5c:	00020f18 	cmpnei	zero,zero,2108
   20e60:	00020f18 	cmpnei	zero,zero,2108
   20e64:	000221d4 	movui	zero,2183
   20e68:	00020f18 	cmpnei	zero,zero,2108
   20e6c:	00020f18 	cmpnei	zero,zero,2108
   20e70:	00020f18 	cmpnei	zero,zero,2108
   20e74:	00020f18 	cmpnei	zero,zero,2108
   20e78:	00020f18 	cmpnei	zero,zero,2108
   20e7c:	00020f18 	cmpnei	zero,zero,2108
   20e80:	00020f18 	cmpnei	zero,zero,2108
   20e84:	00020f18 	cmpnei	zero,zero,2108
   20e88:	00020f18 	cmpnei	zero,zero,2108
   20e8c:	00020f18 	cmpnei	zero,zero,2108
   20e90:	00021660 	cmpeqi	zero,zero,2137
   20e94:	00021100 	call	2110 <__reset-0x1def0>
   20e98:	00021398 	cmpnei	zero,zero,2126
   20e9c:	00021398 	cmpnei	zero,zero,2126
   20ea0:	00021398 	cmpnei	zero,zero,2126
   20ea4:	00021654 	movui	zero,2137
   20ea8:	00021100 	call	2110 <__reset-0x1def0>
   20eac:	00020f18 	cmpnei	zero,zero,2108
   20eb0:	00020f18 	cmpnei	zero,zero,2108
   20eb4:	00021620 	cmpeqi	zero,zero,2136
   20eb8:	00020f18 	cmpnei	zero,zero,2108
   20ebc:	0002171c 	xori	zero,zero,2140
   20ec0:	00021168 	cmpgeui	zero,zero,2117
   20ec4:	000216e4 	muli	zero,zero,2139
   20ec8:	000216d8 	cmpnei	zero,zero,2139
   20ecc:	00020f18 	cmpnei	zero,zero,2108
   20ed0:	00021688 	cmpgei	zero,zero,2138
   20ed4:	00020f18 	cmpnei	zero,zero,2108
   20ed8:	00021190 	cmplti	zero,zero,2118
   20edc:	00020f18 	cmpnei	zero,zero,2108
   20ee0:	00020f18 	cmpnei	zero,zero,2108
   20ee4:	00022244 	movi	zero,2185
   20ee8:	0021883a 	mov	r16,zero
   20eec:	e0bff404 	addi	r2,fp,-48
   20ef0:	a7000007 	ldb	fp,0(r20)
   20ef4:	840002a4 	muli	r16,r16,10
   20ef8:	a5000044 	addi	r20,r20,1
   20efc:	1421883a 	add	r16,r2,r16
   20f00:	e0bff404 	addi	r2,fp,-48
   20f04:	10c002b0 	cmpltui	r3,r2,10
   20f08:	183ff91e 	bne	r3,zero,20ef0 <___vfprintf_internal_r+0x2d4>
   20f0c:	e0bff804 	addi	r2,fp,-32
   20f10:	10c01668 	cmpgeui	r3,r2,89
   20f14:	183f9626 	beq	r3,zero,20d70 <___vfprintf_internal_r+0x154>
   20f18:	e0004926 	beq	fp,zero,21040 <___vfprintf_internal_r+0x424>
   20f1c:	df002005 	stb	fp,128(sp)
   20f20:	d8001645 	stb	zero,89(sp)
   20f24:	03000044 	movi	r12,1
   20f28:	01c00044 	movi	r7,1
   20f2c:	dd402004 	addi	r21,sp,128
   20f30:	6807883a 	mov	r3,r13
   20f34:	0011883a 	mov	r8,zero
   20f38:	d8000815 	stw	zero,32(sp)
   20f3c:	1b80008c 	andi	r14,r3,2
   20f40:	70000126 	beq	r14,zero,20f48 <___vfprintf_internal_r+0x32c>
   20f44:	63000084 	addi	r12,r12,2
   20f48:	1b40210c 	andi	r13,r3,132
   20f4c:	6800021e 	bne	r13,zero,20f58 <___vfprintf_internal_r+0x33c>
   20f50:	832dc83a 	sub	r22,r16,r12
   20f54:	05832916 	blt	zero,r22,21bfc <___vfprintf_internal_r+0xfe0>
   20f58:	d8801647 	ldb	r2,89(sp)
   20f5c:	dd801f17 	ldw	r22,124(sp)
   20f60:	10000c26 	beq	r2,zero,20f94 <___vfprintf_internal_r+0x378>
   20f64:	d8801e17 	ldw	r2,120(sp)
   20f68:	d9001644 	addi	r4,sp,89
   20f6c:	b5800044 	addi	r22,r22,1
   20f70:	10800044 	addi	r2,r2,1
   20f74:	91000015 	stw	r4,0(r18)
   20f78:	01000044 	movi	r4,1
   20f7c:	d8801e15 	stw	r2,120(sp)
   20f80:	91000115 	stw	r4,4(r18)
   20f84:	dd801f15 	stw	r22,124(sp)
   20f88:	10800208 	cmpgei	r2,r2,8
   20f8c:	10037b1e 	bne	r2,zero,21d7c <___vfprintf_internal_r+0x1160>
   20f90:	94800204 	addi	r18,r18,8
   20f94:	70000c26 	beq	r14,zero,20fc8 <___vfprintf_internal_r+0x3ac>
   20f98:	d8801e17 	ldw	r2,120(sp)
   20f9c:	d9001684 	addi	r4,sp,90
   20fa0:	b5800084 	addi	r22,r22,2
   20fa4:	10800044 	addi	r2,r2,1
   20fa8:	91000015 	stw	r4,0(r18)
   20fac:	01000084 	movi	r4,2
   20fb0:	d8801e15 	stw	r2,120(sp)
   20fb4:	91000115 	stw	r4,4(r18)
   20fb8:	dd801f15 	stw	r22,124(sp)
   20fbc:	10800208 	cmpgei	r2,r2,8
   20fc0:	1003821e 	bne	r2,zero,21dcc <___vfprintf_internal_r+0x11b0>
   20fc4:	94800204 	addi	r18,r18,8
   20fc8:	6b402018 	cmpnei	r13,r13,128
   20fcc:	68023426 	beq	r13,zero,218a0 <___vfprintf_internal_r+0xc84>
   20fd0:	41efc83a 	sub	r23,r8,r7
   20fd4:	05c27416 	blt	zero,r23,219a8 <___vfprintf_internal_r+0xd8c>
   20fd8:	1880400c 	andi	r2,r3,256
   20fdc:	1001db1e 	bne	r2,zero,2174c <___vfprintf_internal_r+0xb30>
   20fe0:	d8801e17 	ldw	r2,120(sp)
   20fe4:	3d89883a 	add	r4,r7,r22
   20fe8:	95400015 	stw	r21,0(r18)
   20fec:	10800044 	addi	r2,r2,1
   20ff0:	d8801e15 	stw	r2,120(sp)
   20ff4:	91c00115 	stw	r7,4(r18)
   20ff8:	d9001f15 	stw	r4,124(sp)
   20ffc:	10800208 	cmpgei	r2,r2,8
   21000:	1003521e 	bne	r2,zero,21d4c <___vfprintf_internal_r+0x1130>
   21004:	94800204 	addi	r18,r18,8
   21008:	18c0010c 	andi	r3,r3,4
   2100c:	18000226 	beq	r3,zero,21018 <___vfprintf_internal_r+0x3fc>
   21010:	8339c83a 	sub	fp,r16,r12
   21014:	0700ac16 	blt	zero,fp,212c8 <___vfprintf_internal_r+0x6ac>
   21018:	8300010e 	bge	r16,r12,21020 <___vfprintf_internal_r+0x404>
   2101c:	6021883a 	mov	r16,r12
   21020:	d8800617 	ldw	r2,24(sp)
   21024:	1405883a 	add	r2,r2,r16
   21028:	d8800615 	stw	r2,24(sp)
   2102c:	2002b01e 	bne	r4,zero,21af0 <___vfprintf_internal_r+0xed4>
   21030:	a0800007 	ldb	r2,0(r20)
   21034:	d8001e15 	stw	zero,120(sp)
   21038:	8825883a 	mov	r18,r17
   2103c:	103f331e 	bne	r2,zero,20d0c <___vfprintf_internal_r+0xf0>
   21040:	d8801f17 	ldw	r2,124(sp)
   21044:	10063b1e 	bne	r2,zero,22934 <___vfprintf_internal_r+0x1d18>
   21048:	d8800417 	ldw	r2,16(sp)
   2104c:	1080030b 	ldhu	r2,12(r2)
   21050:	1080100c 	andi	r2,r2,64
   21054:	10075f1e 	bne	r2,zero,22dd4 <___vfprintf_internal_r+0x21b8>
   21058:	d8800617 	ldw	r2,24(sp)
   2105c:	dfc04317 	ldw	ra,268(sp)
   21060:	df004217 	ldw	fp,264(sp)
   21064:	ddc04117 	ldw	r23,260(sp)
   21068:	dd804017 	ldw	r22,256(sp)
   2106c:	dd403f17 	ldw	r21,252(sp)
   21070:	dd003e17 	ldw	r20,248(sp)
   21074:	dcc03d17 	ldw	r19,244(sp)
   21078:	dc803c17 	ldw	r18,240(sp)
   2107c:	dc403b17 	ldw	r17,236(sp)
   21080:	dc003a17 	ldw	r16,232(sp)
   21084:	dec04404 	addi	sp,sp,272
   21088:	f800283a 	ret
   2108c:	d9400417 	ldw	r5,16(sp)
   21090:	d9000517 	ldw	r4,20(sp)
   21094:	00230a40 	call	230a4 <__swsetup_r>
   21098:	10074e1e 	bne	r2,zero,22dd4 <___vfprintf_internal_r+0x21b8>
   2109c:	d8800417 	ldw	r2,16(sp)
   210a0:	1080030b 	ldhu	r2,12(r2)
   210a4:	1080068c 	andi	r2,r2,26
   210a8:	10800298 	cmpnei	r2,r2,10
   210ac:	103f071e 	bne	r2,zero,20ccc <___vfprintf_internal_r+0xb0>
   210b0:	d8800417 	ldw	r2,16(sp)
   210b4:	1080038f 	ldh	r2,14(r2)
   210b8:	103f0416 	blt	r2,zero,20ccc <___vfprintf_internal_r+0xb0>
   210bc:	d9c00717 	ldw	r7,28(sp)
   210c0:	d9400417 	ldw	r5,16(sp)
   210c4:	d9000517 	ldw	r4,20(sp)
   210c8:	900d883a 	mov	r6,r18
   210cc:	dfc04317 	ldw	ra,268(sp)
   210d0:	df004217 	ldw	fp,264(sp)
   210d4:	ddc04117 	ldw	r23,260(sp)
   210d8:	dd804017 	ldw	r22,256(sp)
   210dc:	dd403f17 	ldw	r21,252(sp)
   210e0:	dd003e17 	ldw	r20,248(sp)
   210e4:	dcc03d17 	ldw	r19,244(sp)
   210e8:	dc803c17 	ldw	r18,240(sp)
   210ec:	dc403b17 	ldw	r17,236(sp)
   210f0:	dc003a17 	ldw	r16,232(sp)
   210f4:	dec04404 	addi	sp,sp,272
   210f8:	0022fe01 	jmpi	22fe0 <__sbprintf>
   210fc:	6b400414 	ori	r13,r13,16
   21100:	6880080c 	andi	r2,r13,32
   21104:	1000dc26 	beq	r2,zero,21478 <___vfprintf_internal_r+0x85c>
   21108:	d8c00717 	ldw	r3,28(sp)
   2110c:	18800117 	ldw	r2,4(r3)
   21110:	1d800017 	ldw	r22,0(r3)
   21114:	18c00204 	addi	r3,r3,8
   21118:	d8c00715 	stw	r3,28(sp)
   2111c:	102f883a 	mov	r23,r2
   21120:	1000e316 	blt	r2,zero,214b0 <___vfprintf_internal_r+0x894>
   21124:	40bfffd8 	cmpnei	r2,r8,-1
   21128:	d9001643 	ldbu	r4,89(sp)
   2112c:	10010626 	beq	r2,zero,21548 <___vfprintf_internal_r+0x92c>
   21130:	00ffdfc4 	movi	r3,-129
   21134:	b5c4b03a 	or	r2,r22,r23
   21138:	68c6703a 	and	r3,r13,r3
   2113c:	1001011e 	bne	r2,zero,21544 <___vfprintf_internal_r+0x928>
   21140:	00800044 	movi	r2,1
   21144:	4002531e 	bne	r8,zero,21a94 <___vfprintf_internal_r+0xe78>
   21148:	1003ad1e 	bne	r2,zero,22000 <___vfprintf_internal_r+0x13e4>
   2114c:	69c0004c 	andi	r7,r13,1
   21150:	3803f626 	beq	r7,zero,2212c <___vfprintf_internal_r+0x1510>
   21154:	00800c04 	movi	r2,48
   21158:	d88029c5 	stb	r2,167(sp)
   2115c:	dd4029c4 	addi	r21,sp,167
   21160:	00003606 	br	2123c <___vfprintf_internal_r+0x620>
   21164:	6b400414 	ori	r13,r13,16
   21168:	6880080c 	andi	r2,r13,32
   2116c:	1000e326 	beq	r2,zero,214fc <___vfprintf_internal_r+0x8e0>
   21170:	d8c00717 	ldw	r3,28(sp)
   21174:	0005883a 	mov	r2,zero
   21178:	1d800017 	ldw	r22,0(r3)
   2117c:	1dc00117 	ldw	r23,4(r3)
   21180:	18c00204 	addi	r3,r3,8
   21184:	d8c00715 	stw	r3,28(sp)
   21188:	00000906 	br	211b0 <___vfprintf_internal_r+0x594>
   2118c:	6b400414 	ori	r13,r13,16
   21190:	6880080c 	andi	r2,r13,32
   21194:	1000cd26 	beq	r2,zero,214cc <___vfprintf_internal_r+0x8b0>
   21198:	d8c00717 	ldw	r3,28(sp)
   2119c:	00800044 	movi	r2,1
   211a0:	1d800017 	ldw	r22,0(r3)
   211a4:	1dc00117 	ldw	r23,4(r3)
   211a8:	18c00204 	addi	r3,r3,8
   211ac:	d8c00715 	stw	r3,28(sp)
   211b0:	0009883a 	mov	r4,zero
   211b4:	d9001645 	stb	r4,89(sp)
   211b8:	40ffffe0 	cmpeqi	r3,r8,-1
   211bc:	1800051e 	bne	r3,zero,211d4 <___vfprintf_internal_r+0x5b8>
   211c0:	00ffdfc4 	movi	r3,-129
   211c4:	b5cab03a 	or	r5,r22,r23
   211c8:	68c6703a 	and	r3,r13,r3
   211cc:	283fdd26 	beq	r5,zero,21144 <___vfprintf_internal_r+0x528>
   211d0:	181b883a 	mov	r13,r3
   211d4:	10c00060 	cmpeqi	r3,r2,1
   211d8:	1800db1e 	bne	r3,zero,21548 <___vfprintf_internal_r+0x92c>
   211dc:	108000a0 	cmpeqi	r2,r2,2
   211e0:	1002331e 	bne	r2,zero,21ab0 <___vfprintf_internal_r+0xe94>
   211e4:	882b883a 	mov	r21,r17
   211e8:	b006d0fa 	srli	r3,r22,3
   211ec:	b80c977a 	slli	r6,r23,29
   211f0:	b82ed0fa 	srli	r23,r23,3
   211f4:	b58001cc 	andi	r22,r22,7
   211f8:	b0800c04 	addi	r2,r22,48
   211fc:	30ecb03a 	or	r22,r6,r3
   21200:	a8bfffc5 	stb	r2,-1(r21)
   21204:	b5c6b03a 	or	r3,r22,r23
   21208:	a80b883a 	mov	r5,r21
   2120c:	ad7fffc4 	addi	r21,r21,-1
   21210:	183ff51e 	bne	r3,zero,211e8 <___vfprintf_internal_r+0x5cc>
   21214:	68c0004c 	andi	r3,r13,1
   21218:	18023226 	beq	r3,zero,21ae4 <___vfprintf_internal_r+0xec8>
   2121c:	10800c18 	cmpnei	r2,r2,48
   21220:	10023026 	beq	r2,zero,21ae4 <___vfprintf_internal_r+0xec8>
   21224:	297fff84 	addi	r5,r5,-2
   21228:	00800c04 	movi	r2,48
   2122c:	a8bfffc5 	stb	r2,-1(r21)
   21230:	894fc83a 	sub	r7,r17,r5
   21234:	6807883a 	mov	r3,r13
   21238:	282b883a 	mov	r21,r5
   2123c:	4019883a 	mov	r12,r8
   21240:	41c0010e 	bge	r8,r7,21248 <___vfprintf_internal_r+0x62c>
   21244:	3819883a 	mov	r12,r7
   21248:	d8000815 	stw	zero,32(sp)
   2124c:	21003fcc 	andi	r4,r4,255
   21250:	2100201c 	xori	r4,r4,128
   21254:	213fe004 	addi	r4,r4,-128
   21258:	203f3826 	beq	r4,zero,20f3c <___vfprintf_internal_r+0x320>
   2125c:	63000044 	addi	r12,r12,1
   21260:	003f3606 	br	20f3c <___vfprintf_internal_r+0x320>
   21264:	852fc83a 	sub	r23,r16,r20
   21268:	853f7526 	beq	r16,r20,21040 <___vfprintf_internal_r+0x424>
   2126c:	dd801f17 	ldw	r22,124(sp)
   21270:	d8801e17 	ldw	r2,120(sp)
   21274:	95000015 	stw	r20,0(r18)
   21278:	b5ed883a 	add	r22,r22,r23
   2127c:	10800044 	addi	r2,r2,1
   21280:	d8801e15 	stw	r2,120(sp)
   21284:	95c00115 	stw	r23,4(r18)
   21288:	dd801f15 	stw	r22,124(sp)
   2128c:	10800208 	cmpgei	r2,r2,8
   21290:	1000061e 	bne	r2,zero,212ac <___vfprintf_internal_r+0x690>
   21294:	94800204 	addi	r18,r18,8
   21298:	d8c00617 	ldw	r3,24(sp)
   2129c:	80800003 	ldbu	r2,0(r16)
   212a0:	1dc7883a 	add	r3,r3,r23
   212a4:	d8c00615 	stw	r3,24(sp)
   212a8:	003ea206 	br	20d34 <___vfprintf_internal_r+0x118>
   212ac:	d9400417 	ldw	r5,16(sp)
   212b0:	d9000517 	ldw	r4,20(sp)
   212b4:	d9801d04 	addi	r6,sp,116
   212b8:	00284100 	call	28410 <__sprint_r>
   212bc:	103f621e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   212c0:	8825883a 	mov	r18,r17
   212c4:	003ff406 	br	21298 <___vfprintf_internal_r+0x67c>
   212c8:	05c000f4 	movhi	r23,3
   212cc:	e0c00450 	cmplti	r3,fp,17
   212d0:	d8801e17 	ldw	r2,120(sp)
   212d4:	bdc1b404 	addi	r23,r23,1744
   212d8:	18001e1e 	bne	r3,zero,21354 <___vfprintf_internal_r+0x738>
   212dc:	9007883a 	mov	r3,r18
   212e0:	dd400517 	ldw	r21,20(sp)
   212e4:	05800404 	movi	r22,16
   212e8:	6025883a 	mov	r18,r12
   212ec:	00000406 	br	21300 <___vfprintf_internal_r+0x6e4>
   212f0:	e73ffc04 	addi	fp,fp,-16
   212f4:	e1400448 	cmpgei	r5,fp,17
   212f8:	18c00204 	addi	r3,r3,8
   212fc:	28001326 	beq	r5,zero,2134c <___vfprintf_internal_r+0x730>
   21300:	10800044 	addi	r2,r2,1
   21304:	21000404 	addi	r4,r4,16
   21308:	1dc00015 	stw	r23,0(r3)
   2130c:	1d800115 	stw	r22,4(r3)
   21310:	d9001f15 	stw	r4,124(sp)
   21314:	d8801e15 	stw	r2,120(sp)
   21318:	11400208 	cmpgei	r5,r2,8
   2131c:	283ff426 	beq	r5,zero,212f0 <___vfprintf_internal_r+0x6d4>
   21320:	d9400417 	ldw	r5,16(sp)
   21324:	d9801d04 	addi	r6,sp,116
   21328:	a809883a 	mov	r4,r21
   2132c:	00284100 	call	28410 <__sprint_r>
   21330:	103f451e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   21334:	e73ffc04 	addi	fp,fp,-16
   21338:	e1400448 	cmpgei	r5,fp,17
   2133c:	d9001f17 	ldw	r4,124(sp)
   21340:	d8801e17 	ldw	r2,120(sp)
   21344:	8807883a 	mov	r3,r17
   21348:	283fed1e 	bne	r5,zero,21300 <___vfprintf_internal_r+0x6e4>
   2134c:	9019883a 	mov	r12,r18
   21350:	1825883a 	mov	r18,r3
   21354:	10800044 	addi	r2,r2,1
   21358:	2709883a 	add	r4,r4,fp
   2135c:	d8801e15 	stw	r2,120(sp)
   21360:	95c00015 	stw	r23,0(r18)
   21364:	97000115 	stw	fp,4(r18)
   21368:	d9001f15 	stw	r4,124(sp)
   2136c:	10800210 	cmplti	r2,r2,8
   21370:	103f291e 	bne	r2,zero,21018 <___vfprintf_internal_r+0x3fc>
   21374:	d9400417 	ldw	r5,16(sp)
   21378:	d9000517 	ldw	r4,20(sp)
   2137c:	d9801d04 	addi	r6,sp,116
   21380:	db000815 	stw	r12,32(sp)
   21384:	00284100 	call	28410 <__sprint_r>
   21388:	103f2f1e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   2138c:	d9001f17 	ldw	r4,124(sp)
   21390:	db000817 	ldw	r12,32(sp)
   21394:	003f2006 	br	21018 <___vfprintf_internal_r+0x3fc>
   21398:	d8c00717 	ldw	r3,28(sp)
   2139c:	6880020c 	andi	r2,r13,8
   213a0:	19000204 	addi	r4,r3,8
   213a4:	d9000f15 	stw	r4,60(sp)
   213a8:	1003621e 	bne	r2,zero,22134 <___vfprintf_internal_r+0x1518>
   213ac:	d8800717 	ldw	r2,28(sp)
   213b0:	10c00017 	ldw	r3,0(r2)
   213b4:	10800117 	ldw	r2,4(r2)
   213b8:	d8c00a15 	stw	r3,40(sp)
   213bc:	d8800b15 	stw	r2,44(sp)
   213c0:	ddc00b17 	ldw	r23,44(sp)
   213c4:	dd800a17 	ldw	r22,40(sp)
   213c8:	00a00034 	movhi	r2,32768
   213cc:	10bfffc4 	addi	r2,r2,-1
   213d0:	b8aa703a 	and	r21,r23,r2
   213d4:	01dffc34 	movhi	r7,32752
   213d8:	01bfffc4 	movi	r6,-1
   213dc:	39ffffc4 	addi	r7,r7,-1
   213e0:	b009883a 	mov	r4,r22
   213e4:	a80b883a 	mov	r5,r21
   213e8:	da000815 	stw	r8,32(sp)
   213ec:	db400715 	stw	r13,28(sp)
   213f0:	002d7500 	call	2d750 <__unorddf2>
   213f4:	db400717 	ldw	r13,28(sp)
   213f8:	da000817 	ldw	r8,32(sp)
   213fc:	10044f1e 	bne	r2,zero,2253c <___vfprintf_internal_r+0x1920>
   21400:	01dffc34 	movhi	r7,32752
   21404:	01bfffc4 	movi	r6,-1
   21408:	39ffffc4 	addi	r7,r7,-1
   2140c:	b009883a 	mov	r4,r22
   21410:	a80b883a 	mov	r5,r21
   21414:	002c5e40 	call	2c5e4 <__ledf2>
   21418:	db400717 	ldw	r13,28(sp)
   2141c:	da000817 	ldw	r8,32(sp)
   21420:	0084460e 	bge	zero,r2,2253c <___vfprintf_internal_r+0x1920>
   21424:	000d883a 	mov	r6,zero
   21428:	000f883a 	mov	r7,zero
   2142c:	b009883a 	mov	r4,r22
   21430:	b80b883a 	mov	r5,r23
   21434:	002c5e40 	call	2c5e4 <__ledf2>
   21438:	db400717 	ldw	r13,28(sp)
   2143c:	10052616 	blt	r2,zero,228d8 <___vfprintf_internal_r+0x1cbc>
   21440:	d9001643 	ldbu	r4,89(sp)
   21444:	e0801210 	cmplti	r2,fp,72
   21448:	1005091e 	bne	r2,zero,22870 <___vfprintf_internal_r+0x1c54>
   2144c:	054000f4 	movhi	r21,3
   21450:	ad41a004 	addi	r21,r21,1664
   21454:	d8800f17 	ldw	r2,60(sp)
   21458:	00ffdfc4 	movi	r3,-129
   2145c:	68c6703a 	and	r3,r13,r3
   21460:	d8800715 	stw	r2,28(sp)
   21464:	030000c4 	movi	r12,3
   21468:	01c000c4 	movi	r7,3
   2146c:	0011883a 	mov	r8,zero
   21470:	d8000815 	stw	zero,32(sp)
   21474:	003f7506 	br	2124c <___vfprintf_internal_r+0x630>
   21478:	d8c00717 	ldw	r3,28(sp)
   2147c:	6880040c 	andi	r2,r13,16
   21480:	1d800017 	ldw	r22,0(r3)
   21484:	18c00104 	addi	r3,r3,4
   21488:	d8c00715 	stw	r3,28(sp)
   2148c:	10002a1e 	bne	r2,zero,21538 <___vfprintf_internal_r+0x91c>
   21490:	6880100c 	andi	r2,r13,64
   21494:	10002826 	beq	r2,zero,21538 <___vfprintf_internal_r+0x91c>
   21498:	b5bfffcc 	andi	r22,r22,65535
   2149c:	b5a0001c 	xori	r22,r22,32768
   214a0:	b5a00004 	addi	r22,r22,-32768
   214a4:	b02fd7fa 	srai	r23,r22,31
   214a8:	b805883a 	mov	r2,r23
   214ac:	103f1d0e 	bge	r2,zero,21124 <___vfprintf_internal_r+0x508>
   214b0:	b004c03a 	cmpne	r2,r22,zero
   214b4:	05efc83a 	sub	r23,zero,r23
   214b8:	b8afc83a 	sub	r23,r23,r2
   214bc:	05adc83a 	sub	r22,zero,r22
   214c0:	01000b44 	movi	r4,45
   214c4:	00800044 	movi	r2,1
   214c8:	003f3a06 	br	211b4 <___vfprintf_internal_r+0x598>
   214cc:	d8c00717 	ldw	r3,28(sp)
   214d0:	6880040c 	andi	r2,r13,16
   214d4:	1d800017 	ldw	r22,0(r3)
   214d8:	18c00104 	addi	r3,r3,4
   214dc:	d8c00715 	stw	r3,28(sp)
   214e0:	1000031e 	bne	r2,zero,214f0 <___vfprintf_internal_r+0x8d4>
   214e4:	6880100c 	andi	r2,r13,64
   214e8:	10000126 	beq	r2,zero,214f0 <___vfprintf_internal_r+0x8d4>
   214ec:	b5bfffcc 	andi	r22,r22,65535
   214f0:	002f883a 	mov	r23,zero
   214f4:	00800044 	movi	r2,1
   214f8:	003f2d06 	br	211b0 <___vfprintf_internal_r+0x594>
   214fc:	d8c00717 	ldw	r3,28(sp)
   21500:	6880040c 	andi	r2,r13,16
   21504:	1d800017 	ldw	r22,0(r3)
   21508:	18c00104 	addi	r3,r3,4
   2150c:	d8c00715 	stw	r3,28(sp)
   21510:	1000031e 	bne	r2,zero,21520 <___vfprintf_internal_r+0x904>
   21514:	6880100c 	andi	r2,r13,64
   21518:	10000126 	beq	r2,zero,21520 <___vfprintf_internal_r+0x904>
   2151c:	b5bfffcc 	andi	r22,r22,65535
   21520:	002f883a 	mov	r23,zero
   21524:	0005883a 	mov	r2,zero
   21528:	003f2106 	br	211b0 <___vfprintf_internal_r+0x594>
   2152c:	d9000517 	ldw	r4,20(sp)
   21530:	00251f40 	call	251f4 <__sinit>
   21534:	003dd206 	br	20c80 <___vfprintf_internal_r+0x64>
   21538:	b02fd7fa 	srai	r23,r22,31
   2153c:	b805883a 	mov	r2,r23
   21540:	003ef706 	br	21120 <___vfprintf_internal_r+0x504>
   21544:	181b883a 	mov	r13,r3
   21548:	b803681e 	bne	r23,zero,222ec <___vfprintf_internal_r+0x16d0>
   2154c:	b08002a8 	cmpgeui	r2,r22,10
   21550:	1003661e 	bne	r2,zero,222ec <___vfprintf_internal_r+0x16d0>
   21554:	b5800c04 	addi	r22,r22,48
   21558:	dd8029c5 	stb	r22,167(sp)
   2155c:	6807883a 	mov	r3,r13
   21560:	01c00044 	movi	r7,1
   21564:	dd4029c4 	addi	r21,sp,167
   21568:	003f3406 	br	2123c <___vfprintf_internal_r+0x620>
   2156c:	d8800717 	ldw	r2,28(sp)
   21570:	14000017 	ldw	r16,0(r2)
   21574:	10800104 	addi	r2,r2,4
   21578:	8002e90e 	bge	r16,zero,22120 <___vfprintf_internal_r+0x1504>
   2157c:	0421c83a 	sub	r16,zero,r16
   21580:	d8800715 	stw	r2,28(sp)
   21584:	a2c00007 	ldb	r11,0(r20)
   21588:	6b400114 	ori	r13,r13,4
   2158c:	003df306 	br	20d5c <___vfprintf_internal_r+0x140>
   21590:	a7000007 	ldb	fp,0(r20)
   21594:	a0c00044 	addi	r3,r20,1
   21598:	e0800aa0 	cmpeqi	r2,fp,42
   2159c:	10066f1e 	bne	r2,zero,22f5c <___vfprintf_internal_r+0x2340>
   215a0:	e0bff404 	addi	r2,fp,-48
   215a4:	110002b0 	cmpltui	r4,r2,10
   215a8:	1829883a 	mov	r20,r3
   215ac:	0011883a 	mov	r8,zero
   215b0:	203dec26 	beq	r4,zero,20d64 <___vfprintf_internal_r+0x148>
   215b4:	a7000007 	ldb	fp,0(r20)
   215b8:	420002a4 	muli	r8,r8,10
   215bc:	a5000044 	addi	r20,r20,1
   215c0:	4091883a 	add	r8,r8,r2
   215c4:	e0bff404 	addi	r2,fp,-48
   215c8:	10c002b0 	cmpltui	r3,r2,10
   215cc:	183ff91e 	bne	r3,zero,215b4 <___vfprintf_internal_r+0x998>
   215d0:	003de406 	br	20d64 <___vfprintf_internal_r+0x148>
   215d4:	a2c00007 	ldb	r11,0(r20)
   215d8:	6b402014 	ori	r13,r13,128
   215dc:	003ddf06 	br	20d5c <___vfprintf_internal_r+0x140>
   215e0:	00800ac4 	movi	r2,43
   215e4:	a2c00007 	ldb	r11,0(r20)
   215e8:	d8801645 	stb	r2,89(sp)
   215ec:	003ddb06 	br	20d5c <___vfprintf_internal_r+0x140>
   215f0:	a2c00007 	ldb	r11,0(r20)
   215f4:	6b400054 	ori	r13,r13,1
   215f8:	003dd806 	br	20d5c <___vfprintf_internal_r+0x140>
   215fc:	d8801647 	ldb	r2,89(sp)
   21600:	a7000003 	ldbu	fp,0(r20)
   21604:	10000c1e 	bne	r2,zero,21638 <___vfprintf_internal_r+0xa1c>
   21608:	e2c03fcc 	andi	r11,fp,255
   2160c:	00800804 	movi	r2,32
   21610:	5ac0201c 	xori	r11,r11,128
   21614:	d8801645 	stb	r2,89(sp)
   21618:	5affe004 	addi	r11,r11,-128
   2161c:	003dcf06 	br	20d5c <___vfprintf_internal_r+0x140>
   21620:	a2c00007 	ldb	r11,0(r20)
   21624:	58801b18 	cmpnei	r2,r11,108
   21628:	1002bb1e 	bne	r2,zero,22118 <___vfprintf_internal_r+0x14fc>
   2162c:	a7000043 	ldbu	fp,1(r20)
   21630:	6b400814 	ori	r13,r13,32
   21634:	a5000044 	addi	r20,r20,1
   21638:	e2c03fcc 	andi	r11,fp,255
   2163c:	5ac0201c 	xori	r11,r11,128
   21640:	5affe004 	addi	r11,r11,-128
   21644:	003dc506 	br	20d5c <___vfprintf_internal_r+0x140>
   21648:	a2c00007 	ldb	r11,0(r20)
   2164c:	6b400214 	ori	r13,r13,8
   21650:	003dc206 	br	20d5c <___vfprintf_internal_r+0x140>
   21654:	a2c00007 	ldb	r11,0(r20)
   21658:	6b401014 	ori	r13,r13,64
   2165c:	003dbf06 	br	20d5c <___vfprintf_internal_r+0x140>
   21660:	d8c00717 	ldw	r3,28(sp)
   21664:	d8001645 	stb	zero,89(sp)
   21668:	03000044 	movi	r12,1
   2166c:	18800017 	ldw	r2,0(r3)
   21670:	18c00104 	addi	r3,r3,4
   21674:	d8c00715 	stw	r3,28(sp)
   21678:	d8802005 	stb	r2,128(sp)
   2167c:	01c00044 	movi	r7,1
   21680:	dd402004 	addi	r21,sp,128
   21684:	003e2a06 	br	20f30 <___vfprintf_internal_r+0x314>
   21688:	d8800717 	ldw	r2,28(sp)
   2168c:	d8001645 	stb	zero,89(sp)
   21690:	15400017 	ldw	r21,0(r2)
   21694:	15800104 	addi	r22,r2,4
   21698:	a802e226 	beq	r21,zero,22224 <___vfprintf_internal_r+0x1608>
   2169c:	db400815 	stw	r13,32(sp)
   216a0:	40bfffe0 	cmpeqi	r2,r8,-1
   216a4:	10046b1e 	bne	r2,zero,22854 <___vfprintf_internal_r+0x1c38>
   216a8:	400d883a 	mov	r6,r8
   216ac:	000b883a 	mov	r5,zero
   216b0:	a809883a 	mov	r4,r21
   216b4:	da000715 	stw	r8,28(sp)
   216b8:	002664c0 	call	2664c <memchr>
   216bc:	da000717 	ldw	r8,28(sp)
   216c0:	db400817 	ldw	r13,32(sp)
   216c4:	1005b126 	beq	r2,zero,22d8c <___vfprintf_internal_r+0x2170>
   216c8:	154fc83a 	sub	r7,r2,r21
   216cc:	3819883a 	mov	r12,r7
   216d0:	dd800715 	stw	r22,28(sp)
   216d4:	003e1606 	br	20f30 <___vfprintf_internal_r+0x314>
   216d8:	a2c00007 	ldb	r11,0(r20)
   216dc:	6b400814 	ori	r13,r13,32
   216e0:	003d9e06 	br	20d5c <___vfprintf_internal_r+0x140>
   216e4:	d8c00717 	ldw	r3,28(sp)
   216e8:	009e0c04 	movi	r2,30768
   216ec:	010000f4 	movhi	r4,3
   216f0:	d880168d 	sth	r2,90(sp)
   216f4:	18800104 	addi	r2,r3,4
   216f8:	d8800715 	stw	r2,28(sp)
   216fc:	2081a804 	addi	r2,r4,1696
   21700:	d8800e15 	stw	r2,56(sp)
   21704:	1d800017 	ldw	r22,0(r3)
   21708:	002f883a 	mov	r23,zero
   2170c:	6b400094 	ori	r13,r13,2
   21710:	00800084 	movi	r2,2
   21714:	07001e04 	movi	fp,120
   21718:	003ea506 	br	211b0 <___vfprintf_internal_r+0x594>
   2171c:	6880080c 	andi	r2,r13,32
   21720:	10028926 	beq	r2,zero,22148 <___vfprintf_internal_r+0x152c>
   21724:	d9000617 	ldw	r4,24(sp)
   21728:	d8800717 	ldw	r2,28(sp)
   2172c:	2007d7fa 	srai	r3,r4,31
   21730:	10800017 	ldw	r2,0(r2)
   21734:	11000015 	stw	r4,0(r2)
   21738:	10c00115 	stw	r3,4(r2)
   2173c:	d8800717 	ldw	r2,28(sp)
   21740:	10800104 	addi	r2,r2,4
   21744:	d8800715 	stw	r2,28(sp)
   21748:	003d6e06 	br	20d04 <___vfprintf_internal_r+0xe8>
   2174c:	e2c01990 	cmplti	r11,fp,102
   21750:	5800ed1e 	bne	r11,zero,21b08 <___vfprintf_internal_r+0xeec>
   21754:	d9000a17 	ldw	r4,40(sp)
   21758:	d9400b17 	ldw	r5,44(sp)
   2175c:	000d883a 	mov	r6,zero
   21760:	000f883a 	mov	r7,zero
   21764:	db001015 	stw	r12,64(sp)
   21768:	d8c00f15 	stw	r3,60(sp)
   2176c:	002c4540 	call	2c454 <__eqdf2>
   21770:	d8c00f17 	ldw	r3,60(sp)
   21774:	db001017 	ldw	r12,64(sp)
   21778:	1001a61e 	bne	r2,zero,21e14 <___vfprintf_internal_r+0x11f8>
   2177c:	d8801e17 	ldw	r2,120(sp)
   21780:	010000f4 	movhi	r4,3
   21784:	2101af04 	addi	r4,r4,1724
   21788:	10800044 	addi	r2,r2,1
   2178c:	b5800044 	addi	r22,r22,1
   21790:	91000015 	stw	r4,0(r18)
   21794:	01000044 	movi	r4,1
   21798:	d8801e15 	stw	r2,120(sp)
   2179c:	91000115 	stw	r4,4(r18)
   217a0:	dd801f15 	stw	r22,124(sp)
   217a4:	10800208 	cmpgei	r2,r2,8
   217a8:	1003c41e 	bne	r2,zero,226bc <___vfprintf_internal_r+0x1aa0>
   217ac:	94800204 	addi	r18,r18,8
   217b0:	d8801717 	ldw	r2,92(sp)
   217b4:	d9000917 	ldw	r4,36(sp)
   217b8:	11000416 	blt	r2,r4,217cc <___vfprintf_internal_r+0xbb0>
   217bc:	1880004c 	andi	r2,r3,1
   217c0:	1000021e 	bne	r2,zero,217cc <___vfprintf_internal_r+0xbb0>
   217c4:	b009883a 	mov	r4,r22
   217c8:	003e0f06 	br	21008 <___vfprintf_internal_r+0x3ec>
   217cc:	d8800d17 	ldw	r2,52(sp)
   217d0:	d9400c17 	ldw	r5,48(sp)
   217d4:	90800015 	stw	r2,0(r18)
   217d8:	d8801e17 	ldw	r2,120(sp)
   217dc:	2d89883a 	add	r4,r5,r22
   217e0:	91400115 	stw	r5,4(r18)
   217e4:	10800044 	addi	r2,r2,1
   217e8:	d8801e15 	stw	r2,120(sp)
   217ec:	d9001f15 	stw	r4,124(sp)
   217f0:	10800208 	cmpgei	r2,r2,8
   217f4:	10026b1e 	bne	r2,zero,221a4 <___vfprintf_internal_r+0x1588>
   217f8:	94800204 	addi	r18,r18,8
   217fc:	d8800917 	ldw	r2,36(sp)
   21800:	15ffffc4 	addi	r23,r2,-1
   21804:	05fe000e 	bge	zero,r23,21008 <___vfprintf_internal_r+0x3ec>
   21808:	058000f4 	movhi	r22,3
   2180c:	b9400450 	cmplti	r5,r23,17
   21810:	d8801e17 	ldw	r2,120(sp)
   21814:	b581b004 	addi	r22,r22,1728
   21818:	2801441e 	bne	r5,zero,21d2c <___vfprintf_internal_r+0x1110>
   2181c:	900d883a 	mov	r6,r18
   21820:	980b883a 	mov	r5,r19
   21824:	1825883a 	mov	r18,r3
   21828:	b02b883a 	mov	r21,r22
   2182c:	8027883a 	mov	r19,r16
   21830:	a02d883a 	mov	r22,r20
   21834:	b821883a 	mov	r16,r23
   21838:	07000404 	movi	fp,16
   2183c:	6029883a 	mov	r20,r12
   21840:	282f883a 	mov	r23,r5
   21844:	3007883a 	mov	r3,r6
   21848:	00000406 	br	2185c <___vfprintf_internal_r+0xc40>
   2184c:	18c00204 	addi	r3,r3,8
   21850:	843ffc04 	addi	r16,r16,-16
   21854:	81400448 	cmpgei	r5,r16,17
   21858:	28012a26 	beq	r5,zero,21d04 <___vfprintf_internal_r+0x10e8>
   2185c:	10800044 	addi	r2,r2,1
   21860:	21000404 	addi	r4,r4,16
   21864:	1d400015 	stw	r21,0(r3)
   21868:	1f000115 	stw	fp,4(r3)
   2186c:	d9001f15 	stw	r4,124(sp)
   21870:	d8801e15 	stw	r2,120(sp)
   21874:	11400208 	cmpgei	r5,r2,8
   21878:	283ff426 	beq	r5,zero,2184c <___vfprintf_internal_r+0xc30>
   2187c:	d9400417 	ldw	r5,16(sp)
   21880:	d9000517 	ldw	r4,20(sp)
   21884:	d9801d04 	addi	r6,sp,116
   21888:	00284100 	call	28410 <__sprint_r>
   2188c:	103dee1e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   21890:	d9001f17 	ldw	r4,124(sp)
   21894:	d8801e17 	ldw	r2,120(sp)
   21898:	8807883a 	mov	r3,r17
   2189c:	003fec06 	br	21850 <___vfprintf_internal_r+0xc34>
   218a0:	832fc83a 	sub	r23,r16,r12
   218a4:	05fdca0e 	bge	zero,r23,20fd0 <___vfprintf_internal_r+0x3b4>
   218a8:	b009883a 	mov	r4,r22
   218ac:	b9400450 	cmplti	r5,r23,17
   218b0:	058000f4 	movhi	r22,3
   218b4:	d8801e17 	ldw	r2,120(sp)
   218b8:	b581b004 	addi	r22,r22,1728
   218bc:	28002e1e 	bne	r5,zero,21978 <___vfprintf_internal_r+0xd5c>
   218c0:	d8c00f15 	stw	r3,60(sp)
   218c4:	dc001015 	stw	r16,64(sp)
   218c8:	9007883a 	mov	r3,r18
   218cc:	b821883a 	mov	r16,r23
   218d0:	b025883a 	mov	r18,r22
   218d4:	982f883a 	mov	r23,r19
   218d8:	a02d883a 	mov	r22,r20
   218dc:	03400404 	movi	r13,16
   218e0:	da001215 	stw	r8,72(sp)
   218e4:	6029883a 	mov	r20,r12
   218e8:	3827883a 	mov	r19,r7
   218ec:	00000406 	br	21900 <___vfprintf_internal_r+0xce4>
   218f0:	843ffc04 	addi	r16,r16,-16
   218f4:	81400448 	cmpgei	r5,r16,17
   218f8:	18c00204 	addi	r3,r3,8
   218fc:	28001426 	beq	r5,zero,21950 <___vfprintf_internal_r+0xd34>
   21900:	10800044 	addi	r2,r2,1
   21904:	21000404 	addi	r4,r4,16
   21908:	1c800015 	stw	r18,0(r3)
   2190c:	1b400115 	stw	r13,4(r3)
   21910:	d9001f15 	stw	r4,124(sp)
   21914:	d8801e15 	stw	r2,120(sp)
   21918:	11400208 	cmpgei	r5,r2,8
   2191c:	283ff426 	beq	r5,zero,218f0 <___vfprintf_internal_r+0xcd4>
   21920:	d9400417 	ldw	r5,16(sp)
   21924:	d9000517 	ldw	r4,20(sp)
   21928:	d9801d04 	addi	r6,sp,116
   2192c:	00284100 	call	28410 <__sprint_r>
   21930:	103dc51e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   21934:	843ffc04 	addi	r16,r16,-16
   21938:	81400448 	cmpgei	r5,r16,17
   2193c:	d9001f17 	ldw	r4,124(sp)
   21940:	d8801e17 	ldw	r2,120(sp)
   21944:	8807883a 	mov	r3,r17
   21948:	03400404 	movi	r13,16
   2194c:	283fec1e 	bne	r5,zero,21900 <___vfprintf_internal_r+0xce4>
   21950:	980f883a 	mov	r7,r19
   21954:	a019883a 	mov	r12,r20
   21958:	b827883a 	mov	r19,r23
   2195c:	b029883a 	mov	r20,r22
   21960:	802f883a 	mov	r23,r16
   21964:	902d883a 	mov	r22,r18
   21968:	da001217 	ldw	r8,72(sp)
   2196c:	1825883a 	mov	r18,r3
   21970:	dc001017 	ldw	r16,64(sp)
   21974:	d8c00f17 	ldw	r3,60(sp)
   21978:	10800044 	addi	r2,r2,1
   2197c:	b909883a 	add	r4,r23,r4
   21980:	d8801e15 	stw	r2,120(sp)
   21984:	95800015 	stw	r22,0(r18)
   21988:	95c00115 	stw	r23,4(r18)
   2198c:	d9001f15 	stw	r4,124(sp)
   21990:	10800208 	cmpgei	r2,r2,8
   21994:	1003621e 	bne	r2,zero,22720 <___vfprintf_internal_r+0x1b04>
   21998:	41efc83a 	sub	r23,r8,r7
   2199c:	94800204 	addi	r18,r18,8
   219a0:	202d883a 	mov	r22,r4
   219a4:	05fd8c0e 	bge	zero,r23,20fd8 <___vfprintf_internal_r+0x3bc>
   219a8:	b9400450 	cmplti	r5,r23,17
   219ac:	d8801e17 	ldw	r2,120(sp)
   219b0:	b009883a 	mov	r4,r22
   219b4:	2803b11e 	bne	r5,zero,2287c <___vfprintf_internal_r+0x1c60>
   219b8:	d8c00f15 	stw	r3,60(sp)
   219bc:	dc001015 	stw	r16,64(sp)
   219c0:	9007883a 	mov	r3,r18
   219c4:	b821883a 	mov	r16,r23
   219c8:	a02d883a 	mov	r22,r20
   219cc:	982f883a 	mov	r23,r19
   219d0:	9825883a 	mov	r18,r19
   219d4:	02000404 	movi	r8,16
   219d8:	6029883a 	mov	r20,r12
   219dc:	3827883a 	mov	r19,r7
   219e0:	00000406 	br	219f4 <___vfprintf_internal_r+0xdd8>
   219e4:	843ffc04 	addi	r16,r16,-16
   219e8:	81400448 	cmpgei	r5,r16,17
   219ec:	18c00204 	addi	r3,r3,8
   219f0:	28001426 	beq	r5,zero,21a44 <___vfprintf_internal_r+0xe28>
   219f4:	10800044 	addi	r2,r2,1
   219f8:	21000404 	addi	r4,r4,16
   219fc:	1c800015 	stw	r18,0(r3)
   21a00:	1a000115 	stw	r8,4(r3)
   21a04:	d9001f15 	stw	r4,124(sp)
   21a08:	d8801e15 	stw	r2,120(sp)
   21a0c:	11400208 	cmpgei	r5,r2,8
   21a10:	283ff426 	beq	r5,zero,219e4 <___vfprintf_internal_r+0xdc8>
   21a14:	d9400417 	ldw	r5,16(sp)
   21a18:	d9000517 	ldw	r4,20(sp)
   21a1c:	d9801d04 	addi	r6,sp,116
   21a20:	00284100 	call	28410 <__sprint_r>
   21a24:	103d881e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   21a28:	843ffc04 	addi	r16,r16,-16
   21a2c:	81400448 	cmpgei	r5,r16,17
   21a30:	d9001f17 	ldw	r4,124(sp)
   21a34:	d8801e17 	ldw	r2,120(sp)
   21a38:	8807883a 	mov	r3,r17
   21a3c:	02000404 	movi	r8,16
   21a40:	283fec1e 	bne	r5,zero,219f4 <___vfprintf_internal_r+0xdd8>
   21a44:	980f883a 	mov	r7,r19
   21a48:	a019883a 	mov	r12,r20
   21a4c:	9027883a 	mov	r19,r18
   21a50:	b029883a 	mov	r20,r22
   21a54:	1825883a 	mov	r18,r3
   21a58:	b82d883a 	mov	r22,r23
   21a5c:	d8c00f17 	ldw	r3,60(sp)
   21a60:	802f883a 	mov	r23,r16
   21a64:	dc001017 	ldw	r16,64(sp)
   21a68:	10800044 	addi	r2,r2,1
   21a6c:	b909883a 	add	r4,r23,r4
   21a70:	d8801e15 	stw	r2,120(sp)
   21a74:	95800015 	stw	r22,0(r18)
   21a78:	95c00115 	stw	r23,4(r18)
   21a7c:	d9001f15 	stw	r4,124(sp)
   21a80:	10800208 	cmpgei	r2,r2,8
   21a84:	10018a1e 	bne	r2,zero,220b0 <___vfprintf_internal_r+0x1494>
   21a88:	94800204 	addi	r18,r18,8
   21a8c:	202d883a 	mov	r22,r4
   21a90:	003d5106 	br	20fd8 <___vfprintf_internal_r+0x3bc>
   21a94:	11400060 	cmpeqi	r5,r2,1
   21a98:	181b883a 	mov	r13,r3
   21a9c:	002d883a 	mov	r22,zero
   21aa0:	283eac1e 	bne	r5,zero,21554 <___vfprintf_internal_r+0x938>
   21aa4:	108000a0 	cmpeqi	r2,r2,2
   21aa8:	002f883a 	mov	r23,zero
   21aac:	103dcd26 	beq	r2,zero,211e4 <___vfprintf_internal_r+0x5c8>
   21ab0:	d9400e17 	ldw	r5,56(sp)
   21ab4:	882b883a 	mov	r21,r17
   21ab8:	b08003cc 	andi	r2,r22,15
   21abc:	b806973a 	slli	r3,r23,28
   21ac0:	b02cd13a 	srli	r22,r22,4
   21ac4:	2885883a 	add	r2,r5,r2
   21ac8:	10800003 	ldbu	r2,0(r2)
   21acc:	b82ed13a 	srli	r23,r23,4
   21ad0:	1dacb03a 	or	r22,r3,r22
   21ad4:	a8bfffc5 	stb	r2,-1(r21)
   21ad8:	b5c4b03a 	or	r2,r22,r23
   21adc:	ad7fffc4 	addi	r21,r21,-1
   21ae0:	103ff51e 	bne	r2,zero,21ab8 <___vfprintf_internal_r+0xe9c>
   21ae4:	8d4fc83a 	sub	r7,r17,r21
   21ae8:	6807883a 	mov	r3,r13
   21aec:	003dd306 	br	2123c <___vfprintf_internal_r+0x620>
   21af0:	d9400417 	ldw	r5,16(sp)
   21af4:	d9000517 	ldw	r4,20(sp)
   21af8:	d9801d04 	addi	r6,sp,116
   21afc:	00284100 	call	28410 <__sprint_r>
   21b00:	103d4b26 	beq	r2,zero,21030 <___vfprintf_internal_r+0x414>
   21b04:	003d5006 	br	21048 <___vfprintf_internal_r+0x42c>
   21b08:	d8800917 	ldw	r2,36(sp)
   21b0c:	95c00204 	addi	r23,r18,8
   21b10:	10800088 	cmpgei	r2,r2,2
   21b14:	10012126 	beq	r2,zero,21f9c <___vfprintf_internal_r+0x1380>
   21b18:	da001e17 	ldw	r8,120(sp)
   21b1c:	00800044 	movi	r2,1
   21b20:	b5800044 	addi	r22,r22,1
   21b24:	42000044 	addi	r8,r8,1
   21b28:	90800115 	stw	r2,4(r18)
   21b2c:	95400015 	stw	r21,0(r18)
   21b30:	dd801f15 	stw	r22,124(sp)
   21b34:	da001e15 	stw	r8,120(sp)
   21b38:	40800210 	cmplti	r2,r8,8
   21b3c:	10022a26 	beq	r2,zero,223e8 <___vfprintf_internal_r+0x17cc>
   21b40:	d8800c17 	ldw	r2,48(sp)
   21b44:	d9000d17 	ldw	r4,52(sp)
   21b48:	42000044 	addi	r8,r8,1
   21b4c:	15b9883a 	add	fp,r2,r22
   21b50:	b8800115 	stw	r2,4(r23)
   21b54:	b9000015 	stw	r4,0(r23)
   21b58:	df001f15 	stw	fp,124(sp)
   21b5c:	da001e15 	stw	r8,120(sp)
   21b60:	40800208 	cmpgei	r2,r8,8
   21b64:	10022d1e 	bne	r2,zero,2241c <___vfprintf_internal_r+0x1800>
   21b68:	bdc00204 	addi	r23,r23,8
   21b6c:	d9000a17 	ldw	r4,40(sp)
   21b70:	d9400b17 	ldw	r5,44(sp)
   21b74:	000d883a 	mov	r6,zero
   21b78:	000f883a 	mov	r7,zero
   21b7c:	db001015 	stw	r12,64(sp)
   21b80:	d8c00f15 	stw	r3,60(sp)
   21b84:	da000815 	stw	r8,32(sp)
   21b88:	002c4540 	call	2c454 <__eqdf2>
   21b8c:	d8c00917 	ldw	r3,36(sp)
   21b90:	da000817 	ldw	r8,32(sp)
   21b94:	db001017 	ldw	r12,64(sp)
   21b98:	1cbfffc4 	addi	r18,r3,-1
   21b9c:	d8c00f17 	ldw	r3,60(sp)
   21ba0:	10011a26 	beq	r2,zero,2200c <___vfprintf_internal_r+0x13f0>
   21ba4:	aa400044 	addi	r9,r21,1
   21ba8:	42000044 	addi	r8,r8,1
   21bac:	e4b9883a 	add	fp,fp,r18
   21bb0:	ba400015 	stw	r9,0(r23)
   21bb4:	bc800115 	stw	r18,4(r23)
   21bb8:	df001f15 	stw	fp,124(sp)
   21bbc:	da001e15 	stw	r8,120(sp)
   21bc0:	40800208 	cmpgei	r2,r8,8
   21bc4:	1002c91e 	bne	r2,zero,226ec <___vfprintf_internal_r+0x1ad0>
   21bc8:	bdc00204 	addi	r23,r23,8
   21bcc:	d9401117 	ldw	r5,68(sp)
   21bd0:	42000044 	addi	r8,r8,1
   21bd4:	d8801904 	addi	r2,sp,100
   21bd8:	2f09883a 	add	r4,r5,fp
   21bdc:	da001e15 	stw	r8,120(sp)
   21be0:	b8800015 	stw	r2,0(r23)
   21be4:	b9400115 	stw	r5,4(r23)
   21be8:	d9001f15 	stw	r4,124(sp)
   21bec:	42000208 	cmpgei	r8,r8,8
   21bf0:	40013d1e 	bne	r8,zero,220e8 <___vfprintf_internal_r+0x14cc>
   21bf4:	bc800204 	addi	r18,r23,8
   21bf8:	003d0306 	br	21008 <___vfprintf_internal_r+0x3ec>
   21bfc:	05c000f4 	movhi	r23,3
   21c00:	b1400450 	cmplti	r5,r22,17
   21c04:	d9001f17 	ldw	r4,124(sp)
   21c08:	d8801e17 	ldw	r2,120(sp)
   21c0c:	bdc1b404 	addi	r23,r23,1744
   21c10:	2800321e 	bne	r5,zero,21cdc <___vfprintf_internal_r+0x10c0>
   21c14:	d8c01215 	stw	r3,72(sp)
   21c18:	dc001315 	stw	r16,76(sp)
   21c1c:	9007883a 	mov	r3,r18
   21c20:	b021883a 	mov	r16,r22
   21c24:	b825883a 	mov	r18,r23
   21c28:	a02d883a 	mov	r22,r20
   21c2c:	982f883a 	mov	r23,r19
   21c30:	03c00404 	movi	r15,16
   21c34:	db800f15 	stw	r14,60(sp)
   21c38:	db401015 	stw	r13,64(sp)
   21c3c:	da001415 	stw	r8,80(sp)
   21c40:	6029883a 	mov	r20,r12
   21c44:	3827883a 	mov	r19,r7
   21c48:	00000406 	br	21c5c <___vfprintf_internal_r+0x1040>
   21c4c:	843ffc04 	addi	r16,r16,-16
   21c50:	81400448 	cmpgei	r5,r16,17
   21c54:	18c00204 	addi	r3,r3,8
   21c58:	28001426 	beq	r5,zero,21cac <___vfprintf_internal_r+0x1090>
   21c5c:	10800044 	addi	r2,r2,1
   21c60:	21000404 	addi	r4,r4,16
   21c64:	1c800015 	stw	r18,0(r3)
   21c68:	1bc00115 	stw	r15,4(r3)
   21c6c:	d9001f15 	stw	r4,124(sp)
   21c70:	d8801e15 	stw	r2,120(sp)
   21c74:	11400208 	cmpgei	r5,r2,8
   21c78:	283ff426 	beq	r5,zero,21c4c <___vfprintf_internal_r+0x1030>
   21c7c:	d9400417 	ldw	r5,16(sp)
   21c80:	d9000517 	ldw	r4,20(sp)
   21c84:	d9801d04 	addi	r6,sp,116
   21c88:	00284100 	call	28410 <__sprint_r>
   21c8c:	103cee1e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   21c90:	843ffc04 	addi	r16,r16,-16
   21c94:	81400448 	cmpgei	r5,r16,17
   21c98:	d9001f17 	ldw	r4,124(sp)
   21c9c:	d8801e17 	ldw	r2,120(sp)
   21ca0:	8807883a 	mov	r3,r17
   21ca4:	03c00404 	movi	r15,16
   21ca8:	283fec1e 	bne	r5,zero,21c5c <___vfprintf_internal_r+0x1040>
   21cac:	980f883a 	mov	r7,r19
   21cb0:	a019883a 	mov	r12,r20
   21cb4:	b827883a 	mov	r19,r23
   21cb8:	b029883a 	mov	r20,r22
   21cbc:	902f883a 	mov	r23,r18
   21cc0:	802d883a 	mov	r22,r16
   21cc4:	1825883a 	mov	r18,r3
   21cc8:	db800f17 	ldw	r14,60(sp)
   21ccc:	db401017 	ldw	r13,64(sp)
   21cd0:	da001417 	ldw	r8,80(sp)
   21cd4:	dc001317 	ldw	r16,76(sp)
   21cd8:	d8c01217 	ldw	r3,72(sp)
   21cdc:	10800044 	addi	r2,r2,1
   21ce0:	b109883a 	add	r4,r22,r4
   21ce4:	d8801e15 	stw	r2,120(sp)
   21ce8:	95c00015 	stw	r23,0(r18)
   21cec:	95800115 	stw	r22,4(r18)
   21cf0:	d9001f15 	stw	r4,124(sp)
   21cf4:	10800208 	cmpgei	r2,r2,8
   21cf8:	1001d51e 	bne	r2,zero,22450 <___vfprintf_internal_r+0x1834>
   21cfc:	94800204 	addi	r18,r18,8
   21d00:	003c9506 	br	20f58 <___vfprintf_internal_r+0x33c>
   21d04:	180d883a 	mov	r6,r3
   21d08:	b80b883a 	mov	r5,r23
   21d0c:	9007883a 	mov	r3,r18
   21d10:	a019883a 	mov	r12,r20
   21d14:	802f883a 	mov	r23,r16
   21d18:	b029883a 	mov	r20,r22
   21d1c:	9821883a 	mov	r16,r19
   21d20:	a82d883a 	mov	r22,r21
   21d24:	2827883a 	mov	r19,r5
   21d28:	3025883a 	mov	r18,r6
   21d2c:	10800044 	addi	r2,r2,1
   21d30:	95800015 	stw	r22,0(r18)
   21d34:	95c00115 	stw	r23,4(r18)
   21d38:	25c9883a 	add	r4,r4,r23
   21d3c:	d8801e15 	stw	r2,120(sp)
   21d40:	d9001f15 	stw	r4,124(sp)
   21d44:	10800208 	cmpgei	r2,r2,8
   21d48:	103cae26 	beq	r2,zero,21004 <___vfprintf_internal_r+0x3e8>
   21d4c:	d9400417 	ldw	r5,16(sp)
   21d50:	d9000517 	ldw	r4,20(sp)
   21d54:	d9801d04 	addi	r6,sp,116
   21d58:	db000f15 	stw	r12,60(sp)
   21d5c:	d8c00815 	stw	r3,32(sp)
   21d60:	00284100 	call	28410 <__sprint_r>
   21d64:	103cb81e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   21d68:	d9001f17 	ldw	r4,124(sp)
   21d6c:	d8c00817 	ldw	r3,32(sp)
   21d70:	db000f17 	ldw	r12,60(sp)
   21d74:	8825883a 	mov	r18,r17
   21d78:	003ca306 	br	21008 <___vfprintf_internal_r+0x3ec>
   21d7c:	d9400417 	ldw	r5,16(sp)
   21d80:	d9000517 	ldw	r4,20(sp)
   21d84:	d9801d04 	addi	r6,sp,116
   21d88:	db001515 	stw	r12,84(sp)
   21d8c:	d9c01415 	stw	r7,80(sp)
   21d90:	da001315 	stw	r8,76(sp)
   21d94:	d8c01215 	stw	r3,72(sp)
   21d98:	db401015 	stw	r13,64(sp)
   21d9c:	db800f15 	stw	r14,60(sp)
   21da0:	00284100 	call	28410 <__sprint_r>
   21da4:	103ca81e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   21da8:	dd801f17 	ldw	r22,124(sp)
   21dac:	db001517 	ldw	r12,84(sp)
   21db0:	d9c01417 	ldw	r7,80(sp)
   21db4:	da001317 	ldw	r8,76(sp)
   21db8:	d8c01217 	ldw	r3,72(sp)
   21dbc:	db401017 	ldw	r13,64(sp)
   21dc0:	db800f17 	ldw	r14,60(sp)
   21dc4:	8825883a 	mov	r18,r17
   21dc8:	003c7206 	br	20f94 <___vfprintf_internal_r+0x378>
   21dcc:	d9400417 	ldw	r5,16(sp)
   21dd0:	d9000517 	ldw	r4,20(sp)
   21dd4:	d9801d04 	addi	r6,sp,116
   21dd8:	db001415 	stw	r12,80(sp)
   21ddc:	d9c01315 	stw	r7,76(sp)
   21de0:	da001215 	stw	r8,72(sp)
   21de4:	d8c01015 	stw	r3,64(sp)
   21de8:	db400f15 	stw	r13,60(sp)
   21dec:	00284100 	call	28410 <__sprint_r>
   21df0:	103c951e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   21df4:	dd801f17 	ldw	r22,124(sp)
   21df8:	db001417 	ldw	r12,80(sp)
   21dfc:	d9c01317 	ldw	r7,76(sp)
   21e00:	da001217 	ldw	r8,72(sp)
   21e04:	d8c01017 	ldw	r3,64(sp)
   21e08:	db400f17 	ldw	r13,60(sp)
   21e0c:	8825883a 	mov	r18,r17
   21e10:	003c6d06 	br	20fc8 <___vfprintf_internal_r+0x3ac>
   21e14:	ddc01717 	ldw	r23,92(sp)
   21e18:	05c1a00e 	bge	zero,r23,2249c <___vfprintf_internal_r+0x1880>
   21e1c:	d8800917 	ldw	r2,36(sp)
   21e20:	d9000817 	ldw	r4,32(sp)
   21e24:	102f883a 	mov	r23,r2
   21e28:	2080d016 	blt	r4,r2,2216c <___vfprintf_internal_r+0x1550>
   21e2c:	05c00a0e 	bge	zero,r23,21e58 <___vfprintf_internal_r+0x123c>
   21e30:	d8801e17 	ldw	r2,120(sp)
   21e34:	b5ed883a 	add	r22,r22,r23
   21e38:	95400015 	stw	r21,0(r18)
   21e3c:	10800044 	addi	r2,r2,1
   21e40:	d8801e15 	stw	r2,120(sp)
   21e44:	95c00115 	stw	r23,4(r18)
   21e48:	dd801f15 	stw	r22,124(sp)
   21e4c:	10800208 	cmpgei	r2,r2,8
   21e50:	1003921e 	bne	r2,zero,22c9c <___vfprintf_internal_r+0x2080>
   21e54:	94800204 	addi	r18,r18,8
   21e58:	b800d016 	blt	r23,zero,2219c <___vfprintf_internal_r+0x1580>
   21e5c:	d8800817 	ldw	r2,32(sp)
   21e60:	15efc83a 	sub	r23,r2,r23
   21e64:	05c0fb16 	blt	zero,r23,22254 <___vfprintf_internal_r+0x1638>
   21e68:	ddc01717 	ldw	r23,92(sp)
   21e6c:	d9000917 	ldw	r4,36(sp)
   21e70:	b900c10e 	bge	r23,r4,22178 <___vfprintf_internal_r+0x155c>
   21e74:	d8800d17 	ldw	r2,52(sp)
   21e78:	d9400c17 	ldw	r5,48(sp)
   21e7c:	90800015 	stw	r2,0(r18)
   21e80:	d8801e17 	ldw	r2,120(sp)
   21e84:	2d89883a 	add	r4,r5,r22
   21e88:	91400115 	stw	r5,4(r18)
   21e8c:	10800044 	addi	r2,r2,1
   21e90:	d8801e15 	stw	r2,120(sp)
   21e94:	d9001f15 	stw	r4,124(sp)
   21e98:	10800208 	cmpgei	r2,r2,8
   21e9c:	1003651e 	bne	r2,zero,22c34 <___vfprintf_internal_r+0x2018>
   21ea0:	94800204 	addi	r18,r18,8
   21ea4:	d8800917 	ldw	r2,36(sp)
   21ea8:	d9400817 	ldw	r5,32(sp)
   21eac:	15efc83a 	sub	r23,r2,r23
   21eb0:	1179c83a 	sub	fp,r2,r5
   21eb4:	bf00010e 	bge	r23,fp,21ebc <___vfprintf_internal_r+0x12a0>
   21eb8:	b839883a 	mov	fp,r23
   21ebc:	07000c0e 	bge	zero,fp,21ef0 <___vfprintf_internal_r+0x12d4>
   21ec0:	d8800817 	ldw	r2,32(sp)
   21ec4:	2709883a 	add	r4,r4,fp
   21ec8:	97000115 	stw	fp,4(r18)
   21ecc:	a893883a 	add	r9,r21,r2
   21ed0:	d8801e17 	ldw	r2,120(sp)
   21ed4:	92400015 	stw	r9,0(r18)
   21ed8:	d9001f15 	stw	r4,124(sp)
   21edc:	10800044 	addi	r2,r2,1
   21ee0:	d8801e15 	stw	r2,120(sp)
   21ee4:	10800208 	cmpgei	r2,r2,8
   21ee8:	10037b1e 	bne	r2,zero,22cd8 <___vfprintf_internal_r+0x20bc>
   21eec:	94800204 	addi	r18,r18,8
   21ef0:	e005883a 	mov	r2,fp
   21ef4:	e000010e 	bge	fp,zero,21efc <___vfprintf_internal_r+0x12e0>
   21ef8:	0005883a 	mov	r2,zero
   21efc:	b8afc83a 	sub	r23,r23,r2
   21f00:	05fc410e 	bge	zero,r23,21008 <___vfprintf_internal_r+0x3ec>
   21f04:	058000f4 	movhi	r22,3
   21f08:	b9400450 	cmplti	r5,r23,17
   21f0c:	d8801e17 	ldw	r2,120(sp)
   21f10:	b581b004 	addi	r22,r22,1728
   21f14:	283f851e 	bne	r5,zero,21d2c <___vfprintf_internal_r+0x1110>
   21f18:	980b883a 	mov	r5,r19
   21f1c:	d8c00815 	stw	r3,32(sp)
   21f20:	8027883a 	mov	r19,r16
   21f24:	9007883a 	mov	r3,r18
   21f28:	b821883a 	mov	r16,r23
   21f2c:	b025883a 	mov	r18,r22
   21f30:	dd400517 	ldw	r21,20(sp)
   21f34:	a02d883a 	mov	r22,r20
   21f38:	07000404 	movi	fp,16
   21f3c:	6029883a 	mov	r20,r12
   21f40:	282f883a 	mov	r23,r5
   21f44:	00000406 	br	21f58 <___vfprintf_internal_r+0x133c>
   21f48:	18c00204 	addi	r3,r3,8
   21f4c:	843ffc04 	addi	r16,r16,-16
   21f50:	81400448 	cmpgei	r5,r16,17
   21f54:	28034426 	beq	r5,zero,22c68 <___vfprintf_internal_r+0x204c>
   21f58:	10800044 	addi	r2,r2,1
   21f5c:	21000404 	addi	r4,r4,16
   21f60:	1c800015 	stw	r18,0(r3)
   21f64:	1f000115 	stw	fp,4(r3)
   21f68:	d9001f15 	stw	r4,124(sp)
   21f6c:	d8801e15 	stw	r2,120(sp)
   21f70:	11400208 	cmpgei	r5,r2,8
   21f74:	283ff426 	beq	r5,zero,21f48 <___vfprintf_internal_r+0x132c>
   21f78:	d9400417 	ldw	r5,16(sp)
   21f7c:	d9801d04 	addi	r6,sp,116
   21f80:	a809883a 	mov	r4,r21
   21f84:	00284100 	call	28410 <__sprint_r>
   21f88:	103c2f1e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   21f8c:	d9001f17 	ldw	r4,124(sp)
   21f90:	d8801e17 	ldw	r2,120(sp)
   21f94:	8807883a 	mov	r3,r17
   21f98:	003fec06 	br	21f4c <___vfprintf_internal_r+0x1330>
   21f9c:	1880004c 	andi	r2,r3,1
   21fa0:	103edd1e 	bne	r2,zero,21b18 <___vfprintf_internal_r+0xefc>
   21fa4:	da001e17 	ldw	r8,120(sp)
   21fa8:	00800044 	movi	r2,1
   21fac:	b7000044 	addi	fp,r22,1
   21fb0:	42000044 	addi	r8,r8,1
   21fb4:	90800115 	stw	r2,4(r18)
   21fb8:	95400015 	stw	r21,0(r18)
   21fbc:	df001f15 	stw	fp,124(sp)
   21fc0:	da001e15 	stw	r8,120(sp)
   21fc4:	40800210 	cmplti	r2,r8,8
   21fc8:	103f001e 	bne	r2,zero,21bcc <___vfprintf_internal_r+0xfb0>
   21fcc:	d9400417 	ldw	r5,16(sp)
   21fd0:	d9000517 	ldw	r4,20(sp)
   21fd4:	d9801d04 	addi	r6,sp,116
   21fd8:	db000f15 	stw	r12,60(sp)
   21fdc:	d8c00815 	stw	r3,32(sp)
   21fe0:	00284100 	call	28410 <__sprint_r>
   21fe4:	103c181e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   21fe8:	df001f17 	ldw	fp,124(sp)
   21fec:	da001e17 	ldw	r8,120(sp)
   21ff0:	db000f17 	ldw	r12,60(sp)
   21ff4:	d8c00817 	ldw	r3,32(sp)
   21ff8:	882f883a 	mov	r23,r17
   21ffc:	003ef306 	br	21bcc <___vfprintf_internal_r+0xfb0>
   22000:	000f883a 	mov	r7,zero
   22004:	882b883a 	mov	r21,r17
   22008:	003c8c06 	br	2123c <___vfprintf_internal_r+0x620>
   2200c:	d8800917 	ldw	r2,36(sp)
   22010:	10800090 	cmplti	r2,r2,2
   22014:	103eed1e 	bne	r2,zero,21bcc <___vfprintf_internal_r+0xfb0>
   22018:	d8800917 	ldw	r2,36(sp)
   2201c:	058000f4 	movhi	r22,3
   22020:	b581b004 	addi	r22,r22,1728
   22024:	10800490 	cmplti	r2,r2,18
   22028:	1002061e 	bne	r2,zero,22844 <___vfprintf_internal_r+0x1c28>
   2202c:	9809883a 	mov	r4,r19
   22030:	b805883a 	mov	r2,r23
   22034:	1827883a 	mov	r19,r3
   22038:	a02f883a 	mov	r23,r20
   2203c:	e007883a 	mov	r3,fp
   22040:	8029883a 	mov	r20,r16
   22044:	05400404 	movi	r21,16
   22048:	9021883a 	mov	r16,r18
   2204c:	2039883a 	mov	fp,r4
   22050:	b025883a 	mov	r18,r22
   22054:	602d883a 	mov	r22,r12
   22058:	00000406 	br	2206c <___vfprintf_internal_r+0x1450>
   2205c:	10800204 	addi	r2,r2,8
   22060:	843ffc04 	addi	r16,r16,-16
   22064:	81000448 	cmpgei	r4,r16,17
   22068:	2001ec26 	beq	r4,zero,2281c <___vfprintf_internal_r+0x1c00>
   2206c:	42000044 	addi	r8,r8,1
   22070:	18c00404 	addi	r3,r3,16
   22074:	14800015 	stw	r18,0(r2)
   22078:	15400115 	stw	r21,4(r2)
   2207c:	d8c01f15 	stw	r3,124(sp)
   22080:	da001e15 	stw	r8,120(sp)
   22084:	41000208 	cmpgei	r4,r8,8
   22088:	203ff426 	beq	r4,zero,2205c <___vfprintf_internal_r+0x1440>
   2208c:	d9400417 	ldw	r5,16(sp)
   22090:	d9000517 	ldw	r4,20(sp)
   22094:	d9801d04 	addi	r6,sp,116
   22098:	00284100 	call	28410 <__sprint_r>
   2209c:	103bea1e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   220a0:	d8c01f17 	ldw	r3,124(sp)
   220a4:	da001e17 	ldw	r8,120(sp)
   220a8:	8805883a 	mov	r2,r17
   220ac:	003fec06 	br	22060 <___vfprintf_internal_r+0x1444>
   220b0:	d9400417 	ldw	r5,16(sp)
   220b4:	d9000517 	ldw	r4,20(sp)
   220b8:	d9801d04 	addi	r6,sp,116
   220bc:	db001215 	stw	r12,72(sp)
   220c0:	d9c01015 	stw	r7,64(sp)
   220c4:	d8c00f15 	stw	r3,60(sp)
   220c8:	00284100 	call	28410 <__sprint_r>
   220cc:	103bde1e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   220d0:	dd801f17 	ldw	r22,124(sp)
   220d4:	db001217 	ldw	r12,72(sp)
   220d8:	d9c01017 	ldw	r7,64(sp)
   220dc:	d8c00f17 	ldw	r3,60(sp)
   220e0:	8825883a 	mov	r18,r17
   220e4:	003bbc06 	br	20fd8 <___vfprintf_internal_r+0x3bc>
   220e8:	d9400417 	ldw	r5,16(sp)
   220ec:	d9000517 	ldw	r4,20(sp)
   220f0:	d9801d04 	addi	r6,sp,116
   220f4:	db000f15 	stw	r12,60(sp)
   220f8:	d8c00815 	stw	r3,32(sp)
   220fc:	00284100 	call	28410 <__sprint_r>
   22100:	103bd11e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   22104:	d9001f17 	ldw	r4,124(sp)
   22108:	db000f17 	ldw	r12,60(sp)
   2210c:	d8c00817 	ldw	r3,32(sp)
   22110:	8825883a 	mov	r18,r17
   22114:	003bbc06 	br	21008 <___vfprintf_internal_r+0x3ec>
   22118:	6b400414 	ori	r13,r13,16
   2211c:	003b0f06 	br	20d5c <___vfprintf_internal_r+0x140>
   22120:	a2c00007 	ldb	r11,0(r20)
   22124:	d8800715 	stw	r2,28(sp)
   22128:	003b0c06 	br	20d5c <___vfprintf_internal_r+0x140>
   2212c:	882b883a 	mov	r21,r17
   22130:	003c4206 	br	2123c <___vfprintf_internal_r+0x620>
   22134:	18800017 	ldw	r2,0(r3)
   22138:	d8800a15 	stw	r2,40(sp)
   2213c:	18800117 	ldw	r2,4(r3)
   22140:	d8800b15 	stw	r2,44(sp)
   22144:	003c9e06 	br	213c0 <___vfprintf_internal_r+0x7a4>
   22148:	6880040c 	andi	r2,r13,16
   2214c:	1000921e 	bne	r2,zero,22398 <___vfprintf_internal_r+0x177c>
   22150:	6b40100c 	andi	r13,r13,64
   22154:	68009026 	beq	r13,zero,22398 <___vfprintf_internal_r+0x177c>
   22158:	d8800717 	ldw	r2,28(sp)
   2215c:	d8c00617 	ldw	r3,24(sp)
   22160:	10800017 	ldw	r2,0(r2)
   22164:	10c0000d 	sth	r3,0(r2)
   22168:	003d7406 	br	2173c <___vfprintf_internal_r+0xb20>
   2216c:	202f883a 	mov	r23,r4
   22170:	05ff2f16 	blt	zero,r23,21e30 <___vfprintf_internal_r+0x1214>
   22174:	003f3806 	br	21e58 <___vfprintf_internal_r+0x123c>
   22178:	1880004c 	andi	r2,r3,1
   2217c:	103f3d1e 	bne	r2,zero,21e74 <___vfprintf_internal_r+0x1258>
   22180:	d8800817 	ldw	r2,32(sp)
   22184:	25efc83a 	sub	r23,r4,r23
   22188:	20b9c83a 	sub	fp,r4,r2
   2218c:	b009883a 	mov	r4,r22
   22190:	bf3f570e 	bge	r23,fp,21ef0 <___vfprintf_internal_r+0x12d4>
   22194:	b839883a 	mov	fp,r23
   22198:	003f5506 	br	21ef0 <___vfprintf_internal_r+0x12d4>
   2219c:	002f883a 	mov	r23,zero
   221a0:	003f2e06 	br	21e5c <___vfprintf_internal_r+0x1240>
   221a4:	d9400417 	ldw	r5,16(sp)
   221a8:	d9000517 	ldw	r4,20(sp)
   221ac:	d9801d04 	addi	r6,sp,116
   221b0:	db000f15 	stw	r12,60(sp)
   221b4:	d8c00815 	stw	r3,32(sp)
   221b8:	00284100 	call	28410 <__sprint_r>
   221bc:	103ba21e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   221c0:	d9001f17 	ldw	r4,124(sp)
   221c4:	db000f17 	ldw	r12,60(sp)
   221c8:	d8c00817 	ldw	r3,32(sp)
   221cc:	8825883a 	mov	r18,r17
   221d0:	003d8a06 	br	217fc <___vfprintf_internal_r+0xbe0>
   221d4:	008000f4 	movhi	r2,3
   221d8:	1081a304 	addi	r2,r2,1676
   221dc:	d8800e15 	stw	r2,56(sp)
   221e0:	6880080c 	andi	r2,r13,32
   221e4:	10007326 	beq	r2,zero,223b4 <___vfprintf_internal_r+0x1798>
   221e8:	d8800717 	ldw	r2,28(sp)
   221ec:	15800017 	ldw	r22,0(r2)
   221f0:	15c00117 	ldw	r23,4(r2)
   221f4:	10800204 	addi	r2,r2,8
   221f8:	d8800715 	stw	r2,28(sp)
   221fc:	6880004c 	andi	r2,r13,1
   22200:	10006a26 	beq	r2,zero,223ac <___vfprintf_internal_r+0x1790>
   22204:	b5c4b03a 	or	r2,r22,r23
   22208:	10006826 	beq	r2,zero,223ac <___vfprintf_internal_r+0x1790>
   2220c:	00800c04 	movi	r2,48
   22210:	d8801685 	stb	r2,90(sp)
   22214:	df0016c5 	stb	fp,91(sp)
   22218:	6b400094 	ori	r13,r13,2
   2221c:	00800084 	movi	r2,2
   22220:	003be306 	br	211b0 <___vfprintf_internal_r+0x594>
   22224:	408001f0 	cmpltui	r2,r8,7
   22228:	400f883a 	mov	r7,r8
   2222c:	1001bf26 	beq	r2,zero,2292c <___vfprintf_internal_r+0x1d10>
   22230:	054000f4 	movhi	r21,3
   22234:	3819883a 	mov	r12,r7
   22238:	dd800715 	stw	r22,28(sp)
   2223c:	ad41ad04 	addi	r21,r21,1716
   22240:	003b3b06 	br	20f30 <___vfprintf_internal_r+0x314>
   22244:	008000f4 	movhi	r2,3
   22248:	1081a804 	addi	r2,r2,1696
   2224c:	d8800e15 	stw	r2,56(sp)
   22250:	003fe306 	br	221e0 <___vfprintf_internal_r+0x15c4>
   22254:	b009883a 	mov	r4,r22
   22258:	b9400450 	cmplti	r5,r23,17
   2225c:	058000f4 	movhi	r22,3
   22260:	d8801e17 	ldw	r2,120(sp)
   22264:	b581b004 	addi	r22,r22,1728
   22268:	2801901e 	bne	r5,zero,228ac <___vfprintf_internal_r+0x1c90>
   2226c:	980b883a 	mov	r5,r19
   22270:	d8c00f15 	stw	r3,60(sp)
   22274:	8027883a 	mov	r19,r16
   22278:	9007883a 	mov	r3,r18
   2227c:	b821883a 	mov	r16,r23
   22280:	b025883a 	mov	r18,r22
   22284:	07000404 	movi	fp,16
   22288:	a02d883a 	mov	r22,r20
   2228c:	282f883a 	mov	r23,r5
   22290:	6029883a 	mov	r20,r12
   22294:	00000406 	br	222a8 <___vfprintf_internal_r+0x168c>
   22298:	18c00204 	addi	r3,r3,8
   2229c:	843ffc04 	addi	r16,r16,-16
   222a0:	81400448 	cmpgei	r5,r16,17
   222a4:	28017826 	beq	r5,zero,22888 <___vfprintf_internal_r+0x1c6c>
   222a8:	10800044 	addi	r2,r2,1
   222ac:	21000404 	addi	r4,r4,16
   222b0:	1c800015 	stw	r18,0(r3)
   222b4:	1f000115 	stw	fp,4(r3)
   222b8:	d9001f15 	stw	r4,124(sp)
   222bc:	d8801e15 	stw	r2,120(sp)
   222c0:	11400208 	cmpgei	r5,r2,8
   222c4:	283ff426 	beq	r5,zero,22298 <___vfprintf_internal_r+0x167c>
   222c8:	d9400417 	ldw	r5,16(sp)
   222cc:	d9000517 	ldw	r4,20(sp)
   222d0:	d9801d04 	addi	r6,sp,116
   222d4:	00284100 	call	28410 <__sprint_r>
   222d8:	103b5b1e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   222dc:	d9001f17 	ldw	r4,124(sp)
   222e0:	d8801e17 	ldw	r2,120(sp)
   222e4:	8807883a 	mov	r3,r17
   222e8:	003fec06 	br	2229c <___vfprintf_internal_r+0x1680>
   222ec:	b007883a 	mov	r3,r22
   222f0:	9805883a 	mov	r2,r19
   222f4:	dc000f15 	stw	r16,60(sp)
   222f8:	a02d883a 	mov	r22,r20
   222fc:	b827883a 	mov	r19,r23
   22300:	9029883a 	mov	r20,r18
   22304:	db400815 	stw	r13,32(sp)
   22308:	8821883a 	mov	r16,r17
   2230c:	da001015 	stw	r8,64(sp)
   22310:	202b883a 	mov	r21,r4
   22314:	102f883a 	mov	r23,r2
   22318:	1825883a 	mov	r18,r3
   2231c:	9009883a 	mov	r4,r18
   22320:	980b883a 	mov	r5,r19
   22324:	01800284 	movi	r6,10
   22328:	000f883a 	mov	r7,zero
   2232c:	002adf80 	call	2adf8 <__umoddi3>
   22330:	10800c04 	addi	r2,r2,48
   22334:	9009883a 	mov	r4,r18
   22338:	980b883a 	mov	r5,r19
   2233c:	01800284 	movi	r6,10
   22340:	000f883a 	mov	r7,zero
   22344:	80bfffc5 	stb	r2,-1(r16)
   22348:	002a8a80 	call	2a8a8 <__udivdi3>
   2234c:	980d883a 	mov	r6,r19
   22350:	900f883a 	mov	r7,r18
   22354:	843fffc4 	addi	r16,r16,-1
   22358:	1025883a 	mov	r18,r2
   2235c:	1827883a 	mov	r19,r3
   22360:	303fee1e 	bne	r6,zero,2231c <___vfprintf_internal_r+0x1700>
   22364:	39c002a8 	cmpgeui	r7,r7,10
   22368:	383fec1e 	bne	r7,zero,2231c <___vfprintf_internal_r+0x1700>
   2236c:	db400817 	ldw	r13,32(sp)
   22370:	a809883a 	mov	r4,r21
   22374:	802b883a 	mov	r21,r16
   22378:	a025883a 	mov	r18,r20
   2237c:	da001017 	ldw	r8,64(sp)
   22380:	dc000f17 	ldw	r16,60(sp)
   22384:	b029883a 	mov	r20,r22
   22388:	b827883a 	mov	r19,r23
   2238c:	8d4fc83a 	sub	r7,r17,r21
   22390:	6807883a 	mov	r3,r13
   22394:	003ba906 	br	2123c <___vfprintf_internal_r+0x620>
   22398:	d8800717 	ldw	r2,28(sp)
   2239c:	d8c00617 	ldw	r3,24(sp)
   223a0:	10800017 	ldw	r2,0(r2)
   223a4:	10c00015 	stw	r3,0(r2)
   223a8:	003ce406 	br	2173c <___vfprintf_internal_r+0xb20>
   223ac:	00800084 	movi	r2,2
   223b0:	003b7f06 	br	211b0 <___vfprintf_internal_r+0x594>
   223b4:	d8c00717 	ldw	r3,28(sp)
   223b8:	6880040c 	andi	r2,r13,16
   223bc:	1d800017 	ldw	r22,0(r3)
   223c0:	18c00104 	addi	r3,r3,4
   223c4:	d8c00715 	stw	r3,28(sp)
   223c8:	1000051e 	bne	r2,zero,223e0 <___vfprintf_internal_r+0x17c4>
   223cc:	6880100c 	andi	r2,r13,64
   223d0:	10000326 	beq	r2,zero,223e0 <___vfprintf_internal_r+0x17c4>
   223d4:	b5bfffcc 	andi	r22,r22,65535
   223d8:	002f883a 	mov	r23,zero
   223dc:	003f8706 	br	221fc <___vfprintf_internal_r+0x15e0>
   223e0:	002f883a 	mov	r23,zero
   223e4:	003f8506 	br	221fc <___vfprintf_internal_r+0x15e0>
   223e8:	d9400417 	ldw	r5,16(sp)
   223ec:	d9000517 	ldw	r4,20(sp)
   223f0:	d9801d04 	addi	r6,sp,116
   223f4:	db000f15 	stw	r12,60(sp)
   223f8:	d8c00815 	stw	r3,32(sp)
   223fc:	00284100 	call	28410 <__sprint_r>
   22400:	103b111e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   22404:	dd801f17 	ldw	r22,124(sp)
   22408:	da001e17 	ldw	r8,120(sp)
   2240c:	db000f17 	ldw	r12,60(sp)
   22410:	d8c00817 	ldw	r3,32(sp)
   22414:	882f883a 	mov	r23,r17
   22418:	003dc906 	br	21b40 <___vfprintf_internal_r+0xf24>
   2241c:	d9400417 	ldw	r5,16(sp)
   22420:	d9000517 	ldw	r4,20(sp)
   22424:	d9801d04 	addi	r6,sp,116
   22428:	db000f15 	stw	r12,60(sp)
   2242c:	d8c00815 	stw	r3,32(sp)
   22430:	00284100 	call	28410 <__sprint_r>
   22434:	103b041e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   22438:	df001f17 	ldw	fp,124(sp)
   2243c:	da001e17 	ldw	r8,120(sp)
   22440:	db000f17 	ldw	r12,60(sp)
   22444:	d8c00817 	ldw	r3,32(sp)
   22448:	882f883a 	mov	r23,r17
   2244c:	003dc706 	br	21b6c <___vfprintf_internal_r+0xf50>
   22450:	d9400417 	ldw	r5,16(sp)
   22454:	d9000517 	ldw	r4,20(sp)
   22458:	d9801d04 	addi	r6,sp,116
   2245c:	db001515 	stw	r12,84(sp)
   22460:	d9c01415 	stw	r7,80(sp)
   22464:	da001315 	stw	r8,76(sp)
   22468:	d8c01215 	stw	r3,72(sp)
   2246c:	db401015 	stw	r13,64(sp)
   22470:	db800f15 	stw	r14,60(sp)
   22474:	00284100 	call	28410 <__sprint_r>
   22478:	103af31e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   2247c:	db001517 	ldw	r12,84(sp)
   22480:	d9c01417 	ldw	r7,80(sp)
   22484:	da001317 	ldw	r8,76(sp)
   22488:	d8c01217 	ldw	r3,72(sp)
   2248c:	db401017 	ldw	r13,64(sp)
   22490:	db800f17 	ldw	r14,60(sp)
   22494:	8825883a 	mov	r18,r17
   22498:	003aaf06 	br	20f58 <___vfprintf_internal_r+0x33c>
   2249c:	d8801e17 	ldw	r2,120(sp)
   224a0:	014000f4 	movhi	r5,3
   224a4:	2941af04 	addi	r5,r5,1724
   224a8:	10800044 	addi	r2,r2,1
   224ac:	b1000044 	addi	r4,r22,1
   224b0:	91400015 	stw	r5,0(r18)
   224b4:	01400044 	movi	r5,1
   224b8:	d8801e15 	stw	r2,120(sp)
   224bc:	91400115 	stw	r5,4(r18)
   224c0:	d9001f15 	stw	r4,124(sp)
   224c4:	10800208 	cmpgei	r2,r2,8
   224c8:	1001071e 	bne	r2,zero,228e8 <___vfprintf_internal_r+0x1ccc>
   224cc:	94800204 	addi	r18,r18,8
   224d0:	b800a31e 	bne	r23,zero,22760 <___vfprintf_internal_r+0x1b44>
   224d4:	d9400917 	ldw	r5,36(sp)
   224d8:	1880004c 	andi	r2,r3,1
   224dc:	1144b03a 	or	r2,r2,r5
   224e0:	103ac926 	beq	r2,zero,21008 <___vfprintf_internal_r+0x3ec>
   224e4:	d8800d17 	ldw	r2,52(sp)
   224e8:	d9400c17 	ldw	r5,48(sp)
   224ec:	90800015 	stw	r2,0(r18)
   224f0:	d8801e17 	ldw	r2,120(sp)
   224f4:	2909883a 	add	r4,r5,r4
   224f8:	91400115 	stw	r5,4(r18)
   224fc:	10800044 	addi	r2,r2,1
   22500:	d9001f15 	stw	r4,124(sp)
   22504:	d8801e15 	stw	r2,120(sp)
   22508:	11400208 	cmpgei	r5,r2,8
   2250c:	28010e1e 	bne	r5,zero,22948 <___vfprintf_internal_r+0x1d2c>
   22510:	94800204 	addi	r18,r18,8
   22514:	d9400917 	ldw	r5,36(sp)
   22518:	10800044 	addi	r2,r2,1
   2251c:	d8801e15 	stw	r2,120(sp)
   22520:	2909883a 	add	r4,r5,r4
   22524:	95400015 	stw	r21,0(r18)
   22528:	91400115 	stw	r5,4(r18)
   2252c:	d9001f15 	stw	r4,124(sp)
   22530:	10800208 	cmpgei	r2,r2,8
   22534:	103ab326 	beq	r2,zero,21004 <___vfprintf_internal_r+0x3e8>
   22538:	003e0406 	br	21d4c <___vfprintf_internal_r+0x1130>
   2253c:	d9000a17 	ldw	r4,40(sp)
   22540:	d9400b17 	ldw	r5,44(sp)
   22544:	da000815 	stw	r8,32(sp)
   22548:	200d883a 	mov	r6,r4
   2254c:	280f883a 	mov	r7,r5
   22550:	db400715 	stw	r13,28(sp)
   22554:	002d7500 	call	2d750 <__unorddf2>
   22558:	db400717 	ldw	r13,28(sp)
   2255c:	da000817 	ldw	r8,32(sp)
   22560:	10024c1e 	bne	r2,zero,22e94 <___vfprintf_internal_r+0x2278>
   22564:	057ff7c4 	movi	r21,-33
   22568:	40bfffe0 	cmpeqi	r2,r8,-1
   2256c:	e56c703a 	and	r22,fp,r21
   22570:	1001d71e 	bne	r2,zero,22cd0 <___vfprintf_internal_r+0x20b4>
   22574:	b08011d8 	cmpnei	r2,r22,71
   22578:	1001c526 	beq	r2,zero,22c90 <___vfprintf_internal_r+0x2074>
   2257c:	d8800b17 	ldw	r2,44(sp)
   22580:	68c04014 	ori	r3,r13,256
   22584:	1000e516 	blt	r2,zero,2291c <___vfprintf_internal_r+0x1d00>
   22588:	ddc00b17 	ldw	r23,44(sp)
   2258c:	d8000705 	stb	zero,28(sp)
   22590:	e08019a0 	cmpeqi	r2,fp,102
   22594:	d8801015 	stw	r2,64(sp)
   22598:	10017c1e 	bne	r2,zero,22b8c <___vfprintf_internal_r+0x1f70>
   2259c:	b0801158 	cmpnei	r2,r22,69
   225a0:	1000f826 	beq	r2,zero,22984 <___vfprintf_internal_r+0x1d68>
   225a4:	d8801b04 	addi	r2,sp,108
   225a8:	d9000517 	ldw	r4,20(sp)
   225ac:	d8800315 	stw	r2,12(sp)
   225b0:	d9400a17 	ldw	r5,40(sp)
   225b4:	d8801804 	addi	r2,sp,96
   225b8:	d8800215 	stw	r2,8(sp)
   225bc:	d8801704 	addi	r2,sp,92
   225c0:	da000015 	stw	r8,0(sp)
   225c4:	d8800115 	stw	r2,4(sp)
   225c8:	01c00084 	movi	r7,2
   225cc:	b80d883a 	mov	r6,r23
   225d0:	d8c01215 	stw	r3,72(sp)
   225d4:	db400915 	stw	r13,36(sp)
   225d8:	da000815 	stw	r8,32(sp)
   225dc:	00233ec0 	call	233ec <_dtoa_r>
   225e0:	e10019e0 	cmpeqi	r4,fp,103
   225e4:	da000817 	ldw	r8,32(sp)
   225e8:	db400917 	ldw	r13,36(sp)
   225ec:	d8c01217 	ldw	r3,72(sp)
   225f0:	102b883a 	mov	r21,r2
   225f4:	20010b26 	beq	r4,zero,22a24 <___vfprintf_internal_r+0x1e08>
   225f8:	6880004c 	andi	r2,r13,1
   225fc:	10010b26 	beq	r2,zero,22a2c <___vfprintf_internal_r+0x1e10>
   22600:	aa19883a 	add	r12,r21,r8
   22604:	d9000a17 	ldw	r4,40(sp)
   22608:	000d883a 	mov	r6,zero
   2260c:	000f883a 	mov	r7,zero
   22610:	b80b883a 	mov	r5,r23
   22614:	db001315 	stw	r12,76(sp)
   22618:	da001215 	stw	r8,72(sp)
   2261c:	d8c00915 	stw	r3,36(sp)
   22620:	db400815 	stw	r13,32(sp)
   22624:	002c4540 	call	2c454 <__eqdf2>
   22628:	db400817 	ldw	r13,32(sp)
   2262c:	d8c00917 	ldw	r3,36(sp)
   22630:	da001217 	ldw	r8,72(sp)
   22634:	db001317 	ldw	r12,76(sp)
   22638:	10023326 	beq	r2,zero,22f08 <___vfprintf_internal_r+0x22ec>
   2263c:	d8801b17 	ldw	r2,108(sp)
   22640:	1300062e 	bgeu	r2,r12,2265c <___vfprintf_internal_r+0x1a40>
   22644:	01400c04 	movi	r5,48
   22648:	11000044 	addi	r4,r2,1
   2264c:	d9001b15 	stw	r4,108(sp)
   22650:	11400005 	stb	r5,0(r2)
   22654:	d8801b17 	ldw	r2,108(sp)
   22658:	133ffb36 	bltu	r2,r12,22648 <___vfprintf_internal_r+0x1a2c>
   2265c:	d9c01717 	ldw	r7,92(sp)
   22660:	1545c83a 	sub	r2,r2,r21
   22664:	b10011d8 	cmpnei	r4,r22,71
   22668:	d8800915 	stw	r2,36(sp)
   2266c:	d9c00815 	stw	r7,32(sp)
   22670:	2000f226 	beq	r4,zero,22a3c <___vfprintf_internal_r+0x1e20>
   22674:	d8801017 	ldw	r2,64(sp)
   22678:	10021d26 	beq	r2,zero,22ef0 <___vfprintf_internal_r+0x22d4>
   2267c:	d9000817 	ldw	r4,32(sp)
   22680:	6880004c 	andi	r2,r13,1
   22684:	1204b03a 	or	r2,r2,r8
   22688:	0102430e 	bge	zero,r4,22f98 <___vfprintf_internal_r+0x237c>
   2268c:	1002221e 	bne	r2,zero,22f18 <___vfprintf_internal_r+0x22fc>
   22690:	d9c00817 	ldw	r7,32(sp)
   22694:	3819883a 	mov	r12,r7
   22698:	07001984 	movi	fp,102
   2269c:	ddc00707 	ldb	r23,28(sp)
   226a0:	b8013526 	beq	r23,zero,22b78 <___vfprintf_internal_r+0x1f5c>
   226a4:	00800b44 	movi	r2,45
   226a8:	d8801645 	stb	r2,89(sp)
   226ac:	d8800f17 	ldw	r2,60(sp)
   226b0:	0011883a 	mov	r8,zero
   226b4:	d8800715 	stw	r2,28(sp)
   226b8:	003ae806 	br	2125c <___vfprintf_internal_r+0x640>
   226bc:	d9400417 	ldw	r5,16(sp)
   226c0:	d9000517 	ldw	r4,20(sp)
   226c4:	d9801d04 	addi	r6,sp,116
   226c8:	db000f15 	stw	r12,60(sp)
   226cc:	d8c00815 	stw	r3,32(sp)
   226d0:	00284100 	call	28410 <__sprint_r>
   226d4:	103a5c1e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   226d8:	dd801f17 	ldw	r22,124(sp)
   226dc:	db000f17 	ldw	r12,60(sp)
   226e0:	d8c00817 	ldw	r3,32(sp)
   226e4:	8825883a 	mov	r18,r17
   226e8:	003c3106 	br	217b0 <___vfprintf_internal_r+0xb94>
   226ec:	d9400417 	ldw	r5,16(sp)
   226f0:	d9000517 	ldw	r4,20(sp)
   226f4:	d9801d04 	addi	r6,sp,116
   226f8:	db000f15 	stw	r12,60(sp)
   226fc:	d8c00815 	stw	r3,32(sp)
   22700:	00284100 	call	28410 <__sprint_r>
   22704:	103a501e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   22708:	df001f17 	ldw	fp,124(sp)
   2270c:	da001e17 	ldw	r8,120(sp)
   22710:	d8c00817 	ldw	r3,32(sp)
   22714:	db000f17 	ldw	r12,60(sp)
   22718:	882f883a 	mov	r23,r17
   2271c:	003d2b06 	br	21bcc <___vfprintf_internal_r+0xfb0>
   22720:	d9400417 	ldw	r5,16(sp)
   22724:	d9000517 	ldw	r4,20(sp)
   22728:	d9801d04 	addi	r6,sp,116
   2272c:	db001315 	stw	r12,76(sp)
   22730:	d9c01215 	stw	r7,72(sp)
   22734:	da001015 	stw	r8,64(sp)
   22738:	d8c00f15 	stw	r3,60(sp)
   2273c:	00284100 	call	28410 <__sprint_r>
   22740:	103a411e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   22744:	dd801f17 	ldw	r22,124(sp)
   22748:	db001317 	ldw	r12,76(sp)
   2274c:	d9c01217 	ldw	r7,72(sp)
   22750:	da001017 	ldw	r8,64(sp)
   22754:	d8c00f17 	ldw	r3,60(sp)
   22758:	8825883a 	mov	r18,r17
   2275c:	003a1c06 	br	20fd0 <___vfprintf_internal_r+0x3b4>
   22760:	d8800d17 	ldw	r2,52(sp)
   22764:	d9400c17 	ldw	r5,48(sp)
   22768:	90800015 	stw	r2,0(r18)
   2276c:	d8801e17 	ldw	r2,120(sp)
   22770:	2909883a 	add	r4,r5,r4
   22774:	91400115 	stw	r5,4(r18)
   22778:	10800044 	addi	r2,r2,1
   2277c:	d9001f15 	stw	r4,124(sp)
   22780:	d8801e15 	stw	r2,120(sp)
   22784:	11400208 	cmpgei	r5,r2,8
   22788:	28006f1e 	bne	r5,zero,22948 <___vfprintf_internal_r+0x1d2c>
   2278c:	94800204 	addi	r18,r18,8
   22790:	b83f600e 	bge	r23,zero,22514 <___vfprintf_internal_r+0x18f8>
   22794:	058000f4 	movhi	r22,3
   22798:	b97ffc08 	cmpgei	r5,r23,-16
   2279c:	b581b004 	addi	r22,r22,1728
   227a0:	05efc83a 	sub	r23,zero,r23
   227a4:	2801941e 	bne	r5,zero,22df8 <___vfprintf_internal_r+0x21dc>
   227a8:	d8c00815 	stw	r3,32(sp)
   227ac:	07000404 	movi	fp,16
   227b0:	9007883a 	mov	r3,r18
   227b4:	8025883a 	mov	r18,r16
   227b8:	b021883a 	mov	r16,r22
   227bc:	982d883a 	mov	r22,r19
   227c0:	6027883a 	mov	r19,r12
   227c4:	00000406 	br	227d8 <___vfprintf_internal_r+0x1bbc>
   227c8:	18c00204 	addi	r3,r3,8
   227cc:	bdfffc04 	addi	r23,r23,-16
   227d0:	b9400448 	cmpgei	r5,r23,17
   227d4:	28018226 	beq	r5,zero,22de0 <___vfprintf_internal_r+0x21c4>
   227d8:	10800044 	addi	r2,r2,1
   227dc:	21000404 	addi	r4,r4,16
   227e0:	1c000015 	stw	r16,0(r3)
   227e4:	1f000115 	stw	fp,4(r3)
   227e8:	d9001f15 	stw	r4,124(sp)
   227ec:	d8801e15 	stw	r2,120(sp)
   227f0:	11400208 	cmpgei	r5,r2,8
   227f4:	283ff426 	beq	r5,zero,227c8 <___vfprintf_internal_r+0x1bac>
   227f8:	d9400417 	ldw	r5,16(sp)
   227fc:	d9000517 	ldw	r4,20(sp)
   22800:	d9801d04 	addi	r6,sp,116
   22804:	00284100 	call	28410 <__sprint_r>
   22808:	103a0f1e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   2280c:	d9001f17 	ldw	r4,124(sp)
   22810:	d8801e17 	ldw	r2,120(sp)
   22814:	8807883a 	mov	r3,r17
   22818:	003fec06 	br	227cc <___vfprintf_internal_r+0x1bb0>
   2281c:	b019883a 	mov	r12,r22
   22820:	902d883a 	mov	r22,r18
   22824:	8025883a 	mov	r18,r16
   22828:	a021883a 	mov	r16,r20
   2282c:	b829883a 	mov	r20,r23
   22830:	102f883a 	mov	r23,r2
   22834:	e005883a 	mov	r2,fp
   22838:	1839883a 	mov	fp,r3
   2283c:	9807883a 	mov	r3,r19
   22840:	1027883a 	mov	r19,r2
   22844:	42000044 	addi	r8,r8,1
   22848:	e4b9883a 	add	fp,fp,r18
   2284c:	bd800015 	stw	r22,0(r23)
   22850:	003cd806 	br	21bb4 <___vfprintf_internal_r+0xf98>
   22854:	a809883a 	mov	r4,r21
   22858:	0020b840 	call	20b84 <strlen>
   2285c:	db400817 	ldw	r13,32(sp)
   22860:	100f883a 	mov	r7,r2
   22864:	1019883a 	mov	r12,r2
   22868:	dd800715 	stw	r22,28(sp)
   2286c:	0039b006 	br	20f30 <___vfprintf_internal_r+0x314>
   22870:	054000f4 	movhi	r21,3
   22874:	ad419f04 	addi	r21,r21,1660
   22878:	003af606 	br	21454 <___vfprintf_internal_r+0x838>
   2287c:	058000f4 	movhi	r22,3
   22880:	b581b004 	addi	r22,r22,1728
   22884:	003c7806 	br	21a68 <___vfprintf_internal_r+0xe4c>
   22888:	a019883a 	mov	r12,r20
   2288c:	b029883a 	mov	r20,r22
   22890:	902d883a 	mov	r22,r18
   22894:	1825883a 	mov	r18,r3
   22898:	d8c00f17 	ldw	r3,60(sp)
   2289c:	b80b883a 	mov	r5,r23
   228a0:	802f883a 	mov	r23,r16
   228a4:	9821883a 	mov	r16,r19
   228a8:	2827883a 	mov	r19,r5
   228ac:	10800044 	addi	r2,r2,1
   228b0:	b909883a 	add	r4,r23,r4
   228b4:	d8801e15 	stw	r2,120(sp)
   228b8:	95800015 	stw	r22,0(r18)
   228bc:	95c00115 	stw	r23,4(r18)
   228c0:	d9001f15 	stw	r4,124(sp)
   228c4:	10800208 	cmpgei	r2,r2,8
   228c8:	10004a1e 	bne	r2,zero,229f4 <___vfprintf_internal_r+0x1dd8>
   228cc:	94800204 	addi	r18,r18,8
   228d0:	202d883a 	mov	r22,r4
   228d4:	003d6406 	br	21e68 <___vfprintf_internal_r+0x124c>
   228d8:	00800b44 	movi	r2,45
   228dc:	d8801645 	stb	r2,89(sp)
   228e0:	01000b44 	movi	r4,45
   228e4:	003ad706 	br	21444 <___vfprintf_internal_r+0x828>
   228e8:	d9400417 	ldw	r5,16(sp)
   228ec:	d9000517 	ldw	r4,20(sp)
   228f0:	d9801d04 	addi	r6,sp,116
   228f4:	db000f15 	stw	r12,60(sp)
   228f8:	d8c00815 	stw	r3,32(sp)
   228fc:	00284100 	call	28410 <__sprint_r>
   22900:	1039d11e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   22904:	ddc01717 	ldw	r23,92(sp)
   22908:	d9001f17 	ldw	r4,124(sp)
   2290c:	db000f17 	ldw	r12,60(sp)
   22910:	d8c00817 	ldw	r3,32(sp)
   22914:	8825883a 	mov	r18,r17
   22918:	003eed06 	br	224d0 <___vfprintf_internal_r+0x18b4>
   2291c:	15e0003c 	xorhi	r23,r2,32768
   22920:	00800b44 	movi	r2,45
   22924:	d8800705 	stb	r2,28(sp)
   22928:	003f1906 	br	22590 <___vfprintf_internal_r+0x1974>
   2292c:	01c00184 	movi	r7,6
   22930:	003e3f06 	br	22230 <___vfprintf_internal_r+0x1614>
   22934:	d9400417 	ldw	r5,16(sp)
   22938:	d9000517 	ldw	r4,20(sp)
   2293c:	d9801d04 	addi	r6,sp,116
   22940:	00284100 	call	28410 <__sprint_r>
   22944:	0039c006 	br	21048 <___vfprintf_internal_r+0x42c>
   22948:	d9400417 	ldw	r5,16(sp)
   2294c:	d9000517 	ldw	r4,20(sp)
   22950:	d9801d04 	addi	r6,sp,116
   22954:	db000f15 	stw	r12,60(sp)
   22958:	d8c00815 	stw	r3,32(sp)
   2295c:	00284100 	call	28410 <__sprint_r>
   22960:	1039b91e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   22964:	ddc01717 	ldw	r23,92(sp)
   22968:	d9001f17 	ldw	r4,124(sp)
   2296c:	d8801e17 	ldw	r2,120(sp)
   22970:	db000f17 	ldw	r12,60(sp)
   22974:	d8c00817 	ldw	r3,32(sp)
   22978:	8825883a 	mov	r18,r17
   2297c:	b83ee50e 	bge	r23,zero,22514 <___vfprintf_internal_r+0x18f8>
   22980:	003f8406 	br	22794 <___vfprintf_internal_r+0x1b78>
   22984:	d8801b04 	addi	r2,sp,108
   22988:	d8800315 	stw	r2,12(sp)
   2298c:	d9400a17 	ldw	r5,40(sp)
   22990:	d8801804 	addi	r2,sp,96
   22994:	d9000517 	ldw	r4,20(sp)
   22998:	d8c01315 	stw	r3,76(sp)
   2299c:	d8800215 	stw	r2,8(sp)
   229a0:	40c00044 	addi	r3,r8,1
   229a4:	d8801704 	addi	r2,sp,92
   229a8:	d8c00015 	stw	r3,0(sp)
   229ac:	d8800115 	stw	r2,4(sp)
   229b0:	01c00084 	movi	r7,2
   229b4:	b80d883a 	mov	r6,r23
   229b8:	db401215 	stw	r13,72(sp)
   229bc:	da000815 	stw	r8,32(sp)
   229c0:	d8c00915 	stw	r3,36(sp)
   229c4:	00233ec0 	call	233ec <_dtoa_r>
   229c8:	da000817 	ldw	r8,32(sp)
   229cc:	db401217 	ldw	r13,72(sp)
   229d0:	d8c01317 	ldw	r3,76(sp)
   229d4:	102b883a 	mov	r21,r2
   229d8:	e08011d8 	cmpnei	r2,fp,71
   229dc:	1001351e 	bne	r2,zero,22eb4 <___vfprintf_internal_r+0x2298>
   229e0:	6880004c 	andi	r2,r13,1
   229e4:	10001126 	beq	r2,zero,22a2c <___vfprintf_internal_r+0x1e10>
   229e8:	d8800917 	ldw	r2,36(sp)
   229ec:	a899883a 	add	r12,r21,r2
   229f0:	003f0406 	br	22604 <___vfprintf_internal_r+0x19e8>
   229f4:	d9400417 	ldw	r5,16(sp)
   229f8:	d9000517 	ldw	r4,20(sp)
   229fc:	d9801d04 	addi	r6,sp,116
   22a00:	db001015 	stw	r12,64(sp)
   22a04:	d8c00f15 	stw	r3,60(sp)
   22a08:	00284100 	call	28410 <__sprint_r>
   22a0c:	10398e1e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   22a10:	dd801f17 	ldw	r22,124(sp)
   22a14:	db001017 	ldw	r12,64(sp)
   22a18:	d8c00f17 	ldw	r3,60(sp)
   22a1c:	8825883a 	mov	r18,r17
   22a20:	003d1106 	br	21e68 <___vfprintf_internal_r+0x124c>
   22a24:	da000915 	stw	r8,36(sp)
   22a28:	003feb06 	br	229d8 <___vfprintf_internal_r+0x1dbc>
   22a2c:	d8801b17 	ldw	r2,108(sp)
   22a30:	d9c01717 	ldw	r7,92(sp)
   22a34:	1545c83a 	sub	r2,r2,r21
   22a38:	d8800915 	stw	r2,36(sp)
   22a3c:	38bfff48 	cmpgei	r2,r7,-3
   22a40:	d9c00815 	stw	r7,32(sp)
   22a44:	1000b31e 	bne	r2,zero,22d14 <___vfprintf_internal_r+0x20f8>
   22a48:	e73fff84 	addi	fp,fp,-2
   22a4c:	397fffc4 	addi	r5,r7,-1
   22a50:	e005883a 	mov	r2,fp
   22a54:	01000044 	movi	r4,1
   22a58:	21efc83a 	sub	r23,r4,r7
   22a5c:	01000b44 	movi	r4,45
   22a60:	21003fcc 	andi	r4,r4,255
   22a64:	2008923a 	slli	r4,r4,8
   22a68:	10803fcc 	andi	r2,r2,255
   22a6c:	d9401715 	stw	r5,92(sp)
   22a70:	1104b03a 	or	r2,r2,r4
   22a74:	d880190d 	sth	r2,100(sp)
   22a78:	b8800290 	cmplti	r2,r23,10
   22a7c:	1000c71e 	bne	r2,zero,22d9c <___vfprintf_internal_r+0x2180>
   22a80:	dd801cc4 	addi	r22,sp,115
   22a84:	9805883a 	mov	r2,r19
   22a88:	db400815 	stw	r13,32(sp)
   22a8c:	b027883a 	mov	r19,r22
   22a90:	d8c01015 	stw	r3,64(sp)
   22a94:	a02d883a 	mov	r22,r20
   22a98:	dc001115 	stw	r16,68(sp)
   22a9c:	9029883a 	mov	r20,r18
   22aa0:	b825883a 	mov	r18,r23
   22aa4:	102f883a 	mov	r23,r2
   22aa8:	9009883a 	mov	r4,r18
   22aac:	01400284 	movi	r5,10
   22ab0:	00209080 	call	20908 <__modsi3>
   22ab4:	10800c04 	addi	r2,r2,48
   22ab8:	9009883a 	mov	r4,r18
   22abc:	01400284 	movi	r5,10
   22ac0:	98bfffc5 	stb	r2,-1(r19)
   22ac4:	00208880 	call	20888 <__divsi3>
   22ac8:	91401908 	cmpgei	r5,r18,100
   22acc:	9821883a 	mov	r16,r19
   22ad0:	1025883a 	mov	r18,r2
   22ad4:	9cffffc4 	addi	r19,r19,-1
   22ad8:	283ff31e 	bne	r5,zero,22aa8 <___vfprintf_internal_r+0x1e8c>
   22adc:	b805883a 	mov	r2,r23
   22ae0:	902f883a 	mov	r23,r18
   22ae4:	8009883a 	mov	r4,r16
   22ae8:	a025883a 	mov	r18,r20
   22aec:	b029883a 	mov	r20,r22
   22af0:	982d883a 	mov	r22,r19
   22af4:	1027883a 	mov	r19,r2
   22af8:	b8800c04 	addi	r2,r23,48
   22afc:	b0bfffc5 	stb	r2,-1(r22)
   22b00:	217fff84 	addi	r5,r4,-2
   22b04:	d8801cc4 	addi	r2,sp,115
   22b08:	db400817 	ldw	r13,32(sp)
   22b0c:	d8c01017 	ldw	r3,64(sp)
   22b10:	dc001117 	ldw	r16,68(sp)
   22b14:	28810e2e 	bgeu	r5,r2,22f50 <___vfprintf_internal_r+0x2334>
   22b18:	d8801d44 	addi	r2,sp,117
   22b1c:	112dc83a 	sub	r22,r2,r4
   22b20:	b00d883a 	mov	r6,r22
   22b24:	d9001984 	addi	r4,sp,102
   22b28:	002671c0 	call	2671c <memcpy>
   22b2c:	d8801984 	addi	r2,sp,102
   22b30:	1585883a 	add	r2,r2,r22
   22b34:	d9001904 	addi	r4,sp,100
   22b38:	db400817 	ldw	r13,32(sp)
   22b3c:	d8c01017 	ldw	r3,64(sp)
   22b40:	1105c83a 	sub	r2,r2,r4
   22b44:	d8801115 	stw	r2,68(sp)
   22b48:	d9000917 	ldw	r4,36(sp)
   22b4c:	d9401117 	ldw	r5,68(sp)
   22b50:	20800088 	cmpgei	r2,r4,2
   22b54:	214f883a 	add	r7,r4,r5
   22b58:	10009726 	beq	r2,zero,22db8 <___vfprintf_internal_r+0x219c>
   22b5c:	d8800c17 	ldw	r2,48(sp)
   22b60:	388f883a 	add	r7,r7,r2
   22b64:	3819883a 	mov	r12,r7
   22b68:	3800010e 	bge	r7,zero,22b70 <___vfprintf_internal_r+0x1f54>
   22b6c:	0019883a 	mov	r12,zero
   22b70:	d8000815 	stw	zero,32(sp)
   22b74:	003ec906 	br	2269c <___vfprintf_internal_r+0x1a80>
   22b78:	d8800f17 	ldw	r2,60(sp)
   22b7c:	d9001643 	ldbu	r4,89(sp)
   22b80:	0011883a 	mov	r8,zero
   22b84:	d8800715 	stw	r2,28(sp)
   22b88:	0039b006 	br	2124c <___vfprintf_internal_r+0x630>
   22b8c:	d8801b04 	addi	r2,sp,108
   22b90:	d8800315 	stw	r2,12(sp)
   22b94:	d9400a17 	ldw	r5,40(sp)
   22b98:	d8801804 	addi	r2,sp,96
   22b9c:	d9000517 	ldw	r4,20(sp)
   22ba0:	d8800215 	stw	r2,8(sp)
   22ba4:	d8801704 	addi	r2,sp,92
   22ba8:	da000015 	stw	r8,0(sp)
   22bac:	d8800115 	stw	r2,4(sp)
   22bb0:	01c000c4 	movi	r7,3
   22bb4:	b80d883a 	mov	r6,r23
   22bb8:	d8c01215 	stw	r3,72(sp)
   22bbc:	db400915 	stw	r13,36(sp)
   22bc0:	da000815 	stw	r8,32(sp)
   22bc4:	00233ec0 	call	233ec <_dtoa_r>
   22bc8:	102b883a 	mov	r21,r2
   22bcc:	10800007 	ldb	r2,0(r2)
   22bd0:	da000817 	ldw	r8,32(sp)
   22bd4:	db400917 	ldw	r13,36(sp)
   22bd8:	10800c20 	cmpeqi	r2,r2,48
   22bdc:	d8c01217 	ldw	r3,72(sp)
   22be0:	10009c1e 	bne	r2,zero,22e54 <___vfprintf_internal_r+0x2238>
   22be4:	d8801717 	ldw	r2,92(sp)
   22be8:	d9000a17 	ldw	r4,40(sp)
   22bec:	1219883a 	add	r12,r2,r8
   22bf0:	000d883a 	mov	r6,zero
   22bf4:	000f883a 	mov	r7,zero
   22bf8:	b80b883a 	mov	r5,r23
   22bfc:	d8c01315 	stw	r3,76(sp)
   22c00:	db401215 	stw	r13,72(sp)
   22c04:	da000915 	stw	r8,36(sp)
   22c08:	db000815 	stw	r12,32(sp)
   22c0c:	002c4540 	call	2c454 <__eqdf2>
   22c10:	db000817 	ldw	r12,32(sp)
   22c14:	da000917 	ldw	r8,36(sp)
   22c18:	db401217 	ldw	r13,72(sp)
   22c1c:	d8c01317 	ldw	r3,76(sp)
   22c20:	10008a1e 	bne	r2,zero,22e4c <___vfprintf_internal_r+0x2230>
   22c24:	d8801717 	ldw	r2,92(sp)
   22c28:	db000915 	stw	r12,36(sp)
   22c2c:	d8800815 	stw	r2,32(sp)
   22c30:	003e9206 	br	2267c <___vfprintf_internal_r+0x1a60>
   22c34:	d9400417 	ldw	r5,16(sp)
   22c38:	d9000517 	ldw	r4,20(sp)
   22c3c:	d9801d04 	addi	r6,sp,116
   22c40:	db001015 	stw	r12,64(sp)
   22c44:	d8c00f15 	stw	r3,60(sp)
   22c48:	00284100 	call	28410 <__sprint_r>
   22c4c:	1038fe1e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   22c50:	ddc01717 	ldw	r23,92(sp)
   22c54:	d9001f17 	ldw	r4,124(sp)
   22c58:	db001017 	ldw	r12,64(sp)
   22c5c:	d8c00f17 	ldw	r3,60(sp)
   22c60:	8825883a 	mov	r18,r17
   22c64:	003c8f06 	br	21ea4 <___vfprintf_internal_r+0x1288>
   22c68:	b80b883a 	mov	r5,r23
   22c6c:	a019883a 	mov	r12,r20
   22c70:	802f883a 	mov	r23,r16
   22c74:	b029883a 	mov	r20,r22
   22c78:	9821883a 	mov	r16,r19
   22c7c:	902d883a 	mov	r22,r18
   22c80:	2827883a 	mov	r19,r5
   22c84:	1825883a 	mov	r18,r3
   22c88:	d8c00817 	ldw	r3,32(sp)
   22c8c:	003c2706 	br	21d2c <___vfprintf_internal_r+0x1110>
   22c90:	403e3a1e 	bne	r8,zero,2257c <___vfprintf_internal_r+0x1960>
   22c94:	02000044 	movi	r8,1
   22c98:	003e3806 	br	2257c <___vfprintf_internal_r+0x1960>
   22c9c:	d9400417 	ldw	r5,16(sp)
   22ca0:	d9000517 	ldw	r4,20(sp)
   22ca4:	d9801d04 	addi	r6,sp,116
   22ca8:	db001015 	stw	r12,64(sp)
   22cac:	d8c00f15 	stw	r3,60(sp)
   22cb0:	00284100 	call	28410 <__sprint_r>
   22cb4:	1038e41e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   22cb8:	dd801f17 	ldw	r22,124(sp)
   22cbc:	db001017 	ldw	r12,64(sp)
   22cc0:	d8c00f17 	ldw	r3,60(sp)
   22cc4:	8825883a 	mov	r18,r17
   22cc8:	b83c640e 	bge	r23,zero,21e5c <___vfprintf_internal_r+0x1240>
   22ccc:	003d3306 	br	2219c <___vfprintf_internal_r+0x1580>
   22cd0:	02000184 	movi	r8,6
   22cd4:	003e2906 	br	2257c <___vfprintf_internal_r+0x1960>
   22cd8:	d9400417 	ldw	r5,16(sp)
   22cdc:	d9000517 	ldw	r4,20(sp)
   22ce0:	d9801d04 	addi	r6,sp,116
   22ce4:	db000f15 	stw	r12,60(sp)
   22ce8:	d8c00815 	stw	r3,32(sp)
   22cec:	00284100 	call	28410 <__sprint_r>
   22cf0:	1038d51e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   22cf4:	ddc01717 	ldw	r23,92(sp)
   22cf8:	d8800917 	ldw	r2,36(sp)
   22cfc:	d9001f17 	ldw	r4,124(sp)
   22d00:	db000f17 	ldw	r12,60(sp)
   22d04:	d8c00817 	ldw	r3,32(sp)
   22d08:	8825883a 	mov	r18,r17
   22d0c:	15efc83a 	sub	r23,r2,r23
   22d10:	003c7706 	br	21ef0 <___vfprintf_internal_r+0x12d4>
   22d14:	41c0060e 	bge	r8,r7,22d30 <___vfprintf_internal_r+0x2114>
   22d18:	e73fff84 	addi	fp,fp,-2
   22d1c:	3dffffc4 	addi	r23,r7,-1
   22d20:	e005883a 	mov	r2,fp
   22d24:	b80b883a 	mov	r5,r23
   22d28:	01000ac4 	movi	r4,43
   22d2c:	003f4c06 	br	22a60 <___vfprintf_internal_r+0x1e44>
   22d30:	d9000917 	ldw	r4,36(sp)
   22d34:	39000916 	blt	r7,r4,22d5c <___vfprintf_internal_r+0x2140>
   22d38:	6b40004c 	andi	r13,r13,1
   22d3c:	68000f26 	beq	r13,zero,22d7c <___vfprintf_internal_r+0x2160>
   22d40:	d8800817 	ldw	r2,32(sp)
   22d44:	d9000c17 	ldw	r4,48(sp)
   22d48:	110f883a 	add	r7,r2,r4
   22d4c:	3819883a 	mov	r12,r7
   22d50:	38000c16 	blt	r7,zero,22d84 <___vfprintf_internal_r+0x2168>
   22d54:	070019c4 	movi	fp,103
   22d58:	003e5006 	br	2269c <___vfprintf_internal_r+0x1a80>
   22d5c:	d8800917 	ldw	r2,36(sp)
   22d60:	d9000c17 	ldw	r4,48(sp)
   22d64:	110f883a 	add	r7,r2,r4
   22d68:	d8800817 	ldw	r2,32(sp)
   22d6c:	00800316 	blt	zero,r2,22d7c <___vfprintf_internal_r+0x2160>
   22d70:	d8800817 	ldw	r2,32(sp)
   22d74:	388fc83a 	sub	r7,r7,r2
   22d78:	39c00044 	addi	r7,r7,1
   22d7c:	3819883a 	mov	r12,r7
   22d80:	383ff40e 	bge	r7,zero,22d54 <___vfprintf_internal_r+0x2138>
   22d84:	0019883a 	mov	r12,zero
   22d88:	003ff206 	br	22d54 <___vfprintf_internal_r+0x2138>
   22d8c:	4019883a 	mov	r12,r8
   22d90:	dd800715 	stw	r22,28(sp)
   22d94:	400f883a 	mov	r7,r8
   22d98:	00386506 	br	20f30 <___vfprintf_internal_r+0x314>
   22d9c:	b8800c04 	addi	r2,r23,48
   22da0:	01000c04 	movi	r4,48
   22da4:	d88019c5 	stb	r2,103(sp)
   22da8:	00800104 	movi	r2,4
   22dac:	d9001985 	stb	r4,102(sp)
   22db0:	d8801115 	stw	r2,68(sp)
   22db4:	003f6406 	br	22b48 <___vfprintf_internal_r+0x1f2c>
   22db8:	6880004c 	andi	r2,r13,1
   22dbc:	d8800815 	stw	r2,32(sp)
   22dc0:	103f661e 	bne	r2,zero,22b5c <___vfprintf_internal_r+0x1f40>
   22dc4:	3819883a 	mov	r12,r7
   22dc8:	383e340e 	bge	r7,zero,2269c <___vfprintf_internal_r+0x1a80>
   22dcc:	0019883a 	mov	r12,zero
   22dd0:	003e3206 	br	2269c <___vfprintf_internal_r+0x1a80>
   22dd4:	00bfffc4 	movi	r2,-1
   22dd8:	d8800615 	stw	r2,24(sp)
   22ddc:	00389e06 	br	21058 <___vfprintf_internal_r+0x43c>
   22de0:	9819883a 	mov	r12,r19
   22de4:	b027883a 	mov	r19,r22
   22de8:	802d883a 	mov	r22,r16
   22dec:	9021883a 	mov	r16,r18
   22df0:	1825883a 	mov	r18,r3
   22df4:	d8c00817 	ldw	r3,32(sp)
   22df8:	10800044 	addi	r2,r2,1
   22dfc:	25c9883a 	add	r4,r4,r23
   22e00:	95800015 	stw	r22,0(r18)
   22e04:	95c00115 	stw	r23,4(r18)
   22e08:	d9001f15 	stw	r4,124(sp)
   22e0c:	d8801e15 	stw	r2,120(sp)
   22e10:	11400208 	cmpgei	r5,r2,8
   22e14:	283dbe26 	beq	r5,zero,22510 <___vfprintf_internal_r+0x18f4>
   22e18:	d9400417 	ldw	r5,16(sp)
   22e1c:	d9000517 	ldw	r4,20(sp)
   22e20:	d9801d04 	addi	r6,sp,116
   22e24:	db000f15 	stw	r12,60(sp)
   22e28:	d8c00815 	stw	r3,32(sp)
   22e2c:	00284100 	call	28410 <__sprint_r>
   22e30:	1038851e 	bne	r2,zero,21048 <___vfprintf_internal_r+0x42c>
   22e34:	d9001f17 	ldw	r4,124(sp)
   22e38:	d8801e17 	ldw	r2,120(sp)
   22e3c:	db000f17 	ldw	r12,60(sp)
   22e40:	d8c00817 	ldw	r3,32(sp)
   22e44:	8825883a 	mov	r18,r17
   22e48:	003db206 	br	22514 <___vfprintf_internal_r+0x18f8>
   22e4c:	ab19883a 	add	r12,r21,r12
   22e50:	003dfa06 	br	2263c <___vfprintf_internal_r+0x1a20>
   22e54:	d9000a17 	ldw	r4,40(sp)
   22e58:	000d883a 	mov	r6,zero
   22e5c:	000f883a 	mov	r7,zero
   22e60:	b80b883a 	mov	r5,r23
   22e64:	da001215 	stw	r8,72(sp)
   22e68:	d8c00915 	stw	r3,36(sp)
   22e6c:	db400815 	stw	r13,32(sp)
   22e70:	002c4540 	call	2c454 <__eqdf2>
   22e74:	db400817 	ldw	r13,32(sp)
   22e78:	d8c00917 	ldw	r3,36(sp)
   22e7c:	da001217 	ldw	r8,72(sp)
   22e80:	103f5826 	beq	r2,zero,22be4 <___vfprintf_internal_r+0x1fc8>
   22e84:	00800044 	movi	r2,1
   22e88:	1205c83a 	sub	r2,r2,r8
   22e8c:	d8801715 	stw	r2,92(sp)
   22e90:	003f5506 	br	22be8 <___vfprintf_internal_r+0x1fcc>
   22e94:	d8800b17 	ldw	r2,44(sp)
   22e98:	10002916 	blt	r2,zero,22f40 <___vfprintf_internal_r+0x2324>
   22e9c:	d9001643 	ldbu	r4,89(sp)
   22ea0:	e0801210 	cmplti	r2,fp,72
   22ea4:	1000231e 	bne	r2,zero,22f34 <___vfprintf_internal_r+0x2318>
   22ea8:	054000f4 	movhi	r21,3
   22eac:	ad41a204 	addi	r21,r21,1672
   22eb0:	00396806 	br	21454 <___vfprintf_internal_r+0x838>
   22eb4:	d9000a17 	ldw	r4,40(sp)
   22eb8:	000d883a 	mov	r6,zero
   22ebc:	000f883a 	mov	r7,zero
   22ec0:	b80b883a 	mov	r5,r23
   22ec4:	da001315 	stw	r8,76(sp)
   22ec8:	d8c01215 	stw	r3,72(sp)
   22ecc:	db400815 	stw	r13,32(sp)
   22ed0:	002c4540 	call	2c454 <__eqdf2>
   22ed4:	db400817 	ldw	r13,32(sp)
   22ed8:	d8c01217 	ldw	r3,72(sp)
   22edc:	da001317 	ldw	r8,76(sp)
   22ee0:	10002a1e 	bne	r2,zero,22f8c <___vfprintf_internal_r+0x2370>
   22ee4:	b08011e0 	cmpeqi	r2,r22,71
   22ee8:	d9c01717 	ldw	r7,92(sp)
   22eec:	103ed31e 	bne	r2,zero,22a3c <___vfprintf_internal_r+0x1e20>
   22ef0:	397fffc4 	addi	r5,r7,-1
   22ef4:	e005883a 	mov	r2,fp
   22ef8:	283ed616 	blt	r5,zero,22a54 <___vfprintf_internal_r+0x1e38>
   22efc:	282f883a 	mov	r23,r5
   22f00:	01000ac4 	movi	r4,43
   22f04:	003ed606 	br	22a60 <___vfprintf_internal_r+0x1e44>
   22f08:	6545c83a 	sub	r2,r12,r21
   22f0c:	d9c01717 	ldw	r7,92(sp)
   22f10:	d8800915 	stw	r2,36(sp)
   22f14:	003ec906 	br	22a3c <___vfprintf_internal_r+0x1e20>
   22f18:	d8800c17 	ldw	r2,48(sp)
   22f1c:	208f883a 	add	r7,r4,r2
   22f20:	3a0f883a 	add	r7,r7,r8
   22f24:	3819883a 	mov	r12,r7
   22f28:	383ddb0e 	bge	r7,zero,22698 <___vfprintf_internal_r+0x1a7c>
   22f2c:	0019883a 	mov	r12,zero
   22f30:	003dd906 	br	22698 <___vfprintf_internal_r+0x1a7c>
   22f34:	054000f4 	movhi	r21,3
   22f38:	ad41a104 	addi	r21,r21,1668
   22f3c:	00394506 	br	21454 <___vfprintf_internal_r+0x838>
   22f40:	00800b44 	movi	r2,45
   22f44:	d8801645 	stb	r2,89(sp)
   22f48:	01000b44 	movi	r4,45
   22f4c:	003fd406 	br	22ea0 <___vfprintf_internal_r+0x2284>
   22f50:	00800084 	movi	r2,2
   22f54:	d8801115 	stw	r2,68(sp)
   22f58:	003efb06 	br	22b48 <___vfprintf_internal_r+0x1f2c>
   22f5c:	d8800717 	ldw	r2,28(sp)
   22f60:	12000017 	ldw	r8,0(r2)
   22f64:	10800104 	addi	r2,r2,4
   22f68:	4000010e 	bge	r8,zero,22f70 <___vfprintf_internal_r+0x2354>
   22f6c:	023fffc4 	movi	r8,-1
   22f70:	a7000043 	ldbu	fp,1(r20)
   22f74:	d8800715 	stw	r2,28(sp)
   22f78:	1829883a 	mov	r20,r3
   22f7c:	e2c03fcc 	andi	r11,fp,255
   22f80:	5ac0201c 	xori	r11,r11,128
   22f84:	5affe004 	addi	r11,r11,-128
   22f88:	00377406 	br	20d5c <___vfprintf_internal_r+0x140>
   22f8c:	d8800917 	ldw	r2,36(sp)
   22f90:	a899883a 	add	r12,r21,r2
   22f94:	003da906 	br	2263c <___vfprintf_internal_r+0x1a20>
   22f98:	1000041e 	bne	r2,zero,22fac <___vfprintf_internal_r+0x2390>
   22f9c:	03000044 	movi	r12,1
   22fa0:	07001984 	movi	fp,102
   22fa4:	01c00044 	movi	r7,1
   22fa8:	003dbc06 	br	2269c <___vfprintf_internal_r+0x1a80>
   22fac:	d8800c17 	ldw	r2,48(sp)
   22fb0:	11c00044 	addi	r7,r2,1
   22fb4:	3a0f883a 	add	r7,r7,r8
   22fb8:	3819883a 	mov	r12,r7
   22fbc:	383db60e 	bge	r7,zero,22698 <___vfprintf_internal_r+0x1a7c>
   22fc0:	003fda06 	br	22f2c <___vfprintf_internal_r+0x2310>

00022fc4 <__vfprintf_internal>:
   22fc4:	00c000f4 	movhi	r3,3
   22fc8:	2005883a 	mov	r2,r4
   22fcc:	190a3b17 	ldw	r4,10476(r3)
   22fd0:	300f883a 	mov	r7,r6
   22fd4:	280d883a 	mov	r6,r5
   22fd8:	100b883a 	mov	r5,r2
   22fdc:	0020c1c1 	jmpi	20c1c <___vfprintf_internal_r>

00022fe0 <__sbprintf>:
   22fe0:	28c0038b 	ldhu	r3,14(r5)
   22fe4:	2880030b 	ldhu	r2,12(r5)
   22fe8:	2ac01917 	ldw	r11,100(r5)
   22fec:	1806943a 	slli	r3,r3,16
   22ff0:	2a800717 	ldw	r10,28(r5)
   22ff4:	2a400917 	ldw	r9,36(r5)
   22ff8:	defee204 	addi	sp,sp,-1144
   22ffc:	10bfff4c 	andi	r2,r2,65533
   23000:	10c4b03a 	or	r2,r2,r3
   23004:	da001a04 	addi	r8,sp,104
   23008:	00c10004 	movi	r3,1024
   2300c:	dc011a15 	stw	r16,1128(sp)
   23010:	2821883a 	mov	r16,r5
   23014:	d80b883a 	mov	r5,sp
   23018:	dc811c15 	stw	r18,1136(sp)
   2301c:	dc411b15 	stw	r17,1132(sp)
   23020:	dfc11d15 	stw	ra,1140(sp)
   23024:	2025883a 	mov	r18,r4
   23028:	dac01915 	stw	r11,100(sp)
   2302c:	d8800315 	stw	r2,12(sp)
   23030:	da800715 	stw	r10,28(sp)
   23034:	da400915 	stw	r9,36(sp)
   23038:	da000015 	stw	r8,0(sp)
   2303c:	da000415 	stw	r8,16(sp)
   23040:	d8c00215 	stw	r3,8(sp)
   23044:	d8c00515 	stw	r3,20(sp)
   23048:	d8000615 	stw	zero,24(sp)
   2304c:	0020c1c0 	call	20c1c <___vfprintf_internal_r>
   23050:	1023883a 	mov	r17,r2
   23054:	10000d0e 	bge	r2,zero,2308c <__sbprintf+0xac>
   23058:	d880030b 	ldhu	r2,12(sp)
   2305c:	1080100c 	andi	r2,r2,64
   23060:	10000326 	beq	r2,zero,23070 <__sbprintf+0x90>
   23064:	8080030b 	ldhu	r2,12(r16)
   23068:	10801014 	ori	r2,r2,64
   2306c:	8080030d 	sth	r2,12(r16)
   23070:	8805883a 	mov	r2,r17
   23074:	dfc11d17 	ldw	ra,1140(sp)
   23078:	dc811c17 	ldw	r18,1136(sp)
   2307c:	dc411b17 	ldw	r17,1132(sp)
   23080:	dc011a17 	ldw	r16,1128(sp)
   23084:	dec11e04 	addi	sp,sp,1144
   23088:	f800283a 	ret
   2308c:	d80b883a 	mov	r5,sp
   23090:	9009883a 	mov	r4,r18
   23094:	0024ddc0 	call	24ddc <_fflush_r>
   23098:	103fef26 	beq	r2,zero,23058 <__sbprintf+0x78>
   2309c:	047fffc4 	movi	r17,-1
   230a0:	003fed06 	br	23058 <__sbprintf+0x78>

000230a4 <__swsetup_r>:
   230a4:	008000f4 	movhi	r2,3
   230a8:	108a3b17 	ldw	r2,10476(r2)
   230ac:	defffd04 	addi	sp,sp,-12
   230b0:	dc400115 	stw	r17,4(sp)
   230b4:	dc000015 	stw	r16,0(sp)
   230b8:	dfc00215 	stw	ra,8(sp)
   230bc:	2023883a 	mov	r17,r4
   230c0:	2821883a 	mov	r16,r5
   230c4:	10000226 	beq	r2,zero,230d0 <__swsetup_r+0x2c>
   230c8:	10c00e17 	ldw	r3,56(r2)
   230cc:	18001d26 	beq	r3,zero,23144 <__swsetup_r+0xa0>
   230d0:	80c0030b 	ldhu	r3,12(r16)
   230d4:	1880020c 	andi	r2,r3,8
   230d8:	10001f26 	beq	r2,zero,23158 <__swsetup_r+0xb4>
   230dc:	80800417 	ldw	r2,16(r16)
   230e0:	10002626 	beq	r2,zero,2317c <__swsetup_r+0xd8>
   230e4:	1900004c 	andi	r4,r3,1
   230e8:	20000b1e 	bne	r4,zero,23118 <__swsetup_r+0x74>
   230ec:	1900008c 	andi	r4,r3,2
   230f0:	20002b1e 	bne	r4,zero,231a0 <__swsetup_r+0xfc>
   230f4:	81000517 	ldw	r4,20(r16)
   230f8:	81000215 	stw	r4,8(r16)
   230fc:	10000b26 	beq	r2,zero,2312c <__swsetup_r+0x88>
   23100:	0005883a 	mov	r2,zero
   23104:	dfc00217 	ldw	ra,8(sp)
   23108:	dc400117 	ldw	r17,4(sp)
   2310c:	dc000017 	ldw	r16,0(sp)
   23110:	dec00304 	addi	sp,sp,12
   23114:	f800283a 	ret
   23118:	81000517 	ldw	r4,20(r16)
   2311c:	80000215 	stw	zero,8(r16)
   23120:	0109c83a 	sub	r4,zero,r4
   23124:	81000615 	stw	r4,24(r16)
   23128:	103ff51e 	bne	r2,zero,23100 <__swsetup_r+0x5c>
   2312c:	1900200c 	andi	r4,r3,128
   23130:	203ff426 	beq	r4,zero,23104 <__swsetup_r+0x60>
   23134:	18c01014 	ori	r3,r3,64
   23138:	80c0030d 	sth	r3,12(r16)
   2313c:	00bfffc4 	movi	r2,-1
   23140:	003ff006 	br	23104 <__swsetup_r+0x60>
   23144:	1009883a 	mov	r4,r2
   23148:	00251f40 	call	251f4 <__sinit>
   2314c:	80c0030b 	ldhu	r3,12(r16)
   23150:	1880020c 	andi	r2,r3,8
   23154:	103fe11e 	bne	r2,zero,230dc <__swsetup_r+0x38>
   23158:	1880040c 	andi	r2,r3,16
   2315c:	10002026 	beq	r2,zero,231e0 <__swsetup_r+0x13c>
   23160:	1880010c 	andi	r2,r3,4
   23164:	1000101e 	bne	r2,zero,231a8 <__swsetup_r+0x104>
   23168:	80800417 	ldw	r2,16(r16)
   2316c:	19000214 	ori	r4,r3,8
   23170:	8100030d 	sth	r4,12(r16)
   23174:	2007883a 	mov	r3,r4
   23178:	103fda1e 	bne	r2,zero,230e4 <__swsetup_r+0x40>
   2317c:	1900a00c 	andi	r4,r3,640
   23180:	21008020 	cmpeqi	r4,r4,512
   23184:	203fd71e 	bne	r4,zero,230e4 <__swsetup_r+0x40>
   23188:	800b883a 	mov	r5,r16
   2318c:	8809883a 	mov	r4,r17
   23190:	0025c6c0 	call	25c6c <__smakebuf_r>
   23194:	80c0030b 	ldhu	r3,12(r16)
   23198:	80800417 	ldw	r2,16(r16)
   2319c:	003fd106 	br	230e4 <__swsetup_r+0x40>
   231a0:	0009883a 	mov	r4,zero
   231a4:	003fd406 	br	230f8 <__swsetup_r+0x54>
   231a8:	81400c17 	ldw	r5,48(r16)
   231ac:	28000626 	beq	r5,zero,231c8 <__swsetup_r+0x124>
   231b0:	80801004 	addi	r2,r16,64
   231b4:	28800326 	beq	r5,r2,231c4 <__swsetup_r+0x120>
   231b8:	8809883a 	mov	r4,r17
   231bc:	00253600 	call	25360 <_free_r>
   231c0:	80c0030b 	ldhu	r3,12(r16)
   231c4:	80000c15 	stw	zero,48(r16)
   231c8:	80800417 	ldw	r2,16(r16)
   231cc:	013ff6c4 	movi	r4,-37
   231d0:	20c6703a 	and	r3,r4,r3
   231d4:	80000115 	stw	zero,4(r16)
   231d8:	80800015 	stw	r2,0(r16)
   231dc:	003fe306 	br	2316c <__swsetup_r+0xc8>
   231e0:	00800244 	movi	r2,9
   231e4:	88800015 	stw	r2,0(r17)
   231e8:	18c01014 	ori	r3,r3,64
   231ec:	003fd206 	br	23138 <__swsetup_r+0x94>

000231f0 <quorem>:
   231f0:	defff504 	addi	sp,sp,-44
   231f4:	dc800315 	stw	r18,12(sp)
   231f8:	20800417 	ldw	r2,16(r4)
   231fc:	2c800417 	ldw	r18,16(r5)
   23200:	dfc00a15 	stw	ra,40(sp)
   23204:	df000915 	stw	fp,36(sp)
   23208:	ddc00815 	stw	r23,32(sp)
   2320c:	dd800715 	stw	r22,28(sp)
   23210:	dd400615 	stw	r21,24(sp)
   23214:	dd000515 	stw	r20,20(sp)
   23218:	dcc00415 	stw	r19,16(sp)
   2321c:	dc400215 	stw	r17,8(sp)
   23220:	dc000115 	stw	r16,4(sp)
   23224:	14806f16 	blt	r2,r18,233e4 <quorem+0x1f4>
   23228:	94bfffc4 	addi	r18,r18,-1
   2322c:	902c90ba 	slli	r22,r18,2
   23230:	2c000504 	addi	r16,r5,20
   23234:	25000504 	addi	r20,r4,20
   23238:	85a7883a 	add	r19,r16,r22
   2323c:	9f000017 	ldw	fp,0(r19)
   23240:	a5ad883a 	add	r22,r20,r22
   23244:	202b883a 	mov	r21,r4
   23248:	b1000017 	ldw	r4,0(r22)
   2324c:	e7000044 	addi	fp,fp,1
   23250:	282f883a 	mov	r23,r5
   23254:	e00b883a 	mov	r5,fp
   23258:	d9000015 	stw	r4,0(sp)
   2325c:	002097c0 	call	2097c <__udivsi3>
   23260:	d9000017 	ldw	r4,0(sp)
   23264:	1023883a 	mov	r17,r2
   23268:	27002a36 	bltu	r4,fp,23314 <quorem+0x124>
   2326c:	800f883a 	mov	r7,r16
   23270:	a00d883a 	mov	r6,r20
   23274:	0013883a 	mov	r9,zero
   23278:	0009883a 	mov	r4,zero
   2327c:	38800017 	ldw	r2,0(r7)
   23280:	32000017 	ldw	r8,0(r6)
   23284:	31800104 	addi	r6,r6,4
   23288:	117fffcc 	andi	r5,r2,65535
   2328c:	2c4b383a 	mul	r5,r5,r17
   23290:	1004d43a 	srli	r2,r2,16
   23294:	40ffffcc 	andi	r3,r8,65535
   23298:	2a4b883a 	add	r5,r5,r9
   2329c:	2a7fffcc 	andi	r9,r5,65535
   232a0:	1a47c83a 	sub	r3,r3,r9
   232a4:	280ad43a 	srli	r5,r5,16
   232a8:	1445383a 	mul	r2,r2,r17
   232ac:	1907883a 	add	r3,r3,r4
   232b0:	1809d43a 	srai	r4,r3,16
   232b4:	1145883a 	add	r2,r2,r5
   232b8:	4010d43a 	srli	r8,r8,16
   232bc:	117fffcc 	andi	r5,r2,65535
   232c0:	2149c83a 	sub	r4,r4,r5
   232c4:	2209883a 	add	r4,r4,r8
   232c8:	200a943a 	slli	r5,r4,16
   232cc:	18ffffcc 	andi	r3,r3,65535
   232d0:	39c00104 	addi	r7,r7,4
   232d4:	1946b03a 	or	r3,r3,r5
   232d8:	30ffff15 	stw	r3,-4(r6)
   232dc:	1012d43a 	srli	r9,r2,16
   232e0:	2009d43a 	srai	r4,r4,16
   232e4:	99ffe52e 	bgeu	r19,r7,2327c <quorem+0x8c>
   232e8:	b0800017 	ldw	r2,0(r22)
   232ec:	1000091e 	bne	r2,zero,23314 <quorem+0x124>
   232f0:	b5bfff04 	addi	r22,r22,-4
   232f4:	a5800336 	bltu	r20,r22,23304 <quorem+0x114>
   232f8:	00000506 	br	23310 <quorem+0x120>
   232fc:	94bfffc4 	addi	r18,r18,-1
   23300:	a580032e 	bgeu	r20,r22,23310 <quorem+0x120>
   23304:	b0800017 	ldw	r2,0(r22)
   23308:	b5bfff04 	addi	r22,r22,-4
   2330c:	103ffb26 	beq	r2,zero,232fc <quorem+0x10c>
   23310:	ac800415 	stw	r18,16(r21)
   23314:	b80b883a 	mov	r5,r23
   23318:	a809883a 	mov	r4,r21
   2331c:	002745c0 	call	2745c <__mcmp>
   23320:	10002316 	blt	r2,zero,233b0 <quorem+0x1c0>
   23324:	a00d883a 	mov	r6,r20
   23328:	000b883a 	mov	r5,zero
   2332c:	30800017 	ldw	r2,0(r6)
   23330:	81000017 	ldw	r4,0(r16)
   23334:	31800104 	addi	r6,r6,4
   23338:	10ffffcc 	andi	r3,r2,65535
   2333c:	21ffffcc 	andi	r7,r4,65535
   23340:	19c7c83a 	sub	r3,r3,r7
   23344:	1947883a 	add	r3,r3,r5
   23348:	180bd43a 	srai	r5,r3,16
   2334c:	2008d43a 	srli	r4,r4,16
   23350:	1004d43a 	srli	r2,r2,16
   23354:	18ffffcc 	andi	r3,r3,65535
   23358:	290bc83a 	sub	r5,r5,r4
   2335c:	288b883a 	add	r5,r5,r2
   23360:	2804943a 	slli	r2,r5,16
   23364:	84000104 	addi	r16,r16,4
   23368:	280bd43a 	srai	r5,r5,16
   2336c:	1886b03a 	or	r3,r3,r2
   23370:	30ffff15 	stw	r3,-4(r6)
   23374:	9c3fed2e 	bgeu	r19,r16,2332c <quorem+0x13c>
   23378:	900490ba 	slli	r2,r18,2
   2337c:	a085883a 	add	r2,r20,r2
   23380:	10c00017 	ldw	r3,0(r2)
   23384:	1800091e 	bne	r3,zero,233ac <quorem+0x1bc>
   23388:	10bfff04 	addi	r2,r2,-4
   2338c:	a0800336 	bltu	r20,r2,2339c <quorem+0x1ac>
   23390:	00000506 	br	233a8 <quorem+0x1b8>
   23394:	94bfffc4 	addi	r18,r18,-1
   23398:	a080032e 	bgeu	r20,r2,233a8 <quorem+0x1b8>
   2339c:	10c00017 	ldw	r3,0(r2)
   233a0:	10bfff04 	addi	r2,r2,-4
   233a4:	183ffb26 	beq	r3,zero,23394 <quorem+0x1a4>
   233a8:	ac800415 	stw	r18,16(r21)
   233ac:	8c400044 	addi	r17,r17,1
   233b0:	8805883a 	mov	r2,r17
   233b4:	dfc00a17 	ldw	ra,40(sp)
   233b8:	df000917 	ldw	fp,36(sp)
   233bc:	ddc00817 	ldw	r23,32(sp)
   233c0:	dd800717 	ldw	r22,28(sp)
   233c4:	dd400617 	ldw	r21,24(sp)
   233c8:	dd000517 	ldw	r20,20(sp)
   233cc:	dcc00417 	ldw	r19,16(sp)
   233d0:	dc800317 	ldw	r18,12(sp)
   233d4:	dc400217 	ldw	r17,8(sp)
   233d8:	dc000117 	ldw	r16,4(sp)
   233dc:	dec00b04 	addi	sp,sp,44
   233e0:	f800283a 	ret
   233e4:	0005883a 	mov	r2,zero
   233e8:	003ff206 	br	233b4 <quorem+0x1c4>

000233ec <_dtoa_r>:
   233ec:	20801017 	ldw	r2,64(r4)
   233f0:	deffe104 	addi	sp,sp,-124
   233f4:	dd401a15 	stw	r21,104(sp)
   233f8:	dc801715 	stw	r18,92(sp)
   233fc:	dc401615 	stw	r17,88(sp)
   23400:	dc001515 	stw	r16,84(sp)
   23404:	dfc01e15 	stw	ra,120(sp)
   23408:	df001d15 	stw	fp,116(sp)
   2340c:	ddc01c15 	stw	r23,112(sp)
   23410:	dd801b15 	stw	r22,108(sp)
   23414:	dd001915 	stw	r20,100(sp)
   23418:	dcc01815 	stw	r19,96(sp)
   2341c:	d9400215 	stw	r5,8(sp)
   23420:	d9c00115 	stw	r7,4(sp)
   23424:	dc402117 	ldw	r17,132(sp)
   23428:	2021883a 	mov	r16,r4
   2342c:	3025883a 	mov	r18,r6
   23430:	302b883a 	mov	r21,r6
   23434:	10000826 	beq	r2,zero,23458 <_dtoa_r+0x6c>
   23438:	21801117 	ldw	r6,68(r4)
   2343c:	00c00044 	movi	r3,1
   23440:	100b883a 	mov	r5,r2
   23444:	1986983a 	sll	r3,r3,r6
   23448:	11800115 	stw	r6,4(r2)
   2344c:	10c00215 	stw	r3,8(r2)
   23450:	0026ae00 	call	26ae0 <_Bfree>
   23454:	80001015 	stw	zero,64(r16)
   23458:	90019316 	blt	r18,zero,23aa8 <_dtoa_r+0x6bc>
   2345c:	88000015 	stw	zero,0(r17)
   23460:	909ffc2c 	andhi	r2,r18,32752
   23464:	00dffc34 	movhi	r3,32752
   23468:	10c19826 	beq	r2,r3,23acc <_dtoa_r+0x6e0>
   2346c:	d9000217 	ldw	r4,8(sp)
   23470:	000d883a 	mov	r6,zero
   23474:	000f883a 	mov	r7,zero
   23478:	a80b883a 	mov	r5,r21
   2347c:	002c4540 	call	2c454 <__eqdf2>
   23480:	1000181e 	bne	r2,zero,234e4 <_dtoa_r+0xf8>
   23484:	d8c02017 	ldw	r3,128(sp)
   23488:	00800044 	movi	r2,1
   2348c:	18800015 	stw	r2,0(r3)
   23490:	d8802217 	ldw	r2,136(sp)
   23494:	10000426 	beq	r2,zero,234a8 <_dtoa_r+0xbc>
   23498:	d8c02217 	ldw	r3,136(sp)
   2349c:	008000f4 	movhi	r2,3
   234a0:	1081af44 	addi	r2,r2,1725
   234a4:	18800015 	stw	r2,0(r3)
   234a8:	070000f4 	movhi	fp,3
   234ac:	e701af04 	addi	fp,fp,1724
   234b0:	e005883a 	mov	r2,fp
   234b4:	dfc01e17 	ldw	ra,120(sp)
   234b8:	df001d17 	ldw	fp,116(sp)
   234bc:	ddc01c17 	ldw	r23,112(sp)
   234c0:	dd801b17 	ldw	r22,108(sp)
   234c4:	dd401a17 	ldw	r21,104(sp)
   234c8:	dd001917 	ldw	r20,100(sp)
   234cc:	dcc01817 	ldw	r19,96(sp)
   234d0:	dc801717 	ldw	r18,92(sp)
   234d4:	dc401617 	ldw	r17,88(sp)
   234d8:	dc001517 	ldw	r16,84(sp)
   234dc:	dec01f04 	addi	sp,sp,124
   234e0:	f800283a 	ret
   234e4:	dcc00217 	ldw	r19,8(sp)
   234e8:	d8801304 	addi	r2,sp,76
   234ec:	9022d53a 	srli	r17,r18,20
   234f0:	d8800015 	stw	r2,0(sp)
   234f4:	d9c01404 	addi	r7,sp,80
   234f8:	980b883a 	mov	r5,r19
   234fc:	a80d883a 	mov	r6,r21
   23500:	8009883a 	mov	r4,r16
   23504:	00278440 	call	27844 <__d2b>
   23508:	102f883a 	mov	r23,r2
   2350c:	8801811e 	bne	r17,zero,23b14 <_dtoa_r+0x728>
   23510:	dd001317 	ldw	r20,76(sp)
   23514:	dc401417 	ldw	r17,80(sp)
   23518:	a463883a 	add	r17,r20,r17
   2351c:	88810c84 	addi	r2,r17,1074
   23520:	10c00850 	cmplti	r3,r2,33
   23524:	1803101e 	bne	r3,zero,24168 <_dtoa_r+0xd7c>
   23528:	00c01004 	movi	r3,64
   2352c:	1887c83a 	sub	r3,r3,r2
   23530:	90c8983a 	sll	r4,r18,r3
   23534:	d8c00217 	ldw	r3,8(sp)
   23538:	88810484 	addi	r2,r17,1042
   2353c:	1884d83a 	srl	r2,r3,r2
   23540:	2088b03a 	or	r4,r4,r2
   23544:	002d8dc0 	call	2d8dc <__floatunsidf>
   23548:	1009883a 	mov	r4,r2
   2354c:	00bf8434 	movhi	r2,65040
   23550:	188b883a 	add	r5,r3,r2
   23554:	00800044 	movi	r2,1
   23558:	8c7fffc4 	addi	r17,r17,-1
   2355c:	d8800915 	stw	r2,36(sp)
   23560:	000d883a 	mov	r6,zero
   23564:	01cffe34 	movhi	r7,16376
   23568:	002cdb40 	call	2cdb4 <__subdf3>
   2356c:	0198dbf4 	movhi	r6,25455
   23570:	01cff4f4 	movhi	r7,16339
   23574:	3190d844 	addi	r6,r6,17249
   23578:	39e1e9c4 	addi	r7,r7,-30809
   2357c:	1009883a 	mov	r4,r2
   23580:	180b883a 	mov	r5,r3
   23584:	002c6dc0 	call	2c6dc <__muldf3>
   23588:	01a2d874 	movhi	r6,35681
   2358c:	01cff1f4 	movhi	r7,16327
   23590:	31b22cc4 	addi	r6,r6,-14157
   23594:	39e28a04 	addi	r7,r7,-30168
   23598:	180b883a 	mov	r5,r3
   2359c:	1009883a 	mov	r4,r2
   235a0:	002b3080 	call	2b308 <__adddf3>
   235a4:	8809883a 	mov	r4,r17
   235a8:	1027883a 	mov	r19,r2
   235ac:	1825883a 	mov	r18,r3
   235b0:	002d8240 	call	2d824 <__floatsidf>
   235b4:	019427f4 	movhi	r6,20639
   235b8:	01cff4f4 	movhi	r7,16339
   235bc:	319e7ec4 	addi	r6,r6,31227
   235c0:	39d104c4 	addi	r7,r7,17427
   235c4:	1009883a 	mov	r4,r2
   235c8:	180b883a 	mov	r5,r3
   235cc:	002c6dc0 	call	2c6dc <__muldf3>
   235d0:	100d883a 	mov	r6,r2
   235d4:	180f883a 	mov	r7,r3
   235d8:	9809883a 	mov	r4,r19
   235dc:	900b883a 	mov	r5,r18
   235e0:	002b3080 	call	2b308 <__adddf3>
   235e4:	1009883a 	mov	r4,r2
   235e8:	180b883a 	mov	r5,r3
   235ec:	1027883a 	mov	r19,r2
   235f0:	1825883a 	mov	r18,r3
   235f4:	002d7a40 	call	2d7a4 <__fixdfsi>
   235f8:	000d883a 	mov	r6,zero
   235fc:	000f883a 	mov	r7,zero
   23600:	9809883a 	mov	r4,r19
   23604:	900b883a 	mov	r5,r18
   23608:	102d883a 	mov	r22,r2
   2360c:	002c5e40 	call	2c5e4 <__ledf2>
   23610:	1002a616 	blt	r2,zero,240ac <_dtoa_r+0xcc0>
   23614:	a469c83a 	sub	r20,r20,r17
   23618:	a0ffffc4 	addi	r3,r20,-1
   2361c:	b08005e8 	cmpgeui	r2,r22,23
   23620:	d8c00415 	stw	r3,16(sp)
   23624:	1002981e 	bne	r2,zero,24088 <_dtoa_r+0xc9c>
   23628:	b00490fa 	slli	r2,r22,3
   2362c:	02c000f4 	movhi	r11,3
   23630:	5ac1f604 	addi	r11,r11,2008
   23634:	5885883a 	add	r2,r11,r2
   23638:	11800017 	ldw	r6,0(r2)
   2363c:	11c00117 	ldw	r7,4(r2)
   23640:	d9000217 	ldw	r4,8(sp)
   23644:	a80b883a 	mov	r5,r21
   23648:	002c5e40 	call	2c5e4 <__ledf2>
   2364c:	1001d60e 	bge	r2,zero,23da8 <_dtoa_r+0x9bc>
   23650:	d8000815 	stw	zero,32(sp)
   23654:	a0bfffc4 	addi	r2,r20,-1
   23658:	b5bfffc4 	addi	r22,r22,-1
   2365c:	10028e16 	blt	r2,zero,24098 <_dtoa_r+0xcac>
   23660:	d8000515 	stw	zero,20(sp)
   23664:	b001d30e 	bge	r22,zero,23db4 <_dtoa_r+0x9c8>
   23668:	d8800517 	ldw	r2,20(sp)
   2366c:	d8c00117 	ldw	r3,4(sp)
   23670:	dd800615 	stw	r22,24(sp)
   23674:	1585c83a 	sub	r2,r2,r22
   23678:	d8800515 	stw	r2,20(sp)
   2367c:	0585c83a 	sub	r2,zero,r22
   23680:	d8800315 	stw	r2,12(sp)
   23684:	188002a8 	cmpgeui	r2,r3,10
   23688:	002d883a 	mov	r22,zero
   2368c:	1001d11e 	bne	r2,zero,23dd4 <_dtoa_r+0x9e8>
   23690:	18800190 	cmplti	r2,r3,6
   23694:	1002a31e 	bne	r2,zero,24124 <_dtoa_r+0xd38>
   23698:	18ffff04 	addi	r3,r3,-4
   2369c:	d8c00115 	stw	r3,4(sp)
   236a0:	188000e0 	cmpeqi	r2,r3,3
   236a4:	0023883a 	mov	r17,zero
   236a8:	1003b71e 	bne	r2,zero,24588 <_dtoa_r+0x119c>
   236ac:	18800108 	cmpgei	r2,r3,4
   236b0:	1003a626 	beq	r2,zero,2454c <_dtoa_r+0x1160>
   236b4:	d8800117 	ldw	r2,4(sp)
   236b8:	10800120 	cmpeqi	r2,r2,4
   236bc:	1003611e 	bne	r2,zero,24444 <_dtoa_r+0x1058>
   236c0:	00800144 	movi	r2,5
   236c4:	d8800115 	stw	r2,4(sp)
   236c8:	00800044 	movi	r2,1
   236cc:	d8800715 	stw	r2,28(sp)
   236d0:	d8801f17 	ldw	r2,124(sp)
   236d4:	d8c00617 	ldw	r3,24(sp)
   236d8:	10c5883a 	add	r2,r2,r3
   236dc:	14800044 	addi	r18,r2,1
   236e0:	d8800a15 	stw	r2,40(sp)
   236e4:	900d883a 	mov	r6,r18
   236e8:	0485320e 	bge	zero,r18,24bb4 <_dtoa_r+0x17c8>
   236ec:	30800608 	cmpgei	r2,r6,24
   236f0:	10053026 	beq	r2,zero,24bb4 <_dtoa_r+0x17c8>
   236f4:	00c00044 	movi	r3,1
   236f8:	00800104 	movi	r2,4
   236fc:	1085883a 	add	r2,r2,r2
   23700:	11000504 	addi	r4,r2,20
   23704:	180b883a 	mov	r5,r3
   23708:	18c00044 	addi	r3,r3,1
   2370c:	313ffb2e 	bgeu	r6,r4,236fc <_dtoa_r+0x310>
   23710:	81401115 	stw	r5,68(r16)
   23714:	8009883a 	mov	r4,r16
   23718:	0026a3c0 	call	26a3c <_Balloc>
   2371c:	1039883a 	mov	fp,r2
   23720:	10050d26 	beq	r2,zero,24b58 <_dtoa_r+0x176c>
   23724:	80801015 	stw	r2,64(r16)
   23728:	908003e8 	cmpgeui	r2,r18,15
   2372c:	1001291e 	bne	r2,zero,23bd4 <_dtoa_r+0x7e8>
   23730:	88012826 	beq	r17,zero,23bd4 <_dtoa_r+0x7e8>
   23734:	d8c00617 	ldw	r3,24(sp)
   23738:	00c3b40e 	bge	zero,r3,2460c <_dtoa_r+0x1220>
   2373c:	188003cc 	andi	r2,r3,15
   23740:	100490fa 	slli	r2,r2,3
   23744:	1823d13a 	srai	r17,r3,4
   23748:	02c000f4 	movhi	r11,3
   2374c:	5ac1f604 	addi	r11,r11,2008
   23750:	5885883a 	add	r2,r11,r2
   23754:	88c0040c 	andi	r3,r17,16
   23758:	12400017 	ldw	r9,0(r2)
   2375c:	12000117 	ldw	r8,4(r2)
   23760:	18037626 	beq	r3,zero,2453c <_dtoa_r+0x1150>
   23764:	008000f4 	movhi	r2,3
   23768:	1081ec04 	addi	r2,r2,1968
   2376c:	d9000217 	ldw	r4,8(sp)
   23770:	11800817 	ldw	r6,32(r2)
   23774:	11c00917 	ldw	r7,36(r2)
   23778:	a80b883a 	mov	r5,r21
   2377c:	da000c15 	stw	r8,48(sp)
   23780:	da400b15 	stw	r9,44(sp)
   23784:	002bc0c0 	call	2bc0c <__divdf3>
   23788:	da400b17 	ldw	r9,44(sp)
   2378c:	da000c17 	ldw	r8,48(sp)
   23790:	8c4003cc 	andi	r17,r17,15
   23794:	1009883a 	mov	r4,r2
   23798:	180b883a 	mov	r5,r3
   2379c:	04c000c4 	movi	r19,3
   237a0:	88001c26 	beq	r17,zero,23814 <_dtoa_r+0x428>
   237a4:	050000f4 	movhi	r20,3
   237a8:	a501ec04 	addi	r20,r20,1968
   237ac:	dc800b15 	stw	r18,44(sp)
   237b0:	dc000c15 	stw	r16,48(sp)
   237b4:	9825883a 	mov	r18,r19
   237b8:	a021883a 	mov	r16,r20
   237bc:	2827883a 	mov	r19,r5
   237c0:	2029883a 	mov	r20,r4
   237c4:	400b883a 	mov	r5,r8
   237c8:	4809883a 	mov	r4,r9
   237cc:	8980004c 	andi	r6,r17,1
   237d0:	30000626 	beq	r6,zero,237ec <_dtoa_r+0x400>
   237d4:	81800017 	ldw	r6,0(r16)
   237d8:	81c00117 	ldw	r7,4(r16)
   237dc:	94800044 	addi	r18,r18,1
   237e0:	002c6dc0 	call	2c6dc <__muldf3>
   237e4:	1009883a 	mov	r4,r2
   237e8:	180b883a 	mov	r5,r3
   237ec:	8823d07a 	srai	r17,r17,1
   237f0:	84000204 	addi	r16,r16,8
   237f4:	883ff51e 	bne	r17,zero,237cc <_dtoa_r+0x3e0>
   237f8:	2811883a 	mov	r8,r5
   237fc:	dc000c17 	ldw	r16,48(sp)
   23800:	980b883a 	mov	r5,r19
   23804:	9027883a 	mov	r19,r18
   23808:	dc800b17 	ldw	r18,44(sp)
   2380c:	2013883a 	mov	r9,r4
   23810:	a009883a 	mov	r4,r20
   23814:	480d883a 	mov	r6,r9
   23818:	400f883a 	mov	r7,r8
   2381c:	002bc0c0 	call	2bc0c <__divdf3>
   23820:	1023883a 	mov	r17,r2
   23824:	1829883a 	mov	r20,r3
   23828:	d8800817 	ldw	r2,32(sp)
   2382c:	10000626 	beq	r2,zero,23848 <_dtoa_r+0x45c>
   23830:	000d883a 	mov	r6,zero
   23834:	01cffc34 	movhi	r7,16368
   23838:	8809883a 	mov	r4,r17
   2383c:	a00b883a 	mov	r5,r20
   23840:	002c5e40 	call	2c5e4 <__ledf2>
   23844:	10045a16 	blt	r2,zero,249b0 <_dtoa_r+0x15c4>
   23848:	9809883a 	mov	r4,r19
   2384c:	002d8240 	call	2d824 <__floatsidf>
   23850:	880d883a 	mov	r6,r17
   23854:	a00f883a 	mov	r7,r20
   23858:	1009883a 	mov	r4,r2
   2385c:	180b883a 	mov	r5,r3
   23860:	002c6dc0 	call	2c6dc <__muldf3>
   23864:	000d883a 	mov	r6,zero
   23868:	01d00734 	movhi	r7,16412
   2386c:	1009883a 	mov	r4,r2
   23870:	180b883a 	mov	r5,r3
   23874:	002b3080 	call	2b308 <__adddf3>
   23878:	d8800b15 	stw	r2,44(sp)
   2387c:	00bf3034 	movhi	r2,64704
   23880:	18a7883a 	add	r19,r3,r2
   23884:	9000c026 	beq	r18,zero,23b88 <_dtoa_r+0x79c>
   23888:	d8800617 	ldw	r2,24(sp)
   2388c:	dc800c15 	stw	r18,48(sp)
   23890:	d8801115 	stw	r2,68(sp)
   23894:	d8800c17 	ldw	r2,48(sp)
   23898:	02c000f4 	movhi	r11,3
   2389c:	5ac1f604 	addi	r11,r11,2008
   238a0:	10bfffc4 	addi	r2,r2,-1
   238a4:	100490fa 	slli	r2,r2,3
   238a8:	8809883a 	mov	r4,r17
   238ac:	a00b883a 	mov	r5,r20
   238b0:	5885883a 	add	r2,r11,r2
   238b4:	10c00017 	ldw	r3,0(r2)
   238b8:	10800117 	ldw	r2,4(r2)
   238bc:	dac00d15 	stw	r11,52(sp)
   238c0:	d8c00f15 	stw	r3,60(sp)
   238c4:	d8801015 	stw	r2,64(sp)
   238c8:	002d7a40 	call	2d7a4 <__fixdfsi>
   238cc:	11400c04 	addi	r5,r2,48
   238d0:	1009883a 	mov	r4,r2
   238d4:	d9400e15 	stw	r5,56(sp)
   238d8:	002d8240 	call	2d824 <__floatsidf>
   238dc:	8809883a 	mov	r4,r17
   238e0:	a00b883a 	mov	r5,r20
   238e4:	100d883a 	mov	r6,r2
   238e8:	180f883a 	mov	r7,r3
   238ec:	002cdb40 	call	2cdb4 <__subdf3>
   238f0:	d9000717 	ldw	r4,28(sp)
   238f4:	dac00d17 	ldw	r11,52(sp)
   238f8:	e2000044 	addi	r8,fp,1
   238fc:	1029883a 	mov	r20,r2
   23900:	1823883a 	mov	r17,r3
   23904:	2003ce26 	beq	r4,zero,24840 <_dtoa_r+0x1454>
   23908:	d9800f17 	ldw	r6,60(sp)
   2390c:	d9c01017 	ldw	r7,64(sp)
   23910:	0009883a 	mov	r4,zero
   23914:	014ff834 	movhi	r5,16352
   23918:	da001215 	stw	r8,72(sp)
   2391c:	002bc0c0 	call	2bc0c <__divdf3>
   23920:	d9800b17 	ldw	r6,44(sp)
   23924:	980f883a 	mov	r7,r19
   23928:	1009883a 	mov	r4,r2
   2392c:	180b883a 	mov	r5,r3
   23930:	002cdb40 	call	2cdb4 <__subdf3>
   23934:	1009883a 	mov	r4,r2
   23938:	d8800e17 	ldw	r2,56(sp)
   2393c:	180b883a 	mov	r5,r3
   23940:	a00d883a 	mov	r6,r20
   23944:	e0800005 	stb	r2,0(fp)
   23948:	880f883a 	mov	r7,r17
   2394c:	d9000d15 	stw	r4,52(sp)
   23950:	d8c00b15 	stw	r3,44(sp)
   23954:	002c4e80 	call	2c4e8 <__gedf2>
   23958:	d9400b17 	ldw	r5,44(sp)
   2395c:	d9000d17 	ldw	r4,52(sp)
   23960:	da001217 	ldw	r8,72(sp)
   23964:	00840b16 	blt	zero,r2,24994 <_dtoa_r+0x15a8>
   23968:	0005883a 	mov	r2,zero
   2396c:	dc800d15 	stw	r18,52(sp)
   23970:	dd800e15 	stw	r22,56(sp)
   23974:	ddc00b15 	stw	r23,44(sp)
   23978:	dd400f15 	stw	r21,60(sp)
   2397c:	ddc00c17 	ldw	r23,48(sp)
   23980:	402d883a 	mov	r22,r8
   23984:	dc000c15 	stw	r16,48(sp)
   23988:	2025883a 	mov	r18,r4
   2398c:	2827883a 	mov	r19,r5
   23990:	102b883a 	mov	r21,r2
   23994:	00002606 	br	23a30 <_dtoa_r+0x644>
   23998:	ad400044 	addi	r21,r21,1
   2399c:	adc4460e 	bge	r21,r23,24ab8 <_dtoa_r+0x16cc>
   239a0:	9009883a 	mov	r4,r18
   239a4:	980b883a 	mov	r5,r19
   239a8:	000d883a 	mov	r6,zero
   239ac:	01d00934 	movhi	r7,16420
   239b0:	002c6dc0 	call	2c6dc <__muldf3>
   239b4:	000d883a 	mov	r6,zero
   239b8:	01d00934 	movhi	r7,16420
   239bc:	a009883a 	mov	r4,r20
   239c0:	880b883a 	mov	r5,r17
   239c4:	1025883a 	mov	r18,r2
   239c8:	1827883a 	mov	r19,r3
   239cc:	002c6dc0 	call	2c6dc <__muldf3>
   239d0:	180b883a 	mov	r5,r3
   239d4:	1009883a 	mov	r4,r2
   239d8:	1823883a 	mov	r17,r3
   239dc:	1029883a 	mov	r20,r2
   239e0:	002d7a40 	call	2d7a4 <__fixdfsi>
   239e4:	1009883a 	mov	r4,r2
   239e8:	1021883a 	mov	r16,r2
   239ec:	002d8240 	call	2d824 <__floatsidf>
   239f0:	a009883a 	mov	r4,r20
   239f4:	880b883a 	mov	r5,r17
   239f8:	100d883a 	mov	r6,r2
   239fc:	180f883a 	mov	r7,r3
   23a00:	002cdb40 	call	2cdb4 <__subdf3>
   23a04:	b5800044 	addi	r22,r22,1
   23a08:	82000c04 	addi	r8,r16,48
   23a0c:	b23fffc5 	stb	r8,-1(r22)
   23a10:	900d883a 	mov	r6,r18
   23a14:	980f883a 	mov	r7,r19
   23a18:	1009883a 	mov	r4,r2
   23a1c:	180b883a 	mov	r5,r3
   23a20:	1029883a 	mov	r20,r2
   23a24:	1823883a 	mov	r17,r3
   23a28:	002c5e40 	call	2c5e4 <__ledf2>
   23a2c:	10041e16 	blt	r2,zero,24aa8 <_dtoa_r+0x16bc>
   23a30:	a00d883a 	mov	r6,r20
   23a34:	880f883a 	mov	r7,r17
   23a38:	0009883a 	mov	r4,zero
   23a3c:	014ffc34 	movhi	r5,16368
   23a40:	002cdb40 	call	2cdb4 <__subdf3>
   23a44:	900d883a 	mov	r6,r18
   23a48:	980f883a 	mov	r7,r19
   23a4c:	1009883a 	mov	r4,r2
   23a50:	180b883a 	mov	r5,r3
   23a54:	002c5e40 	call	2c5e4 <__ledf2>
   23a58:	103fcf0e 	bge	r2,zero,23998 <_dtoa_r+0x5ac>
   23a5c:	d8801117 	ldw	r2,68(sp)
   23a60:	b027883a 	mov	r19,r22
   23a64:	ddc00b17 	ldw	r23,44(sp)
   23a68:	dc000c17 	ldw	r16,48(sp)
   23a6c:	15800044 	addi	r22,r2,1
   23a70:	00000106 	br	23a78 <_dtoa_r+0x68c>
   23a74:	e4c3ed26 	beq	fp,r19,24a2c <_dtoa_r+0x1640>
   23a78:	98ffffc3 	ldbu	r3,-1(r19)
   23a7c:	9811883a 	mov	r8,r19
   23a80:	9cffffc4 	addi	r19,r19,-1
   23a84:	18803fcc 	andi	r2,r3,255
   23a88:	1080201c 	xori	r2,r2,128
   23a8c:	10bfe004 	addi	r2,r2,-128
   23a90:	10800e60 	cmpeqi	r2,r2,57
   23a94:	103ff71e 	bne	r2,zero,23a74 <_dtoa_r+0x688>
   23a98:	18c00044 	addi	r3,r3,1
   23a9c:	98c00005 	stb	r3,0(r19)
   23aa0:	b02b883a 	mov	r21,r22
   23aa4:	00015a06 	br	24010 <_dtoa_r+0xc24>
   23aa8:	00a00034 	movhi	r2,32768
   23aac:	10bfffc4 	addi	r2,r2,-1
   23ab0:	90aa703a 	and	r21,r18,r2
   23ab4:	a825883a 	mov	r18,r21
   23ab8:	00800044 	movi	r2,1
   23abc:	88800015 	stw	r2,0(r17)
   23ac0:	00dffc34 	movhi	r3,32752
   23ac4:	909ffc2c 	andhi	r2,r18,32752
   23ac8:	10fe681e 	bne	r2,r3,2346c <_dtoa_r+0x80>
   23acc:	d9002017 	ldw	r4,128(sp)
   23ad0:	00c9c3c4 	movi	r3,9999
   23ad4:	00800434 	movhi	r2,16
   23ad8:	20c00015 	stw	r3,0(r4)
   23adc:	d8c00217 	ldw	r3,8(sp)
   23ae0:	10bfffc4 	addi	r2,r2,-1
   23ae4:	9084703a 	and	r2,r18,r2
   23ae8:	10c4b03a 	or	r2,r2,r3
   23aec:	1000121e 	bne	r2,zero,23b38 <_dtoa_r+0x74c>
   23af0:	d8802217 	ldw	r2,136(sp)
   23af4:	070000f4 	movhi	fp,3
   23af8:	10041e26 	beq	r2,zero,24b74 <_dtoa_r+0x1788>
   23afc:	008000f4 	movhi	r2,3
   23b00:	e701b804 	addi	fp,fp,1760
   23b04:	1081ba04 	addi	r2,r2,1768
   23b08:	d8c02217 	ldw	r3,136(sp)
   23b0c:	18800015 	stw	r2,0(r3)
   23b10:	003e6706 	br	234b0 <_dtoa_r+0xc4>
   23b14:	01400434 	movhi	r5,16
   23b18:	297fffc4 	addi	r5,r5,-1
   23b1c:	a94a703a 	and	r5,r21,r5
   23b20:	dd001317 	ldw	r20,76(sp)
   23b24:	9809883a 	mov	r4,r19
   23b28:	294ffc34 	orhi	r5,r5,16368
   23b2c:	8c7f0044 	addi	r17,r17,-1023
   23b30:	d8000915 	stw	zero,36(sp)
   23b34:	003e8a06 	br	23560 <_dtoa_r+0x174>
   23b38:	d8802217 	ldw	r2,136(sp)
   23b3c:	070000f4 	movhi	fp,3
   23b40:	10023c1e 	bne	r2,zero,24434 <_dtoa_r+0x1048>
   23b44:	e701bb04 	addi	fp,fp,1772
   23b48:	003e5906 	br	234b0 <_dtoa_r+0xc4>
   23b4c:	9809883a 	mov	r4,r19
   23b50:	002d8240 	call	2d824 <__floatsidf>
   23b54:	880d883a 	mov	r6,r17
   23b58:	a00f883a 	mov	r7,r20
   23b5c:	1009883a 	mov	r4,r2
   23b60:	180b883a 	mov	r5,r3
   23b64:	002c6dc0 	call	2c6dc <__muldf3>
   23b68:	000d883a 	mov	r6,zero
   23b6c:	01d00734 	movhi	r7,16412
   23b70:	1009883a 	mov	r4,r2
   23b74:	180b883a 	mov	r5,r3
   23b78:	002b3080 	call	2b308 <__adddf3>
   23b7c:	d8800b15 	stw	r2,44(sp)
   23b80:	00bf3034 	movhi	r2,64704
   23b84:	18a7883a 	add	r19,r3,r2
   23b88:	8809883a 	mov	r4,r17
   23b8c:	a00b883a 	mov	r5,r20
   23b90:	000d883a 	mov	r6,zero
   23b94:	01d00534 	movhi	r7,16404
   23b98:	002cdb40 	call	2cdb4 <__subdf3>
   23b9c:	d9800b17 	ldw	r6,44(sp)
   23ba0:	980f883a 	mov	r7,r19
   23ba4:	1009883a 	mov	r4,r2
   23ba8:	180b883a 	mov	r5,r3
   23bac:	1029883a 	mov	r20,r2
   23bb0:	1823883a 	mov	r17,r3
   23bb4:	002c4e80 	call	2c4e8 <__gedf2>
   23bb8:	0083a716 	blt	zero,r2,24a58 <_dtoa_r+0x166c>
   23bbc:	d9800b17 	ldw	r6,44(sp)
   23bc0:	99e0003c 	xorhi	r7,r19,32768
   23bc4:	a009883a 	mov	r4,r20
   23bc8:	880b883a 	mov	r5,r17
   23bcc:	002c5e40 	call	2c5e4 <__ledf2>
   23bd0:	10001d16 	blt	r2,zero,23c48 <_dtoa_r+0x85c>
   23bd4:	d8801417 	ldw	r2,80(sp)
   23bd8:	10008816 	blt	r2,zero,23dfc <_dtoa_r+0xa10>
   23bdc:	d8c00617 	ldw	r3,24(sp)
   23be0:	18c003d0 	cmplti	r3,r3,15
   23be4:	18008526 	beq	r3,zero,23dfc <_dtoa_r+0xa10>
   23be8:	02c000f4 	movhi	r11,3
   23bec:	5ac1f604 	addi	r11,r11,2008
   23bf0:	d8800617 	ldw	r2,24(sp)
   23bf4:	100490fa 	slli	r2,r2,3
   23bf8:	5885883a 	add	r2,r11,r2
   23bfc:	10c00017 	ldw	r3,0(r2)
   23c00:	10800117 	ldw	r2,4(r2)
   23c04:	d8c00115 	stw	r3,4(sp)
   23c08:	d8800315 	stw	r2,12(sp)
   23c0c:	d8801f17 	ldw	r2,124(sp)
   23c10:	1000130e 	bge	r2,zero,23c60 <_dtoa_r+0x874>
   23c14:	04801216 	blt	zero,r18,23c60 <_dtoa_r+0x874>
   23c18:	90000b1e 	bne	r18,zero,23c48 <_dtoa_r+0x85c>
   23c1c:	d9000117 	ldw	r4,4(sp)
   23c20:	d9400317 	ldw	r5,12(sp)
   23c24:	000d883a 	mov	r6,zero
   23c28:	01d00534 	movhi	r7,16404
   23c2c:	002c6dc0 	call	2c6dc <__muldf3>
   23c30:	d9000217 	ldw	r4,8(sp)
   23c34:	100d883a 	mov	r6,r2
   23c38:	180f883a 	mov	r7,r3
   23c3c:	a80b883a 	mov	r5,r21
   23c40:	002c5e40 	call	2c5e4 <__ledf2>
   23c44:	00838416 	blt	zero,r2,24a58 <_dtoa_r+0x166c>
   23c48:	e011883a 	mov	r8,fp
   23c4c:	d8000315 	stw	zero,12(sp)
   23c50:	0023883a 	mov	r17,zero
   23c54:	d8801f17 	ldw	r2,124(sp)
   23c58:	00a4303a 	nor	r18,zero,r2
   23c5c:	0001da06 	br	243c8 <_dtoa_r+0xfdc>
   23c60:	dcc00117 	ldw	r19,4(sp)
   23c64:	dd000317 	ldw	r20,12(sp)
   23c68:	dd800217 	ldw	r22,8(sp)
   23c6c:	980d883a 	mov	r6,r19
   23c70:	a00f883a 	mov	r7,r20
   23c74:	b009883a 	mov	r4,r22
   23c78:	a80b883a 	mov	r5,r21
   23c7c:	002bc0c0 	call	2bc0c <__divdf3>
   23c80:	180b883a 	mov	r5,r3
   23c84:	1009883a 	mov	r4,r2
   23c88:	002d7a40 	call	2d7a4 <__fixdfsi>
   23c8c:	1009883a 	mov	r4,r2
   23c90:	1023883a 	mov	r17,r2
   23c94:	002d8240 	call	2d824 <__floatsidf>
   23c98:	980d883a 	mov	r6,r19
   23c9c:	a00f883a 	mov	r7,r20
   23ca0:	1009883a 	mov	r4,r2
   23ca4:	180b883a 	mov	r5,r3
   23ca8:	002c6dc0 	call	2c6dc <__muldf3>
   23cac:	100d883a 	mov	r6,r2
   23cb0:	b009883a 	mov	r4,r22
   23cb4:	a80b883a 	mov	r5,r21
   23cb8:	180f883a 	mov	r7,r3
   23cbc:	002cdb40 	call	2cdb4 <__subdf3>
   23cc0:	89000c04 	addi	r4,r17,48
   23cc4:	e1000005 	stb	r4,0(fp)
   23cc8:	91800060 	cmpeqi	r6,r18,1
   23ccc:	1009883a 	mov	r4,r2
   23cd0:	180b883a 	mov	r5,r3
   23cd4:	e4c00044 	addi	r19,fp,1
   23cd8:	3002891e 	bne	r6,zero,24700 <_dtoa_r+0x1314>
   23cdc:	ddc00215 	stw	r23,8(sp)
   23ce0:	05800044 	movi	r22,1
   23ce4:	ddc00117 	ldw	r23,4(sp)
   23ce8:	dc000415 	stw	r16,16(sp)
   23cec:	a023883a 	mov	r17,r20
   23cf0:	00001c06 	br	23d64 <_dtoa_r+0x978>
   23cf4:	b80d883a 	mov	r6,r23
   23cf8:	880f883a 	mov	r7,r17
   23cfc:	a809883a 	mov	r4,r21
   23d00:	a00b883a 	mov	r5,r20
   23d04:	002bc0c0 	call	2bc0c <__divdf3>
   23d08:	180b883a 	mov	r5,r3
   23d0c:	1009883a 	mov	r4,r2
   23d10:	002d7a40 	call	2d7a4 <__fixdfsi>
   23d14:	1009883a 	mov	r4,r2
   23d18:	1021883a 	mov	r16,r2
   23d1c:	002d8240 	call	2d824 <__floatsidf>
   23d20:	b80d883a 	mov	r6,r23
   23d24:	880f883a 	mov	r7,r17
   23d28:	1009883a 	mov	r4,r2
   23d2c:	180b883a 	mov	r5,r3
   23d30:	002c6dc0 	call	2c6dc <__muldf3>
   23d34:	a809883a 	mov	r4,r21
   23d38:	a00b883a 	mov	r5,r20
   23d3c:	100d883a 	mov	r6,r2
   23d40:	180f883a 	mov	r7,r3
   23d44:	002cdb40 	call	2cdb4 <__subdf3>
   23d48:	81000c04 	addi	r4,r16,48
   23d4c:	99000005 	stb	r4,0(r19)
   23d50:	b5800044 	addi	r22,r22,1
   23d54:	9cc00044 	addi	r19,r19,1
   23d58:	1009883a 	mov	r4,r2
   23d5c:	180b883a 	mov	r5,r3
   23d60:	b4826426 	beq	r22,r18,246f4 <_dtoa_r+0x1308>
   23d64:	000d883a 	mov	r6,zero
   23d68:	01d00934 	movhi	r7,16420
   23d6c:	002c6dc0 	call	2c6dc <__muldf3>
   23d70:	000d883a 	mov	r6,zero
   23d74:	000f883a 	mov	r7,zero
   23d78:	1009883a 	mov	r4,r2
   23d7c:	180b883a 	mov	r5,r3
   23d80:	102b883a 	mov	r21,r2
   23d84:	1829883a 	mov	r20,r3
   23d88:	002c4540 	call	2c454 <__eqdf2>
   23d8c:	103fd91e 	bne	r2,zero,23cf4 <_dtoa_r+0x908>
   23d90:	d8800617 	ldw	r2,24(sp)
   23d94:	ddc00217 	ldw	r23,8(sp)
   23d98:	dc000417 	ldw	r16,16(sp)
   23d9c:	15400044 	addi	r21,r2,1
   23da0:	9811883a 	mov	r8,r19
   23da4:	00009a06 	br	24010 <_dtoa_r+0xc24>
   23da8:	0502120e 	bge	zero,r20,245f4 <_dtoa_r+0x1208>
   23dac:	d8000815 	stw	zero,32(sp)
   23db0:	d8000515 	stw	zero,20(sp)
   23db4:	d8800417 	ldw	r2,16(sp)
   23db8:	d8c00117 	ldw	r3,4(sp)
   23dbc:	dd800615 	stw	r22,24(sp)
   23dc0:	1585883a 	add	r2,r2,r22
   23dc4:	d8800415 	stw	r2,16(sp)
   23dc8:	d8000315 	stw	zero,12(sp)
   23dcc:	188002a8 	cmpgeui	r2,r3,10
   23dd0:	103e2f26 	beq	r2,zero,23690 <_dtoa_r+0x2a4>
   23dd4:	00800044 	movi	r2,1
   23dd8:	04400044 	movi	r17,1
   23ddc:	d8000115 	stw	zero,4(sp)
   23de0:	d8800715 	stw	r2,28(sp)
   23de4:	04bfffc4 	movi	r18,-1
   23de8:	d8001f15 	stw	zero,124(sp)
   23dec:	80001115 	stw	zero,68(r16)
   23df0:	dc800a15 	stw	r18,40(sp)
   23df4:	000b883a 	mov	r5,zero
   23df8:	003e4606 	br	23714 <_dtoa_r+0x328>
   23dfc:	d8c00717 	ldw	r3,28(sp)
   23e00:	1800b41e 	bne	r3,zero,240d4 <_dtoa_r+0xce8>
   23e04:	dd000317 	ldw	r20,12(sp)
   23e08:	dcc00517 	ldw	r19,20(sp)
   23e0c:	d8000715 	stw	zero,28(sp)
   23e10:	0023883a 	mov	r17,zero
   23e14:	98000b26 	beq	r19,zero,23e44 <_dtoa_r+0xa58>
   23e18:	d8c00417 	ldw	r3,16(sp)
   23e1c:	00c0090e 	bge	zero,r3,23e44 <_dtoa_r+0xa58>
   23e20:	9805883a 	mov	r2,r19
   23e24:	1cc1ab16 	blt	r3,r19,244d4 <_dtoa_r+0x10e8>
   23e28:	d8c00517 	ldw	r3,20(sp)
   23e2c:	98a7c83a 	sub	r19,r19,r2
   23e30:	1887c83a 	sub	r3,r3,r2
   23e34:	d8c00515 	stw	r3,20(sp)
   23e38:	d8c00417 	ldw	r3,16(sp)
   23e3c:	1885c83a 	sub	r2,r3,r2
   23e40:	d8800415 	stw	r2,16(sp)
   23e44:	d8800317 	ldw	r2,12(sp)
   23e48:	10000826 	beq	r2,zero,23e6c <_dtoa_r+0xa80>
   23e4c:	d8800717 	ldw	r2,28(sp)
   23e50:	10000126 	beq	r2,zero,23e58 <_dtoa_r+0xa6c>
   23e54:	a0025a1e 	bne	r20,zero,247c0 <_dtoa_r+0x13d4>
   23e58:	d9800317 	ldw	r6,12(sp)
   23e5c:	b80b883a 	mov	r5,r23
   23e60:	8009883a 	mov	r4,r16
   23e64:	00271940 	call	27194 <__pow5mult>
   23e68:	102f883a 	mov	r23,r2
   23e6c:	01400044 	movi	r5,1
   23e70:	8009883a 	mov	r4,r16
   23e74:	0026e900 	call	26e90 <__i2b>
   23e78:	d8800315 	stw	r2,12(sp)
   23e7c:	b0015a1e 	bne	r22,zero,243e8 <_dtoa_r+0xffc>
   23e80:	d8800117 	ldw	r2,4(sp)
   23e84:	10800090 	cmplti	r2,r2,2
   23e88:	1001751e 	bne	r2,zero,24460 <_dtoa_r+0x1074>
   23e8c:	00800044 	movi	r2,1
   23e90:	d9400417 	ldw	r5,16(sp)
   23e94:	1145883a 	add	r2,r2,r5
   23e98:	108007cc 	andi	r2,r2,31
   23e9c:	10009826 	beq	r2,zero,24100 <_dtoa_r+0xd14>
   23ea0:	00c00804 	movi	r3,32
   23ea4:	1887c83a 	sub	r3,r3,r2
   23ea8:	19000150 	cmplti	r4,r3,5
   23eac:	20017e1e 	bne	r4,zero,244a8 <_dtoa_r+0x10bc>
   23eb0:	00c00704 	movi	r3,28
   23eb4:	1885c83a 	sub	r2,r3,r2
   23eb8:	d8c00517 	ldw	r3,20(sp)
   23ebc:	98a7883a 	add	r19,r19,r2
   23ec0:	1887883a 	add	r3,r3,r2
   23ec4:	2885883a 	add	r2,r5,r2
   23ec8:	d8c00515 	stw	r3,20(sp)
   23ecc:	d8800415 	stw	r2,16(sp)
   23ed0:	d8800517 	ldw	r2,20(sp)
   23ed4:	0080050e 	bge	zero,r2,23eec <_dtoa_r+0xb00>
   23ed8:	b80b883a 	mov	r5,r23
   23edc:	100d883a 	mov	r6,r2
   23ee0:	8009883a 	mov	r4,r16
   23ee4:	00272d40 	call	272d4 <__lshift>
   23ee8:	102f883a 	mov	r23,r2
   23eec:	d8800417 	ldw	r2,16(sp)
   23ef0:	0080050e 	bge	zero,r2,23f08 <_dtoa_r+0xb1c>
   23ef4:	d9400317 	ldw	r5,12(sp)
   23ef8:	100d883a 	mov	r6,r2
   23efc:	8009883a 	mov	r4,r16
   23f00:	00272d40 	call	272d4 <__lshift>
   23f04:	d8800315 	stw	r2,12(sp)
   23f08:	d8800817 	ldw	r2,32(sp)
   23f0c:	10004c1e 	bne	r2,zero,24040 <_dtoa_r+0xc54>
   23f10:	04811a0e 	bge	zero,r18,2437c <_dtoa_r+0xf90>
   23f14:	d8800717 	ldw	r2,28(sp)
   23f18:	1000a11e 	bne	r2,zero,241a0 <_dtoa_r+0xdb4>
   23f1c:	d8800617 	ldw	r2,24(sp)
   23f20:	15400044 	addi	r21,r2,1
   23f24:	dd800317 	ldw	r22,12(sp)
   23f28:	04c00044 	movi	r19,1
   23f2c:	00000706 	br	23f4c <_dtoa_r+0xb60>
   23f30:	b80b883a 	mov	r5,r23
   23f34:	000f883a 	mov	r7,zero
   23f38:	01800284 	movi	r6,10
   23f3c:	8009883a 	mov	r4,r16
   23f40:	0026b040 	call	26b04 <__multadd>
   23f44:	102f883a 	mov	r23,r2
   23f48:	9cc00044 	addi	r19,r19,1
   23f4c:	b00b883a 	mov	r5,r22
   23f50:	b809883a 	mov	r4,r23
   23f54:	00231f00 	call	231f0 <quorem>
   23f58:	15000c04 	addi	r20,r2,48
   23f5c:	e4c5883a 	add	r2,fp,r19
   23f60:	153fffc5 	stb	r20,-1(r2)
   23f64:	9cbff216 	blt	r19,r18,23f30 <_dtoa_r+0xb44>
   23f68:	04800116 	blt	zero,r18,23f70 <_dtoa_r+0xb84>
   23f6c:	04800044 	movi	r18,1
   23f70:	e4a5883a 	add	r18,fp,r18
   23f74:	d8000215 	stw	zero,8(sp)
   23f78:	b80b883a 	mov	r5,r23
   23f7c:	8009883a 	mov	r4,r16
   23f80:	01800044 	movi	r6,1
   23f84:	00272d40 	call	272d4 <__lshift>
   23f88:	d9400317 	ldw	r5,12(sp)
   23f8c:	1009883a 	mov	r4,r2
   23f90:	102f883a 	mov	r23,r2
   23f94:	002745c0 	call	2745c <__mcmp>
   23f98:	00800216 	blt	zero,r2,23fa4 <_dtoa_r+0xbb8>
   23f9c:	00017c06 	br	24590 <_dtoa_r+0x11a4>
   23fa0:	e4819026 	beq	fp,r18,245e4 <_dtoa_r+0x11f8>
   23fa4:	90ffffc3 	ldbu	r3,-1(r18)
   23fa8:	9011883a 	mov	r8,r18
   23fac:	94bfffc4 	addi	r18,r18,-1
   23fb0:	18803fcc 	andi	r2,r3,255
   23fb4:	1080201c 	xori	r2,r2,128
   23fb8:	10bfe004 	addi	r2,r2,-128
   23fbc:	10800e60 	cmpeqi	r2,r2,57
   23fc0:	103ff71e 	bne	r2,zero,23fa0 <_dtoa_r+0xbb4>
   23fc4:	18c00044 	addi	r3,r3,1
   23fc8:	90c00005 	stb	r3,0(r18)
   23fcc:	d9400317 	ldw	r5,12(sp)
   23fd0:	8009883a 	mov	r4,r16
   23fd4:	da000115 	stw	r8,4(sp)
   23fd8:	0026ae00 	call	26ae0 <_Bfree>
   23fdc:	da000117 	ldw	r8,4(sp)
   23fe0:	88000b26 	beq	r17,zero,24010 <_dtoa_r+0xc24>
   23fe4:	d9400217 	ldw	r5,8(sp)
   23fe8:	28000426 	beq	r5,zero,23ffc <_dtoa_r+0xc10>
   23fec:	2c400326 	beq	r5,r17,23ffc <_dtoa_r+0xc10>
   23ff0:	8009883a 	mov	r4,r16
   23ff4:	0026ae00 	call	26ae0 <_Bfree>
   23ff8:	da000117 	ldw	r8,4(sp)
   23ffc:	880b883a 	mov	r5,r17
   24000:	8009883a 	mov	r4,r16
   24004:	da000115 	stw	r8,4(sp)
   24008:	0026ae00 	call	26ae0 <_Bfree>
   2400c:	da000117 	ldw	r8,4(sp)
   24010:	b80b883a 	mov	r5,r23
   24014:	8009883a 	mov	r4,r16
   24018:	da000115 	stw	r8,4(sp)
   2401c:	0026ae00 	call	26ae0 <_Bfree>
   24020:	da000117 	ldw	r8,4(sp)
   24024:	d8802017 	ldw	r2,128(sp)
   24028:	40000005 	stb	zero,0(r8)
   2402c:	15400015 	stw	r21,0(r2)
   24030:	d8802217 	ldw	r2,136(sp)
   24034:	103d1e26 	beq	r2,zero,234b0 <_dtoa_r+0xc4>
   24038:	12000015 	stw	r8,0(r2)
   2403c:	003d1c06 	br	234b0 <_dtoa_r+0xc4>
   24040:	d9400317 	ldw	r5,12(sp)
   24044:	b809883a 	mov	r4,r23
   24048:	002745c0 	call	2745c <__mcmp>
   2404c:	103fb00e 	bge	r2,zero,23f10 <_dtoa_r+0xb24>
   24050:	b80b883a 	mov	r5,r23
   24054:	000f883a 	mov	r7,zero
   24058:	01800284 	movi	r6,10
   2405c:	8009883a 	mov	r4,r16
   24060:	0026b040 	call	26b04 <__multadd>
   24064:	d8c00617 	ldw	r3,24(sp)
   24068:	102f883a 	mov	r23,r2
   2406c:	d8800717 	ldw	r2,28(sp)
   24070:	1d7fffc4 	addi	r21,r3,-1
   24074:	1000411e 	bne	r2,zero,2417c <_dtoa_r+0xd90>
   24078:	dc800a17 	ldw	r18,40(sp)
   2407c:	0482940e 	bge	zero,r18,24ad0 <_dtoa_r+0x16e4>
   24080:	dd400617 	ldw	r21,24(sp)
   24084:	003fa706 	br	23f24 <_dtoa_r+0xb38>
   24088:	00800044 	movi	r2,1
   2408c:	d8800815 	stw	r2,32(sp)
   24090:	a0bfffc4 	addi	r2,r20,-1
   24094:	103d720e 	bge	r2,zero,23660 <_dtoa_r+0x274>
   24098:	00800044 	movi	r2,1
   2409c:	1505c83a 	sub	r2,r2,r20
   240a0:	d8800515 	stw	r2,20(sp)
   240a4:	d8000415 	stw	zero,16(sp)
   240a8:	003d6e06 	br	23664 <_dtoa_r+0x278>
   240ac:	b009883a 	mov	r4,r22
   240b0:	002d8240 	call	2d824 <__floatsidf>
   240b4:	980d883a 	mov	r6,r19
   240b8:	900f883a 	mov	r7,r18
   240bc:	1009883a 	mov	r4,r2
   240c0:	180b883a 	mov	r5,r3
   240c4:	002c4540 	call	2c454 <__eqdf2>
   240c8:	103d5226 	beq	r2,zero,23614 <_dtoa_r+0x228>
   240cc:	b5bfffc4 	addi	r22,r22,-1
   240d0:	003d5006 	br	23614 <_dtoa_r+0x228>
   240d4:	d8c00117 	ldw	r3,4(sp)
   240d8:	18c00088 	cmpgei	r3,r3,2
   240dc:	18013526 	beq	r3,zero,245b4 <_dtoa_r+0x11c8>
   240e0:	d8800317 	ldw	r2,12(sp)
   240e4:	953fffc4 	addi	r20,r18,-1
   240e8:	1500fc16 	blt	r2,r20,244dc <_dtoa_r+0x10f0>
   240ec:	1529c83a 	sub	r20,r2,r20
   240f0:	d8800517 	ldw	r2,20(sp)
   240f4:	9002620e 	bge	r18,zero,24a80 <_dtoa_r+0x1694>
   240f8:	14a7c83a 	sub	r19,r2,r18
   240fc:	00010306 	br	2450c <_dtoa_r+0x1120>
   24100:	00800704 	movi	r2,28
   24104:	d8c00517 	ldw	r3,20(sp)
   24108:	98a7883a 	add	r19,r19,r2
   2410c:	1887883a 	add	r3,r3,r2
   24110:	d8c00515 	stw	r3,20(sp)
   24114:	d8c00417 	ldw	r3,16(sp)
   24118:	1885883a 	add	r2,r3,r2
   2411c:	d8800415 	stw	r2,16(sp)
   24120:	003f6b06 	br	23ed0 <_dtoa_r+0xae4>
   24124:	d8c00117 	ldw	r3,4(sp)
   24128:	188000e0 	cmpeqi	r2,r3,3
   2412c:	1001151e 	bne	r2,zero,24584 <_dtoa_r+0x1198>
   24130:	18800108 	cmpgei	r2,r3,4
   24134:	10000226 	beq	r2,zero,24140 <_dtoa_r+0xd54>
   24138:	04400044 	movi	r17,1
   2413c:	003d5d06 	br	236b4 <_dtoa_r+0x2c8>
   24140:	188000a0 	cmpeqi	r2,r3,2
   24144:	10028d26 	beq	r2,zero,24b7c <_dtoa_r+0x1790>
   24148:	04400044 	movi	r17,1
   2414c:	d8000715 	stw	zero,28(sp)
   24150:	d8801f17 	ldw	r2,124(sp)
   24154:	0080be0e 	bge	zero,r2,24450 <_dtoa_r+0x1064>
   24158:	d8800a15 	stw	r2,40(sp)
   2415c:	1025883a 	mov	r18,r2
   24160:	100d883a 	mov	r6,r2
   24164:	003d6106 	br	236ec <_dtoa_r+0x300>
   24168:	01000804 	movi	r4,32
   2416c:	2089c83a 	sub	r4,r4,r2
   24170:	d8800217 	ldw	r2,8(sp)
   24174:	1108983a 	sll	r4,r2,r4
   24178:	003cf206 	br	23544 <_dtoa_r+0x158>
   2417c:	880b883a 	mov	r5,r17
   24180:	000f883a 	mov	r7,zero
   24184:	01800284 	movi	r6,10
   24188:	8009883a 	mov	r4,r16
   2418c:	0026b040 	call	26b04 <__multadd>
   24190:	dc800a17 	ldw	r18,40(sp)
   24194:	1023883a 	mov	r17,r2
   24198:	04825d0e 	bge	zero,r18,24b10 <_dtoa_r+0x1724>
   2419c:	dd400615 	stw	r21,24(sp)
   241a0:	04c0c616 	blt	zero,r19,244bc <_dtoa_r+0x10d0>
   241a4:	b0016e1e 	bne	r22,zero,24760 <_dtoa_r+0x1374>
   241a8:	8827883a 	mov	r19,r17
   241ac:	e0bfffc4 	addi	r2,fp,-1
   241b0:	1485883a 	add	r2,r2,r18
   241b4:	d8800515 	stw	r2,20(sp)
   241b8:	d8800217 	ldw	r2,8(sp)
   241bc:	e02d883a 	mov	r22,fp
   241c0:	df000815 	stw	fp,32(sp)
   241c4:	1080004c 	andi	r2,r2,1
   241c8:	d8800715 	stw	r2,28(sp)
   241cc:	dc800317 	ldw	r18,12(sp)
   241d0:	b809883a 	mov	r4,r23
   241d4:	900b883a 	mov	r5,r18
   241d8:	00231f00 	call	231f0 <quorem>
   241dc:	880b883a 	mov	r5,r17
   241e0:	b809883a 	mov	r4,r23
   241e4:	102b883a 	mov	r21,r2
   241e8:	002745c0 	call	2745c <__mcmp>
   241ec:	900b883a 	mov	r5,r18
   241f0:	980d883a 	mov	r6,r19
   241f4:	8009883a 	mov	r4,r16
   241f8:	1025883a 	mov	r18,r2
   241fc:	00274b40 	call	274b4 <__mdiff>
   24200:	100b883a 	mov	r5,r2
   24204:	10800317 	ldw	r2,12(r2)
   24208:	af000c04 	addi	fp,r21,48
   2420c:	1000261e 	bne	r2,zero,242a8 <_dtoa_r+0xebc>
   24210:	b809883a 	mov	r4,r23
   24214:	d9400415 	stw	r5,16(sp)
   24218:	002745c0 	call	2745c <__mcmp>
   2421c:	d9400417 	ldw	r5,16(sp)
   24220:	1029883a 	mov	r20,r2
   24224:	8009883a 	mov	r4,r16
   24228:	0026ae00 	call	26ae0 <_Bfree>
   2422c:	a000401e 	bne	r20,zero,24330 <_dtoa_r+0xf44>
   24230:	d8800117 	ldw	r2,4(sp)
   24234:	1000021e 	bne	r2,zero,24240 <_dtoa_r+0xe54>
   24238:	d8800717 	ldw	r2,28(sp)
   2423c:	1000cb26 	beq	r2,zero,2456c <_dtoa_r+0x1180>
   24240:	90020816 	blt	r18,zero,24a64 <_dtoa_r+0x1678>
   24244:	d8800517 	ldw	r2,20(sp)
   24248:	b7000005 	stb	fp,0(r22)
   2424c:	b4800044 	addi	r18,r22,1
   24250:	15815426 	beq	r2,r22,247a4 <_dtoa_r+0x13b8>
   24254:	b80b883a 	mov	r5,r23
   24258:	000f883a 	mov	r7,zero
   2425c:	01800284 	movi	r6,10
   24260:	8009883a 	mov	r4,r16
   24264:	0026b040 	call	26b04 <__multadd>
   24268:	102f883a 	mov	r23,r2
   2426c:	880b883a 	mov	r5,r17
   24270:	000f883a 	mov	r7,zero
   24274:	01800284 	movi	r6,10
   24278:	8009883a 	mov	r4,r16
   2427c:	8cc02826 	beq	r17,r19,24320 <_dtoa_r+0xf34>
   24280:	0026b040 	call	26b04 <__multadd>
   24284:	980b883a 	mov	r5,r19
   24288:	000f883a 	mov	r7,zero
   2428c:	01800284 	movi	r6,10
   24290:	8009883a 	mov	r4,r16
   24294:	1023883a 	mov	r17,r2
   24298:	0026b040 	call	26b04 <__multadd>
   2429c:	1027883a 	mov	r19,r2
   242a0:	902d883a 	mov	r22,r18
   242a4:	003fc906 	br	241cc <_dtoa_r+0xde0>
   242a8:	8009883a 	mov	r4,r16
   242ac:	e029883a 	mov	r20,fp
   242b0:	df000817 	ldw	fp,32(sp)
   242b4:	0026ae00 	call	26ae0 <_Bfree>
   242b8:	90000616 	blt	r18,zero,242d4 <_dtoa_r+0xee8>
   242bc:	d8800217 	ldw	r2,8(sp)
   242c0:	d8c00117 	ldw	r3,4(sp)
   242c4:	1080004c 	andi	r2,r2,1
   242c8:	1ca4b03a 	or	r18,r3,r18
   242cc:	1484b03a 	or	r2,r2,r18
   242d0:	1000201e 	bne	r2,zero,24354 <_dtoa_r+0xf68>
   242d4:	b80b883a 	mov	r5,r23
   242d8:	8009883a 	mov	r4,r16
   242dc:	01800044 	movi	r6,1
   242e0:	00272d40 	call	272d4 <__lshift>
   242e4:	d9400317 	ldw	r5,12(sp)
   242e8:	1009883a 	mov	r4,r2
   242ec:	102f883a 	mov	r23,r2
   242f0:	002745c0 	call	2745c <__mcmp>
   242f4:	0080990e 	bge	zero,r2,2455c <_dtoa_r+0x1170>
   242f8:	a0c00e60 	cmpeqi	r3,r20,57
   242fc:	1801ce1e 	bne	r3,zero,24a38 <_dtoa_r+0x164c>
   24300:	ad000c44 	addi	r20,r21,49
   24304:	d8800617 	ldw	r2,24(sp)
   24308:	dc400215 	stw	r17,8(sp)
   2430c:	b2000044 	addi	r8,r22,1
   24310:	b5000005 	stb	r20,0(r22)
   24314:	15400044 	addi	r21,r2,1
   24318:	9823883a 	mov	r17,r19
   2431c:	003f2b06 	br	23fcc <_dtoa_r+0xbe0>
   24320:	0026b040 	call	26b04 <__multadd>
   24324:	1023883a 	mov	r17,r2
   24328:	1027883a 	mov	r19,r2
   2432c:	003fdc06 	br	242a0 <_dtoa_r+0xeb4>
   24330:	90022316 	blt	r18,zero,24bc0 <_dtoa_r+0x17d4>
   24334:	d8800117 	ldw	r2,4(sp)
   24338:	14a4b03a 	or	r18,r2,r18
   2433c:	d8800717 	ldw	r2,28(sp)
   24340:	14a4b03a 	or	r18,r2,r18
   24344:	90021e26 	beq	r18,zero,24bc0 <_dtoa_r+0x17d4>
   24348:	053fbe0e 	bge	zero,r20,24244 <_dtoa_r+0xe58>
   2434c:	e029883a 	mov	r20,fp
   24350:	df000817 	ldw	fp,32(sp)
   24354:	a0800e60 	cmpeqi	r2,r20,57
   24358:	1001b71e 	bne	r2,zero,24a38 <_dtoa_r+0x164c>
   2435c:	d8800617 	ldw	r2,24(sp)
   24360:	a0c00044 	addi	r3,r20,1
   24364:	dc400215 	stw	r17,8(sp)
   24368:	b2000044 	addi	r8,r22,1
   2436c:	15400044 	addi	r21,r2,1
   24370:	b0c00005 	stb	r3,0(r22)
   24374:	9823883a 	mov	r17,r19
   24378:	003f1406 	br	23fcc <_dtoa_r+0xbe0>
   2437c:	d8800117 	ldw	r2,4(sp)
   24380:	108000d0 	cmplti	r2,r2,3
   24384:	103ee31e 	bne	r2,zero,23f14 <_dtoa_r+0xb28>
   24388:	9000d81e 	bne	r18,zero,246ec <_dtoa_r+0x1300>
   2438c:	d9400317 	ldw	r5,12(sp)
   24390:	8009883a 	mov	r4,r16
   24394:	000f883a 	mov	r7,zero
   24398:	01800144 	movi	r6,5
   2439c:	0026b040 	call	26b04 <__multadd>
   243a0:	100b883a 	mov	r5,r2
   243a4:	b809883a 	mov	r4,r23
   243a8:	d8800315 	stw	r2,12(sp)
   243ac:	002745c0 	call	2745c <__mcmp>
   243b0:	0080ce0e 	bge	zero,r2,246ec <_dtoa_r+0x1300>
   243b4:	00800c44 	movi	r2,49
   243b8:	e0800005 	stb	r2,0(fp)
   243bc:	d8800617 	ldw	r2,24(sp)
   243c0:	e2000044 	addi	r8,fp,1
   243c4:	14800044 	addi	r18,r2,1
   243c8:	d9400317 	ldw	r5,12(sp)
   243cc:	8009883a 	mov	r4,r16
   243d0:	da000115 	stw	r8,4(sp)
   243d4:	0026ae00 	call	26ae0 <_Bfree>
   243d8:	da000117 	ldw	r8,4(sp)
   243dc:	95400044 	addi	r21,r18,1
   243e0:	883f061e 	bne	r17,zero,23ffc <_dtoa_r+0xc10>
   243e4:	003f0a06 	br	24010 <_dtoa_r+0xc24>
   243e8:	100b883a 	mov	r5,r2
   243ec:	b00d883a 	mov	r6,r22
   243f0:	8009883a 	mov	r4,r16
   243f4:	00271940 	call	27194 <__pow5mult>
   243f8:	d8c00117 	ldw	r3,4(sp)
   243fc:	d8800315 	stw	r2,12(sp)
   24400:	18c00090 	cmplti	r3,r3,2
   24404:	1800461e 	bne	r3,zero,24520 <_dtoa_r+0x1134>
   24408:	002d883a 	mov	r22,zero
   2440c:	d8c00317 	ldw	r3,12(sp)
   24410:	18800417 	ldw	r2,16(r3)
   24414:	10800104 	addi	r2,r2,4
   24418:	100490ba 	slli	r2,r2,2
   2441c:	1885883a 	add	r2,r3,r2
   24420:	11000017 	ldw	r4,0(r2)
   24424:	0026d6c0 	call	26d6c <__hi0bits>
   24428:	00c00804 	movi	r3,32
   2442c:	1885c83a 	sub	r2,r3,r2
   24430:	003e9706 	br	23e90 <_dtoa_r+0xaa4>
   24434:	008000f4 	movhi	r2,3
   24438:	e701bb04 	addi	fp,fp,1772
   2443c:	1081bbc4 	addi	r2,r2,1775
   24440:	003db106 	br	23b08 <_dtoa_r+0x71c>
   24444:	00800044 	movi	r2,1
   24448:	d8800715 	stw	r2,28(sp)
   2444c:	003f4006 	br	24150 <_dtoa_r+0xd64>
   24450:	00800044 	movi	r2,1
   24454:	04800044 	movi	r18,1
   24458:	d8801f15 	stw	r2,124(sp)
   2445c:	003e6306 	br	23dec <_dtoa_r+0xa00>
   24460:	d8800217 	ldw	r2,8(sp)
   24464:	103e891e 	bne	r2,zero,23e8c <_dtoa_r+0xaa0>
   24468:	00800434 	movhi	r2,16
   2446c:	10bfffc4 	addi	r2,r2,-1
   24470:	a884703a 	and	r2,r21,r2
   24474:	103e851e 	bne	r2,zero,23e8c <_dtoa_r+0xaa0>
   24478:	a89ffc2c 	andhi	r2,r21,32752
   2447c:	10017c26 	beq	r2,zero,24a70 <_dtoa_r+0x1684>
   24480:	d8800517 	ldw	r2,20(sp)
   24484:	10800044 	addi	r2,r2,1
   24488:	d8800515 	stw	r2,20(sp)
   2448c:	d8800417 	ldw	r2,16(sp)
   24490:	10800044 	addi	r2,r2,1
   24494:	d8800415 	stw	r2,16(sp)
   24498:	00800044 	movi	r2,1
   2449c:	b001761e 	bne	r22,zero,24a78 <_dtoa_r+0x168c>
   244a0:	102d883a 	mov	r22,r2
   244a4:	003e7906 	br	23e8c <_dtoa_r+0xaa0>
   244a8:	18c00120 	cmpeqi	r3,r3,4
   244ac:	183e881e 	bne	r3,zero,23ed0 <_dtoa_r+0xae4>
   244b0:	00c00f04 	movi	r3,60
   244b4:	1885c83a 	sub	r2,r3,r2
   244b8:	003f1206 	br	24104 <_dtoa_r+0xd18>
   244bc:	880b883a 	mov	r5,r17
   244c0:	980d883a 	mov	r6,r19
   244c4:	8009883a 	mov	r4,r16
   244c8:	00272d40 	call	272d4 <__lshift>
   244cc:	1023883a 	mov	r17,r2
   244d0:	003f3406 	br	241a4 <_dtoa_r+0xdb8>
   244d4:	1805883a 	mov	r2,r3
   244d8:	003e5306 	br	23e28 <_dtoa_r+0xa3c>
   244dc:	d8800317 	ldw	r2,12(sp)
   244e0:	d8c00517 	ldw	r3,20(sp)
   244e4:	dd000315 	stw	r20,12(sp)
   244e8:	a085c83a 	sub	r2,r20,r2
   244ec:	b0ad883a 	add	r22,r22,r2
   244f0:	d8800417 	ldw	r2,16(sp)
   244f4:	1827883a 	mov	r19,r3
   244f8:	0029883a 	mov	r20,zero
   244fc:	1485883a 	add	r2,r2,r18
   24500:	d8800415 	stw	r2,16(sp)
   24504:	1c85883a 	add	r2,r3,r18
   24508:	d8800515 	stw	r2,20(sp)
   2450c:	01400044 	movi	r5,1
   24510:	8009883a 	mov	r4,r16
   24514:	0026e900 	call	26e90 <__i2b>
   24518:	1023883a 	mov	r17,r2
   2451c:	003e3d06 	br	23e14 <_dtoa_r+0xa28>
   24520:	d8800217 	ldw	r2,8(sp)
   24524:	103fb81e 	bne	r2,zero,24408 <_dtoa_r+0x101c>
   24528:	00800434 	movhi	r2,16
   2452c:	10bfffc4 	addi	r2,r2,-1
   24530:	a884703a 	and	r2,r21,r2
   24534:	103fb41e 	bne	r2,zero,24408 <_dtoa_r+0x101c>
   24538:	003fcf06 	br	24478 <_dtoa_r+0x108c>
   2453c:	d9000217 	ldw	r4,8(sp)
   24540:	a80b883a 	mov	r5,r21
   24544:	04c00084 	movi	r19,2
   24548:	003c9506 	br	237a0 <_dtoa_r+0x3b4>
   2454c:	00800084 	movi	r2,2
   24550:	d8800115 	stw	r2,4(sp)
   24554:	d8000715 	stw	zero,28(sp)
   24558:	003efd06 	br	24150 <_dtoa_r+0xd64>
   2455c:	103f691e 	bne	r2,zero,24304 <_dtoa_r+0xf18>
   24560:	a080004c 	andi	r2,r20,1
   24564:	103f641e 	bne	r2,zero,242f8 <_dtoa_r+0xf0c>
   24568:	003f6606 	br	24304 <_dtoa_r+0xf18>
   2456c:	e029883a 	mov	r20,fp
   24570:	a0800e60 	cmpeqi	r2,r20,57
   24574:	df000817 	ldw	fp,32(sp)
   24578:	10012f1e 	bne	r2,zero,24a38 <_dtoa_r+0x164c>
   2457c:	04bf6016 	blt	zero,r18,24300 <_dtoa_r+0xf14>
   24580:	003f6006 	br	24304 <_dtoa_r+0xf18>
   24584:	04400044 	movi	r17,1
   24588:	d8000715 	stw	zero,28(sp)
   2458c:	003c5006 	br	236d0 <_dtoa_r+0x2e4>
   24590:	1000021e 	bne	r2,zero,2459c <_dtoa_r+0x11b0>
   24594:	a0c0004c 	andi	r3,r20,1
   24598:	183e821e 	bne	r3,zero,23fa4 <_dtoa_r+0xbb8>
   2459c:	90bfffc7 	ldb	r2,-1(r18)
   245a0:	9011883a 	mov	r8,r18
   245a4:	94bfffc4 	addi	r18,r18,-1
   245a8:	10800c20 	cmpeqi	r2,r2,48
   245ac:	103ffb1e 	bne	r2,zero,2459c <_dtoa_r+0x11b0>
   245b0:	003e8606 	br	23fcc <_dtoa_r+0xbe0>
   245b4:	d8c00917 	ldw	r3,36(sp)
   245b8:	18009526 	beq	r3,zero,24810 <_dtoa_r+0x1424>
   245bc:	d8c00517 	ldw	r3,20(sp)
   245c0:	d9000417 	ldw	r4,16(sp)
   245c4:	10810cc4 	addi	r2,r2,1075
   245c8:	dd000317 	ldw	r20,12(sp)
   245cc:	2089883a 	add	r4,r4,r2
   245d0:	1885883a 	add	r2,r3,r2
   245d4:	1827883a 	mov	r19,r3
   245d8:	d9000415 	stw	r4,16(sp)
   245dc:	d8800515 	stw	r2,20(sp)
   245e0:	003fca06 	br	2450c <_dtoa_r+0x1120>
   245e4:	00800c44 	movi	r2,49
   245e8:	e0800005 	stb	r2,0(fp)
   245ec:	ad400044 	addi	r21,r21,1
   245f0:	003e7606 	br	23fcc <_dtoa_r+0xbe0>
   245f4:	00800044 	movi	r2,1
   245f8:	1505c83a 	sub	r2,r2,r20
   245fc:	d8800515 	stw	r2,20(sp)
   24600:	d8000415 	stw	zero,16(sp)
   24604:	d8000815 	stw	zero,32(sp)
   24608:	003dea06 	br	23db4 <_dtoa_r+0x9c8>
   2460c:	d8800617 	ldw	r2,24(sp)
   24610:	1000e326 	beq	r2,zero,249a0 <_dtoa_r+0x15b4>
   24614:	0091c83a 	sub	r8,zero,r2
   24618:	408003cc 	andi	r2,r8,15
   2461c:	100490fa 	slli	r2,r2,3
   24620:	02c000f4 	movhi	r11,3
   24624:	5ac1f604 	addi	r11,r11,2008
   24628:	5885883a 	add	r2,r11,r2
   2462c:	4011d13a 	srai	r8,r8,4
   24630:	11800017 	ldw	r6,0(r2)
   24634:	11c00117 	ldw	r7,4(r2)
   24638:	d9000217 	ldw	r4,8(sp)
   2463c:	a80b883a 	mov	r5,r21
   24640:	da000b15 	stw	r8,44(sp)
   24644:	002c6dc0 	call	2c6dc <__muldf3>
   24648:	da000b17 	ldw	r8,44(sp)
   2464c:	40013726 	beq	r8,zero,24b2c <_dtoa_r+0x1740>
   24650:	024000f4 	movhi	r9,3
   24654:	000b883a 	mov	r5,zero
   24658:	04c00084 	movi	r19,2
   2465c:	4a41ec04 	addi	r9,r9,1968
   24660:	dc800b15 	stw	r18,44(sp)
   24664:	1009883a 	mov	r4,r2
   24668:	9825883a 	mov	r18,r19
   2466c:	d8800c15 	stw	r2,48(sp)
   24670:	8027883a 	mov	r19,r16
   24674:	2805883a 	mov	r2,r5
   24678:	1829883a 	mov	r20,r3
   2467c:	4021883a 	mov	r16,r8
   24680:	4823883a 	mov	r17,r9
   24684:	180b883a 	mov	r5,r3
   24688:	8180004c 	andi	r6,r16,1
   2468c:	30000726 	beq	r6,zero,246ac <_dtoa_r+0x12c0>
   24690:	89800017 	ldw	r6,0(r17)
   24694:	89c00117 	ldw	r7,4(r17)
   24698:	94800044 	addi	r18,r18,1
   2469c:	002c6dc0 	call	2c6dc <__muldf3>
   246a0:	1009883a 	mov	r4,r2
   246a4:	180b883a 	mov	r5,r3
   246a8:	00800044 	movi	r2,1
   246ac:	8021d07a 	srai	r16,r16,1
   246b0:	8c400204 	addi	r17,r17,8
   246b4:	803ff41e 	bne	r16,zero,24688 <_dtoa_r+0x129c>
   246b8:	a007883a 	mov	r3,r20
   246bc:	2829883a 	mov	r20,r5
   246c0:	100b883a 	mov	r5,r2
   246c4:	29403fcc 	andi	r5,r5,255
   246c8:	9821883a 	mov	r16,r19
   246cc:	d8800c17 	ldw	r2,48(sp)
   246d0:	9027883a 	mov	r19,r18
   246d4:	2023883a 	mov	r17,r4
   246d8:	dc800b17 	ldw	r18,44(sp)
   246dc:	283c521e 	bne	r5,zero,23828 <_dtoa_r+0x43c>
   246e0:	1023883a 	mov	r17,r2
   246e4:	1829883a 	mov	r20,r3
   246e8:	003c4f06 	br	23828 <_dtoa_r+0x43c>
   246ec:	e011883a 	mov	r8,fp
   246f0:	003d5806 	br	23c54 <_dtoa_r+0x868>
   246f4:	8023883a 	mov	r17,r16
   246f8:	ddc00217 	ldw	r23,8(sp)
   246fc:	dc000417 	ldw	r16,16(sp)
   24700:	200d883a 	mov	r6,r4
   24704:	280f883a 	mov	r7,r5
   24708:	002b3080 	call	2b308 <__adddf3>
   2470c:	1009883a 	mov	r4,r2
   24710:	d9800117 	ldw	r6,4(sp)
   24714:	d9c00317 	ldw	r7,12(sp)
   24718:	1029883a 	mov	r20,r2
   2471c:	d8800617 	ldw	r2,24(sp)
   24720:	180b883a 	mov	r5,r3
   24724:	1825883a 	mov	r18,r3
   24728:	15400044 	addi	r21,r2,1
   2472c:	002c4e80 	call	2c4e8 <__gedf2>
   24730:	a82d883a 	mov	r22,r21
   24734:	00bcd016 	blt	zero,r2,23a78 <_dtoa_r+0x68c>
   24738:	d9800117 	ldw	r6,4(sp)
   2473c:	d9c00317 	ldw	r7,12(sp)
   24740:	a009883a 	mov	r4,r20
   24744:	900b883a 	mov	r5,r18
   24748:	002c4540 	call	2c454 <__eqdf2>
   2474c:	1000021e 	bne	r2,zero,24758 <_dtoa_r+0x136c>
   24750:	8880004c 	andi	r2,r17,1
   24754:	103cc81e 	bne	r2,zero,23a78 <_dtoa_r+0x68c>
   24758:	9811883a 	mov	r8,r19
   2475c:	003e2c06 	br	24010 <_dtoa_r+0xc24>
   24760:	89400117 	ldw	r5,4(r17)
   24764:	8009883a 	mov	r4,r16
   24768:	0026a3c0 	call	26a3c <_Balloc>
   2476c:	1027883a 	mov	r19,r2
   24770:	1000f226 	beq	r2,zero,24b3c <_dtoa_r+0x1750>
   24774:	89800417 	ldw	r6,16(r17)
   24778:	89400304 	addi	r5,r17,12
   2477c:	11000304 	addi	r4,r2,12
   24780:	31800084 	addi	r6,r6,2
   24784:	300c90ba 	slli	r6,r6,2
   24788:	002671c0 	call	2671c <memcpy>
   2478c:	980b883a 	mov	r5,r19
   24790:	01800044 	movi	r6,1
   24794:	8009883a 	mov	r4,r16
   24798:	00272d40 	call	272d4 <__lshift>
   2479c:	1027883a 	mov	r19,r2
   247a0:	003e8206 	br	241ac <_dtoa_r+0xdc0>
   247a4:	d8800617 	ldw	r2,24(sp)
   247a8:	e029883a 	mov	r20,fp
   247ac:	dc400215 	stw	r17,8(sp)
   247b0:	df000817 	ldw	fp,32(sp)
   247b4:	15400044 	addi	r21,r2,1
   247b8:	9823883a 	mov	r17,r19
   247bc:	003dee06 	br	23f78 <_dtoa_r+0xb8c>
   247c0:	880b883a 	mov	r5,r17
   247c4:	a00d883a 	mov	r6,r20
   247c8:	8009883a 	mov	r4,r16
   247cc:	00271940 	call	27194 <__pow5mult>
   247d0:	b80d883a 	mov	r6,r23
   247d4:	100b883a 	mov	r5,r2
   247d8:	8009883a 	mov	r4,r16
   247dc:	1023883a 	mov	r17,r2
   247e0:	0026f400 	call	26f40 <__multiply>
   247e4:	d8800915 	stw	r2,36(sp)
   247e8:	d8800317 	ldw	r2,12(sp)
   247ec:	b80b883a 	mov	r5,r23
   247f0:	8009883a 	mov	r4,r16
   247f4:	1529c83a 	sub	r20,r2,r20
   247f8:	dd000315 	stw	r20,12(sp)
   247fc:	0026ae00 	call	26ae0 <_Bfree>
   24800:	d8800917 	ldw	r2,36(sp)
   24804:	102f883a 	mov	r23,r2
   24808:	a03d9826 	beq	r20,zero,23e6c <_dtoa_r+0xa80>
   2480c:	003d9206 	br	23e58 <_dtoa_r+0xa6c>
   24810:	d8c01317 	ldw	r3,76(sp)
   24814:	00800d84 	movi	r2,54
   24818:	d9000517 	ldw	r4,20(sp)
   2481c:	10c5c83a 	sub	r2,r2,r3
   24820:	d8c00417 	ldw	r3,16(sp)
   24824:	dd000317 	ldw	r20,12(sp)
   24828:	2027883a 	mov	r19,r4
   2482c:	1887883a 	add	r3,r3,r2
   24830:	2085883a 	add	r2,r4,r2
   24834:	d8c00415 	stw	r3,16(sp)
   24838:	d8800515 	stw	r2,20(sp)
   2483c:	003f3306 	br	2450c <_dtoa_r+0x1120>
   24840:	d9000b17 	ldw	r4,44(sp)
   24844:	d9800f17 	ldw	r6,60(sp)
   24848:	d9c01017 	ldw	r7,64(sp)
   2484c:	980b883a 	mov	r5,r19
   24850:	dac01215 	stw	r11,72(sp)
   24854:	da000d15 	stw	r8,52(sp)
   24858:	002c6dc0 	call	2c6dc <__muldf3>
   2485c:	d9000e17 	ldw	r4,56(sp)
   24860:	d9400c17 	ldw	r5,48(sp)
   24864:	d8800715 	stw	r2,28(sp)
   24868:	e1000005 	stb	r4,0(fp)
   2486c:	d8c00915 	stw	r3,36(sp)
   24870:	29000058 	cmpnei	r4,r5,1
   24874:	da000d17 	ldw	r8,52(sp)
   24878:	dac01217 	ldw	r11,72(sp)
   2487c:	e167883a 	add	r19,fp,r5
   24880:	2000a126 	beq	r4,zero,24b08 <_dtoa_r+0x171c>
   24884:	dc000c15 	stw	r16,48(sp)
   24888:	dc800b15 	stw	r18,44(sp)
   2488c:	4021883a 	mov	r16,r8
   24890:	a009883a 	mov	r4,r20
   24894:	880b883a 	mov	r5,r17
   24898:	dac00d15 	stw	r11,52(sp)
   2489c:	000d883a 	mov	r6,zero
   248a0:	01d00934 	movhi	r7,16420
   248a4:	002c6dc0 	call	2c6dc <__muldf3>
   248a8:	180b883a 	mov	r5,r3
   248ac:	1009883a 	mov	r4,r2
   248b0:	1825883a 	mov	r18,r3
   248b4:	1029883a 	mov	r20,r2
   248b8:	002d7a40 	call	2d7a4 <__fixdfsi>
   248bc:	1009883a 	mov	r4,r2
   248c0:	1023883a 	mov	r17,r2
   248c4:	002d8240 	call	2d824 <__floatsidf>
   248c8:	a009883a 	mov	r4,r20
   248cc:	900b883a 	mov	r5,r18
   248d0:	100d883a 	mov	r6,r2
   248d4:	180f883a 	mov	r7,r3
   248d8:	84000044 	addi	r16,r16,1
   248dc:	8c400c04 	addi	r17,r17,48
   248e0:	002cdb40 	call	2cdb4 <__subdf3>
   248e4:	847fffc5 	stb	r17,-1(r16)
   248e8:	1009883a 	mov	r4,r2
   248ec:	180b883a 	mov	r5,r3
   248f0:	9c3fea1e 	bne	r19,r16,2489c <_dtoa_r+0x14b0>
   248f4:	dc800b17 	ldw	r18,44(sp)
   248f8:	dc000c17 	ldw	r16,48(sp)
   248fc:	dac00d17 	ldw	r11,52(sp)
   24900:	1029883a 	mov	r20,r2
   24904:	1823883a 	mov	r17,r3
   24908:	d9000717 	ldw	r4,28(sp)
   2490c:	d9400917 	ldw	r5,36(sp)
   24910:	000d883a 	mov	r6,zero
   24914:	01cff834 	movhi	r7,16352
   24918:	dac00b15 	stw	r11,44(sp)
   2491c:	002b3080 	call	2b308 <__adddf3>
   24920:	100d883a 	mov	r6,r2
   24924:	180f883a 	mov	r7,r3
   24928:	a009883a 	mov	r4,r20
   2492c:	880b883a 	mov	r5,r17
   24930:	002c4e80 	call	2c4e8 <__gedf2>
   24934:	00805916 	blt	zero,r2,24a9c <_dtoa_r+0x16b0>
   24938:	d9800717 	ldw	r6,28(sp)
   2493c:	d9c00917 	ldw	r7,36(sp)
   24940:	0009883a 	mov	r4,zero
   24944:	014ff834 	movhi	r5,16352
   24948:	002cdb40 	call	2cdb4 <__subdf3>
   2494c:	100d883a 	mov	r6,r2
   24950:	180f883a 	mov	r7,r3
   24954:	a009883a 	mov	r4,r20
   24958:	880b883a 	mov	r5,r17
   2495c:	002c5e40 	call	2c5e4 <__ledf2>
   24960:	dac00b17 	ldw	r11,44(sp)
   24964:	10000616 	blt	r2,zero,24980 <_dtoa_r+0x1594>
   24968:	d8801417 	ldw	r2,80(sp)
   2496c:	103d2516 	blt	r2,zero,23e04 <_dtoa_r+0xa18>
   24970:	d8800617 	ldw	r2,24(sp)
   24974:	108003c8 	cmpgei	r2,r2,15
   24978:	103d221e 	bne	r2,zero,23e04 <_dtoa_r+0xa18>
   2497c:	003c9c06 	br	23bf0 <_dtoa_r+0x804>
   24980:	98bfffc7 	ldb	r2,-1(r19)
   24984:	9811883a 	mov	r8,r19
   24988:	9cffffc4 	addi	r19,r19,-1
   2498c:	10800c20 	cmpeqi	r2,r2,48
   24990:	103ffb1e 	bne	r2,zero,24980 <_dtoa_r+0x1594>
   24994:	d8801117 	ldw	r2,68(sp)
   24998:	15400044 	addi	r21,r2,1
   2499c:	003d9c06 	br	24010 <_dtoa_r+0xc24>
   249a0:	dc400217 	ldw	r17,8(sp)
   249a4:	a829883a 	mov	r20,r21
   249a8:	04c00084 	movi	r19,2
   249ac:	003b9e06 	br	23828 <_dtoa_r+0x43c>
   249b0:	903c6626 	beq	r18,zero,23b4c <_dtoa_r+0x760>
   249b4:	d8800a17 	ldw	r2,40(sp)
   249b8:	00bc860e 	bge	zero,r2,23bd4 <_dtoa_r+0x7e8>
   249bc:	a00b883a 	mov	r5,r20
   249c0:	8809883a 	mov	r4,r17
   249c4:	000d883a 	mov	r6,zero
   249c8:	01d00934 	movhi	r7,16420
   249cc:	002c6dc0 	call	2c6dc <__muldf3>
   249d0:	99000044 	addi	r4,r19,1
   249d4:	1023883a 	mov	r17,r2
   249d8:	1829883a 	mov	r20,r3
   249dc:	002d8240 	call	2d824 <__floatsidf>
   249e0:	880d883a 	mov	r6,r17
   249e4:	a00f883a 	mov	r7,r20
   249e8:	1009883a 	mov	r4,r2
   249ec:	180b883a 	mov	r5,r3
   249f0:	002c6dc0 	call	2c6dc <__muldf3>
   249f4:	1009883a 	mov	r4,r2
   249f8:	000d883a 	mov	r6,zero
   249fc:	01d00734 	movhi	r7,16412
   24a00:	180b883a 	mov	r5,r3
   24a04:	002b3080 	call	2b308 <__adddf3>
   24a08:	d9000617 	ldw	r4,24(sp)
   24a0c:	d8800b15 	stw	r2,44(sp)
   24a10:	00bf3034 	movhi	r2,64704
   24a14:	18a7883a 	add	r19,r3,r2
   24a18:	d8800a17 	ldw	r2,40(sp)
   24a1c:	213fffc4 	addi	r4,r4,-1
   24a20:	d9001115 	stw	r4,68(sp)
   24a24:	d8800c15 	stw	r2,48(sp)
   24a28:	003b9a06 	br	23894 <_dtoa_r+0x4a8>
   24a2c:	00c00c44 	movi	r3,49
   24a30:	b5800044 	addi	r22,r22,1
   24a34:	003c1906 	br	23a9c <_dtoa_r+0x6b0>
   24a38:	00800e44 	movi	r2,57
   24a3c:	b0800005 	stb	r2,0(r22)
   24a40:	d8800617 	ldw	r2,24(sp)
   24a44:	dc400215 	stw	r17,8(sp)
   24a48:	b4800044 	addi	r18,r22,1
   24a4c:	15400044 	addi	r21,r2,1
   24a50:	9823883a 	mov	r17,r19
   24a54:	003d5306 	br	23fa4 <_dtoa_r+0xbb8>
   24a58:	d8000315 	stw	zero,12(sp)
   24a5c:	0023883a 	mov	r17,zero
   24a60:	003e5406 	br	243b4 <_dtoa_r+0xfc8>
   24a64:	e029883a 	mov	r20,fp
   24a68:	df000817 	ldw	fp,32(sp)
   24a6c:	003e2506 	br	24304 <_dtoa_r+0xf18>
   24a70:	0005883a 	mov	r2,zero
   24a74:	003e8906 	br	2449c <_dtoa_r+0x10b0>
   24a78:	102d883a 	mov	r22,r2
   24a7c:	003e6306 	br	2440c <_dtoa_r+0x1020>
   24a80:	d8c00417 	ldw	r3,16(sp)
   24a84:	1027883a 	mov	r19,r2
   24a88:	1485883a 	add	r2,r2,r18
   24a8c:	1c87883a 	add	r3,r3,r18
   24a90:	d8c00415 	stw	r3,16(sp)
   24a94:	d8800515 	stw	r2,20(sp)
   24a98:	003e9c06 	br	2450c <_dtoa_r+0x1120>
   24a9c:	d8801117 	ldw	r2,68(sp)
   24aa0:	15800044 	addi	r22,r2,1
   24aa4:	003bf406 	br	23a78 <_dtoa_r+0x68c>
   24aa8:	ddc00b17 	ldw	r23,44(sp)
   24aac:	dc000c17 	ldw	r16,48(sp)
   24ab0:	b011883a 	mov	r8,r22
   24ab4:	003fb706 	br	24994 <_dtoa_r+0x15a8>
   24ab8:	dc800d17 	ldw	r18,52(sp)
   24abc:	dd800e17 	ldw	r22,56(sp)
   24ac0:	ddc00b17 	ldw	r23,44(sp)
   24ac4:	dc000c17 	ldw	r16,48(sp)
   24ac8:	dd400f17 	ldw	r21,60(sp)
   24acc:	003c4106 	br	23bd4 <_dtoa_r+0x7e8>
   24ad0:	d8800117 	ldw	r2,4(sp)
   24ad4:	108000c8 	cmpgei	r2,r2,3
   24ad8:	1000081e 	bne	r2,zero,24afc <_dtoa_r+0x1710>
   24adc:	d9400317 	ldw	r5,12(sp)
   24ae0:	b809883a 	mov	r4,r23
   24ae4:	00231f00 	call	231f0 <quorem>
   24ae8:	15000c04 	addi	r20,r2,48
   24aec:	dd400617 	ldw	r21,24(sp)
   24af0:	dc800a17 	ldw	r18,40(sp)
   24af4:	e5000005 	stb	r20,0(fp)
   24af8:	003d1b06 	br	23f68 <_dtoa_r+0xb7c>
   24afc:	dc800a17 	ldw	r18,40(sp)
   24b00:	dd400615 	stw	r21,24(sp)
   24b04:	003e2006 	br	24388 <_dtoa_r+0xf9c>
   24b08:	4027883a 	mov	r19,r8
   24b0c:	003f7e06 	br	24908 <_dtoa_r+0x151c>
   24b10:	d8800117 	ldw	r2,4(sp)
   24b14:	108000c8 	cmpgei	r2,r2,3
   24b18:	103ff81e 	bne	r2,zero,24afc <_dtoa_r+0x1710>
   24b1c:	dd400615 	stw	r21,24(sp)
   24b20:	dc800a17 	ldw	r18,40(sp)
   24b24:	04fd9f0e 	bge	zero,r19,241a4 <_dtoa_r+0xdb8>
   24b28:	003e6406 	br	244bc <_dtoa_r+0x10d0>
   24b2c:	1023883a 	mov	r17,r2
   24b30:	1829883a 	mov	r20,r3
   24b34:	04c00084 	movi	r19,2
   24b38:	003b3b06 	br	23828 <_dtoa_r+0x43c>
   24b3c:	01c000f4 	movhi	r7,3
   24b40:	010000f4 	movhi	r4,3
   24b44:	39c1bc04 	addi	r7,r7,1776
   24b48:	000d883a 	mov	r6,zero
   24b4c:	0140ba84 	movi	r5,746
   24b50:	2101c104 	addi	r4,r4,1796
   24b54:	00298340 	call	29834 <__assert_func>
   24b58:	01c000f4 	movhi	r7,3
   24b5c:	010000f4 	movhi	r4,3
   24b60:	39c1bc04 	addi	r7,r7,1776
   24b64:	000d883a 	mov	r6,zero
   24b68:	01406a84 	movi	r5,426
   24b6c:	2101c104 	addi	r4,r4,1796
   24b70:	00298340 	call	29834 <__assert_func>
   24b74:	e701b804 	addi	fp,fp,1760
   24b78:	003a4d06 	br	234b0 <_dtoa_r+0xc4>
   24b7c:	80001115 	stw	zero,68(r16)
   24b80:	000b883a 	mov	r5,zero
   24b84:	8009883a 	mov	r4,r16
   24b88:	0026a3c0 	call	26a3c <_Balloc>
   24b8c:	1039883a 	mov	fp,r2
   24b90:	103ff126 	beq	r2,zero,24b58 <_dtoa_r+0x176c>
   24b94:	80801015 	stw	r2,64(r16)
   24b98:	00bfffc4 	movi	r2,-1
   24b9c:	d8800a15 	stw	r2,40(sp)
   24ba0:	00800044 	movi	r2,1
   24ba4:	04bfffc4 	movi	r18,-1
   24ba8:	d8800715 	stw	r2,28(sp)
   24bac:	d8001f15 	stw	zero,124(sp)
   24bb0:	003c0806 	br	23bd4 <_dtoa_r+0x7e8>
   24bb4:	80001115 	stw	zero,68(r16)
   24bb8:	000b883a 	mov	r5,zero
   24bbc:	003ad506 	br	23714 <_dtoa_r+0x328>
   24bc0:	a005883a 	mov	r2,r20
   24bc4:	e029883a 	mov	r20,fp
   24bc8:	df000817 	ldw	fp,32(sp)
   24bcc:	00bdcd0e 	bge	zero,r2,24304 <_dtoa_r+0xf18>
   24bd0:	003dc006 	br	242d4 <_dtoa_r+0xee8>

00024bd4 <__sflush_r>:
   24bd4:	2880030b 	ldhu	r2,12(r5)
   24bd8:	defffb04 	addi	sp,sp,-20
   24bdc:	dcc00315 	stw	r19,12(sp)
   24be0:	dc000015 	stw	r16,0(sp)
   24be4:	dfc00415 	stw	ra,16(sp)
   24be8:	dc800215 	stw	r18,8(sp)
   24bec:	dc400115 	stw	r17,4(sp)
   24bf0:	10c0020c 	andi	r3,r2,8
   24bf4:	2821883a 	mov	r16,r5
   24bf8:	2027883a 	mov	r19,r4
   24bfc:	18003c1e 	bne	r3,zero,24cf0 <__sflush_r+0x11c>
   24c00:	29000117 	ldw	r4,4(r5)
   24c04:	10c20014 	ori	r3,r2,2048
   24c08:	28c0030d 	sth	r3,12(r5)
   24c0c:	0100580e 	bge	zero,r4,24d70 <__sflush_r+0x19c>
   24c10:	82000a17 	ldw	r8,40(r16)
   24c14:	40003426 	beq	r8,zero,24ce8 <__sflush_r+0x114>
   24c18:	9c400017 	ldw	r17,0(r19)
   24c1c:	1084000c 	andi	r2,r2,4096
   24c20:	98000015 	stw	zero,0(r19)
   24c24:	81400717 	ldw	r5,28(r16)
   24c28:	1000561e 	bne	r2,zero,24d84 <__sflush_r+0x1b0>
   24c2c:	000d883a 	mov	r6,zero
   24c30:	01c00044 	movi	r7,1
   24c34:	9809883a 	mov	r4,r19
   24c38:	403ee83a 	callr	r8
   24c3c:	100d883a 	mov	r6,r2
   24c40:	10bfffd8 	cmpnei	r2,r2,-1
   24c44:	10005b26 	beq	r2,zero,24db4 <__sflush_r+0x1e0>
   24c48:	80c0030b 	ldhu	r3,12(r16)
   24c4c:	82000a17 	ldw	r8,40(r16)
   24c50:	18c0010c 	andi	r3,r3,4
   24c54:	18000626 	beq	r3,zero,24c70 <__sflush_r+0x9c>
   24c58:	80c00117 	ldw	r3,4(r16)
   24c5c:	80800c17 	ldw	r2,48(r16)
   24c60:	30cdc83a 	sub	r6,r6,r3
   24c64:	10000226 	beq	r2,zero,24c70 <__sflush_r+0x9c>
   24c68:	80800f17 	ldw	r2,60(r16)
   24c6c:	308dc83a 	sub	r6,r6,r2
   24c70:	81400717 	ldw	r5,28(r16)
   24c74:	000f883a 	mov	r7,zero
   24c78:	9809883a 	mov	r4,r19
   24c7c:	403ee83a 	callr	r8
   24c80:	10ffffd8 	cmpnei	r3,r2,-1
   24c84:	1800411e 	bne	r3,zero,24d8c <__sflush_r+0x1b8>
   24c88:	99400017 	ldw	r5,0(r19)
   24c8c:	28c007b0 	cmpltui	r3,r5,30
   24c90:	18002c26 	beq	r3,zero,24d44 <__sflush_r+0x170>
   24c94:	00f7f034 	movhi	r3,57280
   24c98:	18ffff84 	addi	r3,r3,-2
   24c9c:	1949d83a 	sra	r4,r3,r5
   24ca0:	80c0030b 	ldhu	r3,12(r16)
   24ca4:	2100004c 	andi	r4,r4,1
   24ca8:	2000271e 	bne	r4,zero,24d48 <__sflush_r+0x174>
   24cac:	81000417 	ldw	r4,16(r16)
   24cb0:	19bdffcc 	andi	r6,r3,63487
   24cb4:	8180030d 	sth	r6,12(r16)
   24cb8:	80000115 	stw	zero,4(r16)
   24cbc:	81000015 	stw	r4,0(r16)
   24cc0:	18c4000c 	andi	r3,r3,4096
   24cc4:	1800431e 	bne	r3,zero,24dd4 <__sflush_r+0x200>
   24cc8:	81400c17 	ldw	r5,48(r16)
   24ccc:	9c400015 	stw	r17,0(r19)
   24cd0:	28000526 	beq	r5,zero,24ce8 <__sflush_r+0x114>
   24cd4:	80801004 	addi	r2,r16,64
   24cd8:	28800226 	beq	r5,r2,24ce4 <__sflush_r+0x110>
   24cdc:	9809883a 	mov	r4,r19
   24ce0:	00253600 	call	25360 <_free_r>
   24ce4:	80000c15 	stw	zero,48(r16)
   24ce8:	0005883a 	mov	r2,zero
   24cec:	00001906 	br	24d54 <__sflush_r+0x180>
   24cf0:	2c800417 	ldw	r18,16(r5)
   24cf4:	903ffc26 	beq	r18,zero,24ce8 <__sflush_r+0x114>
   24cf8:	2c400017 	ldw	r17,0(r5)
   24cfc:	108000cc 	andi	r2,r2,3
   24d00:	2c800015 	stw	r18,0(r5)
   24d04:	8ca3c83a 	sub	r17,r17,r18
   24d08:	10001c1e 	bne	r2,zero,24d7c <__sflush_r+0x1a8>
   24d0c:	28800517 	ldw	r2,20(r5)
   24d10:	80800215 	stw	r2,8(r16)
   24d14:	04400316 	blt	zero,r17,24d24 <__sflush_r+0x150>
   24d18:	003ff306 	br	24ce8 <__sflush_r+0x114>
   24d1c:	90a5883a 	add	r18,r18,r2
   24d20:	047ff10e 	bge	zero,r17,24ce8 <__sflush_r+0x114>
   24d24:	80800917 	ldw	r2,36(r16)
   24d28:	81400717 	ldw	r5,28(r16)
   24d2c:	880f883a 	mov	r7,r17
   24d30:	900d883a 	mov	r6,r18
   24d34:	9809883a 	mov	r4,r19
   24d38:	103ee83a 	callr	r2
   24d3c:	88a3c83a 	sub	r17,r17,r2
   24d40:	00bff616 	blt	zero,r2,24d1c <__sflush_r+0x148>
   24d44:	80c0030b 	ldhu	r3,12(r16)
   24d48:	18c01014 	ori	r3,r3,64
   24d4c:	80c0030d 	sth	r3,12(r16)
   24d50:	00bfffc4 	movi	r2,-1
   24d54:	dfc00417 	ldw	ra,16(sp)
   24d58:	dcc00317 	ldw	r19,12(sp)
   24d5c:	dc800217 	ldw	r18,8(sp)
   24d60:	dc400117 	ldw	r17,4(sp)
   24d64:	dc000017 	ldw	r16,0(sp)
   24d68:	dec00504 	addi	sp,sp,20
   24d6c:	f800283a 	ret
   24d70:	29000f17 	ldw	r4,60(r5)
   24d74:	013fa616 	blt	zero,r4,24c10 <__sflush_r+0x3c>
   24d78:	003fdb06 	br	24ce8 <__sflush_r+0x114>
   24d7c:	0005883a 	mov	r2,zero
   24d80:	003fe306 	br	24d10 <__sflush_r+0x13c>
   24d84:	81801417 	ldw	r6,80(r16)
   24d88:	003fb106 	br	24c50 <__sflush_r+0x7c>
   24d8c:	80c0030b 	ldhu	r3,12(r16)
   24d90:	81000417 	ldw	r4,16(r16)
   24d94:	80000115 	stw	zero,4(r16)
   24d98:	197dffcc 	andi	r5,r3,63487
   24d9c:	8140030d 	sth	r5,12(r16)
   24da0:	81000015 	stw	r4,0(r16)
   24da4:	18c4000c 	andi	r3,r3,4096
   24da8:	183fc726 	beq	r3,zero,24cc8 <__sflush_r+0xf4>
   24dac:	80801415 	stw	r2,80(r16)
   24db0:	003fc506 	br	24cc8 <__sflush_r+0xf4>
   24db4:	98800017 	ldw	r2,0(r19)
   24db8:	103fa326 	beq	r2,zero,24c48 <__sflush_r+0x74>
   24dbc:	10c00760 	cmpeqi	r3,r2,29
   24dc0:	1800021e 	bne	r3,zero,24dcc <__sflush_r+0x1f8>
   24dc4:	10800598 	cmpnei	r2,r2,22
   24dc8:	103fde1e 	bne	r2,zero,24d44 <__sflush_r+0x170>
   24dcc:	9c400015 	stw	r17,0(r19)
   24dd0:	003fc506 	br	24ce8 <__sflush_r+0x114>
   24dd4:	283fbc1e 	bne	r5,zero,24cc8 <__sflush_r+0xf4>
   24dd8:	003ff406 	br	24dac <__sflush_r+0x1d8>

00024ddc <_fflush_r>:
   24ddc:	defffd04 	addi	sp,sp,-12
   24de0:	dc000115 	stw	r16,4(sp)
   24de4:	dfc00215 	stw	ra,8(sp)
   24de8:	2021883a 	mov	r16,r4
   24dec:	20000226 	beq	r4,zero,24df8 <_fflush_r+0x1c>
   24df0:	20800e17 	ldw	r2,56(r4)
   24df4:	10000726 	beq	r2,zero,24e14 <_fflush_r+0x38>
   24df8:	2880030f 	ldh	r2,12(r5)
   24dfc:	10000a1e 	bne	r2,zero,24e28 <_fflush_r+0x4c>
   24e00:	0005883a 	mov	r2,zero
   24e04:	dfc00217 	ldw	ra,8(sp)
   24e08:	dc000117 	ldw	r16,4(sp)
   24e0c:	dec00304 	addi	sp,sp,12
   24e10:	f800283a 	ret
   24e14:	d9400015 	stw	r5,0(sp)
   24e18:	00251f40 	call	251f4 <__sinit>
   24e1c:	d9400017 	ldw	r5,0(sp)
   24e20:	2880030f 	ldh	r2,12(r5)
   24e24:	103ff626 	beq	r2,zero,24e00 <_fflush_r+0x24>
   24e28:	8009883a 	mov	r4,r16
   24e2c:	dfc00217 	ldw	ra,8(sp)
   24e30:	dc000117 	ldw	r16,4(sp)
   24e34:	dec00304 	addi	sp,sp,12
   24e38:	0024bd41 	jmpi	24bd4 <__sflush_r>

00024e3c <fflush>:
   24e3c:	20001726 	beq	r4,zero,24e9c <fflush+0x60>
   24e40:	008000f4 	movhi	r2,3
   24e44:	200b883a 	mov	r5,r4
   24e48:	110a3b17 	ldw	r4,10476(r2)
   24e4c:	20000226 	beq	r4,zero,24e58 <fflush+0x1c>
   24e50:	20800e17 	ldw	r2,56(r4)
   24e54:	10000526 	beq	r2,zero,24e6c <fflush+0x30>
   24e58:	2880030f 	ldh	r2,12(r5)
   24e5c:	1000021e 	bne	r2,zero,24e68 <fflush+0x2c>
   24e60:	0005883a 	mov	r2,zero
   24e64:	f800283a 	ret
   24e68:	0024bd41 	jmpi	24bd4 <__sflush_r>
   24e6c:	defffd04 	addi	sp,sp,-12
   24e70:	d9400115 	stw	r5,4(sp)
   24e74:	d9000015 	stw	r4,0(sp)
   24e78:	dfc00215 	stw	ra,8(sp)
   24e7c:	00251f40 	call	251f4 <__sinit>
   24e80:	d9400117 	ldw	r5,4(sp)
   24e84:	d9000017 	ldw	r4,0(sp)
   24e88:	2880030f 	ldh	r2,12(r5)
   24e8c:	10000826 	beq	r2,zero,24eb0 <fflush+0x74>
   24e90:	dfc00217 	ldw	ra,8(sp)
   24e94:	dec00304 	addi	sp,sp,12
   24e98:	0024bd41 	jmpi	24bd4 <__sflush_r>
   24e9c:	008000f4 	movhi	r2,3
   24ea0:	110a3a17 	ldw	r4,10472(r2)
   24ea4:	014000b4 	movhi	r5,2
   24ea8:	29537704 	addi	r5,r5,19932
   24eac:	0025ba41 	jmpi	25ba4 <_fwalk_reent>
   24eb0:	0005883a 	mov	r2,zero
   24eb4:	dfc00217 	ldw	ra,8(sp)
   24eb8:	dec00304 	addi	sp,sp,12
   24ebc:	f800283a 	ret

00024ec0 <__fp_lock>:
   24ec0:	0005883a 	mov	r2,zero
   24ec4:	f800283a 	ret

00024ec8 <_cleanup_r>:
   24ec8:	014000f4 	movhi	r5,3
   24ecc:	29667f04 	addi	r5,r5,-26116
   24ed0:	0025ba41 	jmpi	25ba4 <_fwalk_reent>

00024ed4 <__fp_unlock>:
   24ed4:	0005883a 	mov	r2,zero
   24ed8:	f800283a 	ret

00024edc <__sinit.part.0>:
   24edc:	00c000b4 	movhi	r3,2
   24ee0:	20800117 	ldw	r2,4(r4)
   24ee4:	18d3b204 	addi	r3,r3,20168
   24ee8:	20c00f15 	stw	r3,60(r4)
   24eec:	2140bb04 	addi	r5,r4,748
   24ef0:	00c000c4 	movi	r3,3
   24ef4:	20c0b915 	stw	r3,740(r4)
   24ef8:	2140ba15 	stw	r5,744(r4)
   24efc:	2000b815 	stw	zero,736(r4)
   24f00:	10001705 	stb	zero,92(r2)
   24f04:	10001745 	stb	zero,93(r2)
   24f08:	10001785 	stb	zero,94(r2)
   24f0c:	100017c5 	stb	zero,95(r2)
   24f10:	10001805 	stb	zero,96(r2)
   24f14:	10001845 	stb	zero,97(r2)
   24f18:	10001885 	stb	zero,98(r2)
   24f1c:	100018c5 	stb	zero,99(r2)
   24f20:	00c00104 	movi	r3,4
   24f24:	10c00315 	stw	r3,12(r2)
   24f28:	020000f4 	movhi	r8,3
   24f2c:	20c00217 	ldw	r3,8(r4)
   24f30:	01c000f4 	movhi	r7,3
   24f34:	018000f4 	movhi	r6,3
   24f38:	014000f4 	movhi	r5,3
   24f3c:	42207704 	addi	r8,r8,-32292
   24f40:	39e08e04 	addi	r7,r7,-32200
   24f44:	31a0ae04 	addi	r6,r6,-32072
   24f48:	2960c504 	addi	r5,r5,-31980
   24f4c:	02400074 	movhi	r9,1
   24f50:	10000015 	stw	zero,0(r2)
   24f54:	10000115 	stw	zero,4(r2)
   24f58:	10000215 	stw	zero,8(r2)
   24f5c:	10001915 	stw	zero,100(r2)
   24f60:	10000415 	stw	zero,16(r2)
   24f64:	10000515 	stw	zero,20(r2)
   24f68:	10000615 	stw	zero,24(r2)
   24f6c:	10800715 	stw	r2,28(r2)
   24f70:	12000815 	stw	r8,32(r2)
   24f74:	11c00915 	stw	r7,36(r2)
   24f78:	11800a15 	stw	r6,40(r2)
   24f7c:	11400b15 	stw	r5,44(r2)
   24f80:	4a400284 	addi	r9,r9,10
   24f84:	1a400315 	stw	r9,12(r3)
   24f88:	18000015 	stw	zero,0(r3)
   24f8c:	18000115 	stw	zero,4(r3)
   24f90:	18000215 	stw	zero,8(r3)
   24f94:	18001915 	stw	zero,100(r3)
   24f98:	18000415 	stw	zero,16(r3)
   24f9c:	18001705 	stb	zero,92(r3)
   24fa0:	18001745 	stb	zero,93(r3)
   24fa4:	18001785 	stb	zero,94(r3)
   24fa8:	180017c5 	stb	zero,95(r3)
   24fac:	18001805 	stb	zero,96(r3)
   24fb0:	18001845 	stb	zero,97(r3)
   24fb4:	18001885 	stb	zero,98(r3)
   24fb8:	180018c5 	stb	zero,99(r3)
   24fbc:	20800317 	ldw	r2,12(r4)
   24fc0:	024000b4 	movhi	r9,2
   24fc4:	18000515 	stw	zero,20(r3)
   24fc8:	18000615 	stw	zero,24(r3)
   24fcc:	18c00715 	stw	r3,28(r3)
   24fd0:	1a000815 	stw	r8,32(r3)
   24fd4:	19c00915 	stw	r7,36(r3)
   24fd8:	19800a15 	stw	r6,40(r3)
   24fdc:	19400b15 	stw	r5,44(r3)
   24fe0:	4a400484 	addi	r9,r9,18
   24fe4:	10000015 	stw	zero,0(r2)
   24fe8:	10000115 	stw	zero,4(r2)
   24fec:	10000215 	stw	zero,8(r2)
   24ff0:	10001915 	stw	zero,100(r2)
   24ff4:	12400315 	stw	r9,12(r2)
   24ff8:	10000415 	stw	zero,16(r2)
   24ffc:	10000515 	stw	zero,20(r2)
   25000:	10000615 	stw	zero,24(r2)
   25004:	10001705 	stb	zero,92(r2)
   25008:	10001745 	stb	zero,93(r2)
   2500c:	10001785 	stb	zero,94(r2)
   25010:	100017c5 	stb	zero,95(r2)
   25014:	10001805 	stb	zero,96(r2)
   25018:	10001845 	stb	zero,97(r2)
   2501c:	10001885 	stb	zero,98(r2)
   25020:	100018c5 	stb	zero,99(r2)
   25024:	10800715 	stw	r2,28(r2)
   25028:	12000815 	stw	r8,32(r2)
   2502c:	11c00915 	stw	r7,36(r2)
   25030:	11800a15 	stw	r6,40(r2)
   25034:	11400b15 	stw	r5,44(r2)
   25038:	00800044 	movi	r2,1
   2503c:	20800e15 	stw	r2,56(r4)
   25040:	f800283a 	ret

00025044 <__sfmoreglue>:
   25044:	defffc04 	addi	sp,sp,-16
   25048:	dc400115 	stw	r17,4(sp)
   2504c:	2c7fffc4 	addi	r17,r5,-1
   25050:	8c401a24 	muli	r17,r17,104
   25054:	dc800215 	stw	r18,8(sp)
   25058:	2825883a 	mov	r18,r5
   2505c:	89401d04 	addi	r5,r17,116
   25060:	dc000015 	stw	r16,0(sp)
   25064:	dfc00315 	stw	ra,12(sp)
   25068:	0025e980 	call	25e98 <_malloc_r>
   2506c:	1021883a 	mov	r16,r2
   25070:	10000726 	beq	r2,zero,25090 <__sfmoreglue+0x4c>
   25074:	11000304 	addi	r4,r2,12
   25078:	10000015 	stw	zero,0(r2)
   2507c:	14800115 	stw	r18,4(r2)
   25080:	11000215 	stw	r4,8(r2)
   25084:	89801a04 	addi	r6,r17,104
   25088:	000b883a 	mov	r5,zero
   2508c:	00269440 	call	26944 <memset>
   25090:	8005883a 	mov	r2,r16
   25094:	dfc00317 	ldw	ra,12(sp)
   25098:	dc800217 	ldw	r18,8(sp)
   2509c:	dc400117 	ldw	r17,4(sp)
   250a0:	dc000017 	ldw	r16,0(sp)
   250a4:	dec00404 	addi	sp,sp,16
   250a8:	f800283a 	ret

000250ac <__sfp>:
   250ac:	defffc04 	addi	sp,sp,-16
   250b0:	008000f4 	movhi	r2,3
   250b4:	dc400115 	stw	r17,4(sp)
   250b8:	144a3a17 	ldw	r17,10472(r2)
   250bc:	dc800215 	stw	r18,8(sp)
   250c0:	dfc00315 	stw	ra,12(sp)
   250c4:	88800e17 	ldw	r2,56(r17)
   250c8:	dc000015 	stw	r16,0(sp)
   250cc:	2025883a 	mov	r18,r4
   250d0:	10002d26 	beq	r2,zero,25188 <__sfp+0xdc>
   250d4:	8c40b804 	addi	r17,r17,736
   250d8:	88800117 	ldw	r2,4(r17)
   250dc:	8c000217 	ldw	r16,8(r17)
   250e0:	10bfffc4 	addi	r2,r2,-1
   250e4:	1000030e 	bge	r2,zero,250f4 <__sfp+0x48>
   250e8:	00002306 	br	25178 <__sfp+0xcc>
   250ec:	84001a04 	addi	r16,r16,104
   250f0:	28002126 	beq	r5,zero,25178 <__sfp+0xcc>
   250f4:	80c0030f 	ldh	r3,12(r16)
   250f8:	10bfffc4 	addi	r2,r2,-1
   250fc:	117fffd8 	cmpnei	r5,r2,-1
   25100:	183ffa1e 	bne	r3,zero,250ec <__sfp+0x40>
   25104:	00bffff4 	movhi	r2,65535
   25108:	10800044 	addi	r2,r2,1
   2510c:	80800315 	stw	r2,12(r16)
   25110:	80001915 	stw	zero,100(r16)
   25114:	80000015 	stw	zero,0(r16)
   25118:	80000215 	stw	zero,8(r16)
   2511c:	80000115 	stw	zero,4(r16)
   25120:	80000415 	stw	zero,16(r16)
   25124:	80000515 	stw	zero,20(r16)
   25128:	80000615 	stw	zero,24(r16)
   2512c:	80001705 	stb	zero,92(r16)
   25130:	80001745 	stb	zero,93(r16)
   25134:	80001785 	stb	zero,94(r16)
   25138:	800017c5 	stb	zero,95(r16)
   2513c:	80001805 	stb	zero,96(r16)
   25140:	80001845 	stb	zero,97(r16)
   25144:	80001885 	stb	zero,98(r16)
   25148:	800018c5 	stb	zero,99(r16)
   2514c:	80000c15 	stw	zero,48(r16)
   25150:	80000d15 	stw	zero,52(r16)
   25154:	80001115 	stw	zero,68(r16)
   25158:	80001215 	stw	zero,72(r16)
   2515c:	8005883a 	mov	r2,r16
   25160:	dfc00317 	ldw	ra,12(sp)
   25164:	dc800217 	ldw	r18,8(sp)
   25168:	dc400117 	ldw	r17,4(sp)
   2516c:	dc000017 	ldw	r16,0(sp)
   25170:	dec00404 	addi	sp,sp,16
   25174:	f800283a 	ret
   25178:	8c000017 	ldw	r16,0(r17)
   2517c:	80000526 	beq	r16,zero,25194 <__sfp+0xe8>
   25180:	8023883a 	mov	r17,r16
   25184:	003fd406 	br	250d8 <__sfp+0x2c>
   25188:	8809883a 	mov	r4,r17
   2518c:	0024edc0 	call	24edc <__sinit.part.0>
   25190:	003fd006 	br	250d4 <__sfp+0x28>
   25194:	01406b04 	movi	r5,428
   25198:	9009883a 	mov	r4,r18
   2519c:	0025e980 	call	25e98 <_malloc_r>
   251a0:	1021883a 	mov	r16,r2
   251a4:	10000a26 	beq	r2,zero,251d0 <__sfp+0x124>
   251a8:	10000015 	stw	zero,0(r2)
   251ac:	11000304 	addi	r4,r2,12
   251b0:	00800104 	movi	r2,4
   251b4:	80800115 	stw	r2,4(r16)
   251b8:	81000215 	stw	r4,8(r16)
   251bc:	01806804 	movi	r6,416
   251c0:	000b883a 	mov	r5,zero
   251c4:	00269440 	call	26944 <memset>
   251c8:	8c000015 	stw	r16,0(r17)
   251cc:	003fec06 	br	25180 <__sfp+0xd4>
   251d0:	88000015 	stw	zero,0(r17)
   251d4:	00800304 	movi	r2,12
   251d8:	90800015 	stw	r2,0(r18)
   251dc:	003fdf06 	br	2515c <__sfp+0xb0>

000251e0 <_cleanup>:
   251e0:	008000f4 	movhi	r2,3
   251e4:	110a3a17 	ldw	r4,10472(r2)
   251e8:	014000f4 	movhi	r5,3
   251ec:	29667f04 	addi	r5,r5,-26116
   251f0:	0025ba41 	jmpi	25ba4 <_fwalk_reent>

000251f4 <__sinit>:
   251f4:	20800e17 	ldw	r2,56(r4)
   251f8:	10000126 	beq	r2,zero,25200 <__sinit+0xc>
   251fc:	f800283a 	ret
   25200:	0024edc1 	jmpi	24edc <__sinit.part.0>

00025204 <__sfp_lock_acquire>:
   25204:	f800283a 	ret

00025208 <__sfp_lock_release>:
   25208:	f800283a 	ret

0002520c <__sinit_lock_acquire>:
   2520c:	f800283a 	ret

00025210 <__sinit_lock_release>:
   25210:	f800283a 	ret

00025214 <__fp_lock_all>:
   25214:	008000f4 	movhi	r2,3
   25218:	110a3b17 	ldw	r4,10476(r2)
   2521c:	014000b4 	movhi	r5,2
   25220:	2953b004 	addi	r5,r5,20160
   25224:	0025b0c1 	jmpi	25b0c <_fwalk>

00025228 <__fp_unlock_all>:
   25228:	008000f4 	movhi	r2,3
   2522c:	110a3b17 	ldw	r4,10476(r2)
   25230:	014000b4 	movhi	r5,2
   25234:	2953b504 	addi	r5,r5,20180
   25238:	0025b0c1 	jmpi	25b0c <_fwalk>

0002523c <_malloc_trim_r>:
   2523c:	defffa04 	addi	sp,sp,-24
   25240:	dcc00315 	stw	r19,12(sp)
   25244:	04c000f4 	movhi	r19,3
   25248:	dd000415 	stw	r20,16(sp)
   2524c:	dc800215 	stw	r18,8(sp)
   25250:	dc400115 	stw	r17,4(sp)
   25254:	dc000015 	stw	r16,0(sp)
   25258:	2829883a 	mov	r20,r5
   2525c:	dfc00515 	stw	ra,20(sp)
   25260:	9cc44504 	addi	r19,r19,4372
   25264:	2025883a 	mov	r18,r4
   25268:	002e0c00 	call	2e0c0 <__malloc_lock>
   2526c:	98800217 	ldw	r2,8(r19)
   25270:	14400117 	ldw	r17,4(r2)
   25274:	00bfff04 	movi	r2,-4
   25278:	88a2703a 	and	r17,r17,r2
   2527c:	8c03fbc4 	addi	r16,r17,4079
   25280:	8521c83a 	sub	r16,r16,r20
   25284:	8020d33a 	srli	r16,r16,12
   25288:	843fffc4 	addi	r16,r16,-1
   2528c:	8020933a 	slli	r16,r16,12
   25290:	80840008 	cmpgei	r2,r16,4096
   25294:	10000626 	beq	r2,zero,252b0 <_malloc_trim_r+0x74>
   25298:	000b883a 	mov	r5,zero
   2529c:	9009883a 	mov	r4,r18
   252a0:	00281840 	call	28184 <_sbrk_r>
   252a4:	98c00217 	ldw	r3,8(r19)
   252a8:	1c47883a 	add	r3,r3,r17
   252ac:	10c00b26 	beq	r2,r3,252dc <_malloc_trim_r+0xa0>
   252b0:	9009883a 	mov	r4,r18
   252b4:	002e0e40 	call	2e0e4 <__malloc_unlock>
   252b8:	0005883a 	mov	r2,zero
   252bc:	dfc00517 	ldw	ra,20(sp)
   252c0:	dd000417 	ldw	r20,16(sp)
   252c4:	dcc00317 	ldw	r19,12(sp)
   252c8:	dc800217 	ldw	r18,8(sp)
   252cc:	dc400117 	ldw	r17,4(sp)
   252d0:	dc000017 	ldw	r16,0(sp)
   252d4:	dec00604 	addi	sp,sp,24
   252d8:	f800283a 	ret
   252dc:	040bc83a 	sub	r5,zero,r16
   252e0:	9009883a 	mov	r4,r18
   252e4:	00281840 	call	28184 <_sbrk_r>
   252e8:	10bfffd8 	cmpnei	r2,r2,-1
   252ec:	10000d26 	beq	r2,zero,25324 <_malloc_trim_r+0xe8>
   252f0:	008000f4 	movhi	r2,3
   252f4:	10916317 	ldw	r2,17804(r2)
   252f8:	98c00217 	ldw	r3,8(r19)
   252fc:	8c23c83a 	sub	r17,r17,r16
   25300:	8c400054 	ori	r17,r17,1
   25304:	1405c83a 	sub	r2,r2,r16
   25308:	1c400115 	stw	r17,4(r3)
   2530c:	9009883a 	mov	r4,r18
   25310:	00c000f4 	movhi	r3,3
   25314:	18916315 	stw	r2,17804(r3)
   25318:	002e0e40 	call	2e0e4 <__malloc_unlock>
   2531c:	00800044 	movi	r2,1
   25320:	003fe606 	br	252bc <_malloc_trim_r+0x80>
   25324:	000b883a 	mov	r5,zero
   25328:	9009883a 	mov	r4,r18
   2532c:	00281840 	call	28184 <_sbrk_r>
   25330:	99000217 	ldw	r4,8(r19)
   25334:	1107c83a 	sub	r3,r2,r4
   25338:	19400410 	cmplti	r5,r3,16
   2533c:	283fdc1e 	bne	r5,zero,252b0 <_malloc_trim_r+0x74>
   25340:	014000f4 	movhi	r5,3
   25344:	294a3c17 	ldw	r5,10480(r5)
   25348:	18c00054 	ori	r3,r3,1
   2534c:	20c00115 	stw	r3,4(r4)
   25350:	1145c83a 	sub	r2,r2,r5
   25354:	014000f4 	movhi	r5,3
   25358:	28916315 	stw	r2,17804(r5)
   2535c:	003fd406 	br	252b0 <_malloc_trim_r+0x74>

00025360 <_free_r>:
   25360:	28005f26 	beq	r5,zero,254e0 <_free_r+0x180>
   25364:	defffd04 	addi	sp,sp,-12
   25368:	dc400115 	stw	r17,4(sp)
   2536c:	dc000015 	stw	r16,0(sp)
   25370:	2023883a 	mov	r17,r4
   25374:	2821883a 	mov	r16,r5
   25378:	dfc00215 	stw	ra,8(sp)
   2537c:	002e0c00 	call	2e0c0 <__malloc_lock>
   25380:	81ffff17 	ldw	r7,-4(r16)
   25384:	00bfff84 	movi	r2,-2
   25388:	80fffe04 	addi	r3,r16,-8
   2538c:	3884703a 	and	r2,r7,r2
   25390:	018000f4 	movhi	r6,3
   25394:	1889883a 	add	r4,r3,r2
   25398:	31844504 	addi	r6,r6,4372
   2539c:	21400117 	ldw	r5,4(r4)
   253a0:	32000217 	ldw	r8,8(r6)
   253a4:	027fff04 	movi	r9,-4
   253a8:	2a4a703a 	and	r5,r5,r9
   253ac:	41006526 	beq	r8,r4,25544 <_free_r+0x1e4>
   253b0:	21400115 	stw	r5,4(r4)
   253b4:	39c0004c 	andi	r7,r7,1
   253b8:	2151883a 	add	r8,r4,r5
   253bc:	3800281e 	bne	r7,zero,25460 <_free_r+0x100>
   253c0:	82bffe17 	ldw	r10,-8(r16)
   253c4:	42000117 	ldw	r8,4(r8)
   253c8:	01c000f4 	movhi	r7,3
   253cc:	1a87c83a 	sub	r3,r3,r10
   253d0:	1a400217 	ldw	r9,8(r3)
   253d4:	39c44704 	addi	r7,r7,4380
   253d8:	1285883a 	add	r2,r2,r10
   253dc:	4200004c 	andi	r8,r8,1
   253e0:	49c04d26 	beq	r9,r7,25518 <_free_r+0x1b8>
   253e4:	1a800317 	ldw	r10,12(r3)
   253e8:	4a800315 	stw	r10,12(r9)
   253ec:	52400215 	stw	r9,8(r10)
   253f0:	40006926 	beq	r8,zero,25598 <_free_r+0x238>
   253f4:	11400054 	ori	r5,r2,1
   253f8:	19400115 	stw	r5,4(r3)
   253fc:	20800015 	stw	r2,0(r4)
   25400:	11008028 	cmpgeui	r4,r2,512
   25404:	20001e1e 	bne	r4,zero,25480 <_free_r+0x120>
   25408:	1008d0fa 	srli	r4,r2,3
   2540c:	100ad17a 	srli	r5,r2,5
   25410:	31c00117 	ldw	r7,4(r6)
   25414:	20800044 	addi	r2,r4,1
   25418:	100490fa 	slli	r2,r2,3
   2541c:	01000044 	movi	r4,1
   25420:	2148983a 	sll	r4,r4,r5
   25424:	3085883a 	add	r2,r6,r2
   25428:	11400017 	ldw	r5,0(r2)
   2542c:	21c8b03a 	or	r4,r4,r7
   25430:	11fffe04 	addi	r7,r2,-8
   25434:	19c00315 	stw	r7,12(r3)
   25438:	19400215 	stw	r5,8(r3)
   2543c:	31000115 	stw	r4,4(r6)
   25440:	10c00015 	stw	r3,0(r2)
   25444:	28c00315 	stw	r3,12(r5)
   25448:	8809883a 	mov	r4,r17
   2544c:	dfc00217 	ldw	ra,8(sp)
   25450:	dc400117 	ldw	r17,4(sp)
   25454:	dc000017 	ldw	r16,0(sp)
   25458:	dec00304 	addi	sp,sp,12
   2545c:	002e0e41 	jmpi	2e0e4 <__malloc_unlock>
   25460:	41c00117 	ldw	r7,4(r8)
   25464:	39c0004c 	andi	r7,r7,1
   25468:	38001e26 	beq	r7,zero,254e4 <_free_r+0x184>
   2546c:	11400054 	ori	r5,r2,1
   25470:	817fff15 	stw	r5,-4(r16)
   25474:	20800015 	stw	r2,0(r4)
   25478:	11008028 	cmpgeui	r4,r2,512
   2547c:	203fe226 	beq	r4,zero,25408 <_free_r+0xa8>
   25480:	1008d27a 	srli	r4,r2,9
   25484:	21400168 	cmpgeui	r5,r4,5
   25488:	2800451e 	bne	r5,zero,255a0 <_free_r+0x240>
   2548c:	1008d1ba 	srli	r4,r2,6
   25490:	21c00e44 	addi	r7,r4,57
   25494:	380e90fa 	slli	r7,r7,3
   25498:	21000e04 	addi	r4,r4,56
   2549c:	31cf883a 	add	r7,r6,r7
   254a0:	39400017 	ldw	r5,0(r7)
   254a4:	39fffe04 	addi	r7,r7,-8
   254a8:	39405326 	beq	r7,r5,255f8 <_free_r+0x298>
   254ac:	01bfff04 	movi	r6,-4
   254b0:	00000206 	br	254bc <_free_r+0x15c>
   254b4:	29400217 	ldw	r5,8(r5)
   254b8:	39400326 	beq	r7,r5,254c8 <_free_r+0x168>
   254bc:	29000117 	ldw	r4,4(r5)
   254c0:	2188703a 	and	r4,r4,r6
   254c4:	113ffb36 	bltu	r2,r4,254b4 <_free_r+0x154>
   254c8:	29c00317 	ldw	r7,12(r5)
   254cc:	19c00315 	stw	r7,12(r3)
   254d0:	19400215 	stw	r5,8(r3)
   254d4:	38c00215 	stw	r3,8(r7)
   254d8:	28c00315 	stw	r3,12(r5)
   254dc:	003fda06 	br	25448 <_free_r+0xe8>
   254e0:	f800283a 	ret
   254e4:	01c000f4 	movhi	r7,3
   254e8:	1145883a 	add	r2,r2,r5
   254ec:	39c44704 	addi	r7,r7,4380
   254f0:	21400217 	ldw	r5,8(r4)
   254f4:	29c03726 	beq	r5,r7,255d4 <_free_r+0x274>
   254f8:	22000317 	ldw	r8,12(r4)
   254fc:	11c00054 	ori	r7,r2,1
   25500:	1889883a 	add	r4,r3,r2
   25504:	2a000315 	stw	r8,12(r5)
   25508:	41400215 	stw	r5,8(r8)
   2550c:	19c00115 	stw	r7,4(r3)
   25510:	20800015 	stw	r2,0(r4)
   25514:	003fba06 	br	25400 <_free_r+0xa0>
   25518:	40004f1e 	bne	r8,zero,25658 <_free_r+0x2f8>
   2551c:	21800217 	ldw	r6,8(r4)
   25520:	21000317 	ldw	r4,12(r4)
   25524:	288b883a 	add	r5,r5,r2
   25528:	28800054 	ori	r2,r5,1
   2552c:	31000315 	stw	r4,12(r6)
   25530:	21800215 	stw	r6,8(r4)
   25534:	18800115 	stw	r2,4(r3)
   25538:	1947883a 	add	r3,r3,r5
   2553c:	19400015 	stw	r5,0(r3)
   25540:	003fc106 	br	25448 <_free_r+0xe8>
   25544:	39c0004c 	andi	r7,r7,1
   25548:	114b883a 	add	r5,r2,r5
   2554c:	3800071e 	bne	r7,zero,2556c <_free_r+0x20c>
   25550:	81fffe17 	ldw	r7,-8(r16)
   25554:	19c7c83a 	sub	r3,r3,r7
   25558:	18800317 	ldw	r2,12(r3)
   2555c:	19000217 	ldw	r4,8(r3)
   25560:	29cb883a 	add	r5,r5,r7
   25564:	20800315 	stw	r2,12(r4)
   25568:	11000215 	stw	r4,8(r2)
   2556c:	008000f4 	movhi	r2,3
   25570:	29000054 	ori	r4,r5,1
   25574:	108a3d17 	ldw	r2,10484(r2)
   25578:	19000115 	stw	r4,4(r3)
   2557c:	30c00215 	stw	r3,8(r6)
   25580:	28bfb136 	bltu	r5,r2,25448 <_free_r+0xe8>
   25584:	008000f4 	movhi	r2,3
   25588:	11515817 	ldw	r5,17760(r2)
   2558c:	8809883a 	mov	r4,r17
   25590:	002523c0 	call	2523c <_malloc_trim_r>
   25594:	003fac06 	br	25448 <_free_r+0xe8>
   25598:	1145883a 	add	r2,r2,r5
   2559c:	003fd406 	br	254f0 <_free_r+0x190>
   255a0:	21400568 	cmpgeui	r5,r4,21
   255a4:	28000726 	beq	r5,zero,255c4 <_free_r+0x264>
   255a8:	21401568 	cmpgeui	r5,r4,85
   255ac:	2800191e 	bne	r5,zero,25614 <_free_r+0x2b4>
   255b0:	1008d33a 	srli	r4,r2,12
   255b4:	21c01bc4 	addi	r7,r4,111
   255b8:	380e90fa 	slli	r7,r7,3
   255bc:	21001b84 	addi	r4,r4,110
   255c0:	003fb606 	br	2549c <_free_r+0x13c>
   255c4:	21c01704 	addi	r7,r4,92
   255c8:	380e90fa 	slli	r7,r7,3
   255cc:	210016c4 	addi	r4,r4,91
   255d0:	003fb206 	br	2549c <_free_r+0x13c>
   255d4:	30c00515 	stw	r3,20(r6)
   255d8:	30c00415 	stw	r3,16(r6)
   255dc:	11000054 	ori	r4,r2,1
   255e0:	19c00315 	stw	r7,12(r3)
   255e4:	19c00215 	stw	r7,8(r3)
   255e8:	19000115 	stw	r4,4(r3)
   255ec:	1887883a 	add	r3,r3,r2
   255f0:	18800015 	stw	r2,0(r3)
   255f4:	003f9406 	br	25448 <_free_r+0xe8>
   255f8:	2009d0ba 	srai	r4,r4,2
   255fc:	00800044 	movi	r2,1
   25600:	32000117 	ldw	r8,4(r6)
   25604:	1104983a 	sll	r2,r2,r4
   25608:	1204b03a 	or	r2,r2,r8
   2560c:	30800115 	stw	r2,4(r6)
   25610:	003fae06 	br	254cc <_free_r+0x16c>
   25614:	21405568 	cmpgeui	r5,r4,341
   25618:	2800051e 	bne	r5,zero,25630 <_free_r+0x2d0>
   2561c:	1008d3fa 	srli	r4,r2,15
   25620:	21c01e04 	addi	r7,r4,120
   25624:	380e90fa 	slli	r7,r7,3
   25628:	21001dc4 	addi	r4,r4,119
   2562c:	003f9b06 	br	2549c <_free_r+0x13c>
   25630:	21015568 	cmpgeui	r4,r4,1365
   25634:	2000051e 	bne	r4,zero,2564c <_free_r+0x2ec>
   25638:	1008d4ba 	srli	r4,r2,18
   2563c:	21c01f44 	addi	r7,r4,125
   25640:	380e90fa 	slli	r7,r7,3
   25644:	21001f04 	addi	r4,r4,124
   25648:	003f9406 	br	2549c <_free_r+0x13c>
   2564c:	01c0fe04 	movi	r7,1016
   25650:	01001f84 	movi	r4,126
   25654:	003f9106 	br	2549c <_free_r+0x13c>
   25658:	11400054 	ori	r5,r2,1
   2565c:	19400115 	stw	r5,4(r3)
   25660:	20800015 	stw	r2,0(r4)
   25664:	003f7806 	br	25448 <_free_r+0xe8>

00025668 <__sfvwrite_r>:
   25668:	30800217 	ldw	r2,8(r6)
   2566c:	1000c326 	beq	r2,zero,2597c <__sfvwrite_r+0x314>
   25670:	2a80030b 	ldhu	r10,12(r5)
   25674:	defff504 	addi	sp,sp,-44
   25678:	df000915 	stw	fp,36(sp)
   2567c:	dcc00415 	stw	r19,16(sp)
   25680:	dc000115 	stw	r16,4(sp)
   25684:	dfc00a15 	stw	ra,40(sp)
   25688:	ddc00815 	stw	r23,32(sp)
   2568c:	dd800715 	stw	r22,28(sp)
   25690:	dd400615 	stw	r21,24(sp)
   25694:	dd000515 	stw	r20,20(sp)
   25698:	dc800315 	stw	r18,12(sp)
   2569c:	dc400215 	stw	r17,8(sp)
   256a0:	5080020c 	andi	r2,r10,8
   256a4:	3039883a 	mov	fp,r6
   256a8:	2027883a 	mov	r19,r4
   256ac:	2821883a 	mov	r16,r5
   256b0:	10002226 	beq	r2,zero,2573c <__sfvwrite_r+0xd4>
   256b4:	28800417 	ldw	r2,16(r5)
   256b8:	10002026 	beq	r2,zero,2573c <__sfvwrite_r+0xd4>
   256bc:	5080008c 	andi	r2,r10,2
   256c0:	e4400017 	ldw	r17,0(fp)
   256c4:	10002526 	beq	r2,zero,2575c <__sfvwrite_r+0xf4>
   256c8:	80800917 	ldw	r2,36(r16)
   256cc:	81400717 	ldw	r5,28(r16)
   256d0:	05600034 	movhi	r21,32768
   256d4:	0029883a 	mov	r20,zero
   256d8:	0025883a 	mov	r18,zero
   256dc:	ad7f0004 	addi	r21,r21,-1024
   256e0:	a00d883a 	mov	r6,r20
   256e4:	9809883a 	mov	r4,r19
   256e8:	90001026 	beq	r18,zero,2572c <__sfvwrite_r+0xc4>
   256ec:	900f883a 	mov	r7,r18
   256f0:	ac80012e 	bgeu	r21,r18,256f8 <__sfvwrite_r+0x90>
   256f4:	a80f883a 	mov	r7,r21
   256f8:	103ee83a 	callr	r2
   256fc:	00809a0e 	bge	zero,r2,25968 <__sfvwrite_r+0x300>
   25700:	e0c00217 	ldw	r3,8(fp)
   25704:	a0a9883a 	add	r20,r20,r2
   25708:	90a5c83a 	sub	r18,r18,r2
   2570c:	1885c83a 	sub	r2,r3,r2
   25710:	e0800215 	stw	r2,8(fp)
   25714:	10008326 	beq	r2,zero,25924 <__sfvwrite_r+0x2bc>
   25718:	80800917 	ldw	r2,36(r16)
   2571c:	81400717 	ldw	r5,28(r16)
   25720:	a00d883a 	mov	r6,r20
   25724:	9809883a 	mov	r4,r19
   25728:	903ff01e 	bne	r18,zero,256ec <__sfvwrite_r+0x84>
   2572c:	8d000017 	ldw	r20,0(r17)
   25730:	8c800117 	ldw	r18,4(r17)
   25734:	8c400204 	addi	r17,r17,8
   25738:	003fe906 	br	256e0 <__sfvwrite_r+0x78>
   2573c:	800b883a 	mov	r5,r16
   25740:	9809883a 	mov	r4,r19
   25744:	00230a40 	call	230a4 <__swsetup_r>
   25748:	10008a1e 	bne	r2,zero,25974 <__sfvwrite_r+0x30c>
   2574c:	8280030b 	ldhu	r10,12(r16)
   25750:	e4400017 	ldw	r17,0(fp)
   25754:	5080008c 	andi	r2,r10,2
   25758:	103fdb1e 	bne	r2,zero,256c8 <__sfvwrite_r+0x60>
   2575c:	5080004c 	andi	r2,r10,1
   25760:	10004e1e 	bne	r2,zero,2589c <__sfvwrite_r+0x234>
   25764:	00a00034 	movhi	r2,32768
   25768:	81c00017 	ldw	r7,0(r16)
   2576c:	80c00217 	ldw	r3,8(r16)
   25770:	10bfffc4 	addi	r2,r2,-1
   25774:	002d883a 	mov	r22,zero
   25778:	0025883a 	mov	r18,zero
   2577c:	d8800015 	stw	r2,0(sp)
   25780:	3809883a 	mov	r4,r7
   25784:	1829883a 	mov	r20,r3
   25788:	90004026 	beq	r18,zero,2588c <__sfvwrite_r+0x224>
   2578c:	5080800c 	andi	r2,r10,512
   25790:	10009426 	beq	r2,zero,259e4 <__sfvwrite_r+0x37c>
   25794:	182b883a 	mov	r21,r3
   25798:	90c0b936 	bltu	r18,r3,25a80 <__sfvwrite_r+0x418>
   2579c:	5081200c 	andi	r2,r10,1152
   257a0:	10002426 	beq	r2,zero,25834 <__sfvwrite_r+0x1cc>
   257a4:	80800517 	ldw	r2,20(r16)
   257a8:	81000417 	ldw	r4,16(r16)
   257ac:	108000e4 	muli	r2,r2,3
   257b0:	392fc83a 	sub	r23,r7,r4
   257b4:	b8c00044 	addi	r3,r23,1
   257b8:	1012d7fa 	srli	r9,r2,31
   257bc:	1c87883a 	add	r3,r3,r18
   257c0:	4893883a 	add	r9,r9,r2
   257c4:	4829d07a 	srai	r20,r9,1
   257c8:	a00b883a 	mov	r5,r20
   257cc:	a0c0022e 	bgeu	r20,r3,257d8 <__sfvwrite_r+0x170>
   257d0:	1829883a 	mov	r20,r3
   257d4:	180b883a 	mov	r5,r3
   257d8:	5281000c 	andi	r10,r10,1024
   257dc:	5000b926 	beq	r10,zero,25ac4 <__sfvwrite_r+0x45c>
   257e0:	9809883a 	mov	r4,r19
   257e4:	0025e980 	call	25e98 <_malloc_r>
   257e8:	1000c426 	beq	r2,zero,25afc <__sfvwrite_r+0x494>
   257ec:	81400417 	ldw	r5,16(r16)
   257f0:	1009883a 	mov	r4,r2
   257f4:	b80d883a 	mov	r6,r23
   257f8:	002671c0 	call	2671c <memcpy>
   257fc:	1007883a 	mov	r3,r2
   25800:	8080030b 	ldhu	r2,12(r16)
   25804:	013edfc4 	movi	r4,-1153
   25808:	1104703a 	and	r2,r2,r4
   2580c:	10802014 	ori	r2,r2,128
   25810:	8080030d 	sth	r2,12(r16)
   25814:	a5cfc83a 	sub	r7,r20,r23
   25818:	1dc9883a 	add	r4,r3,r23
   2581c:	85000515 	stw	r20,20(r16)
   25820:	80c00415 	stw	r3,16(r16)
   25824:	81000015 	stw	r4,0(r16)
   25828:	9029883a 	mov	r20,r18
   2582c:	81c00215 	stw	r7,8(r16)
   25830:	902b883a 	mov	r21,r18
   25834:	a80d883a 	mov	r6,r21
   25838:	b00b883a 	mov	r5,r22
   2583c:	002681c0 	call	2681c <memmove>
   25840:	80c00217 	ldw	r3,8(r16)
   25844:	81c00017 	ldw	r7,0(r16)
   25848:	902f883a 	mov	r23,r18
   2584c:	1d07c83a 	sub	r3,r3,r20
   25850:	3d4d883a 	add	r6,r7,r21
   25854:	80c00215 	stw	r3,8(r16)
   25858:	81800015 	stw	r6,0(r16)
   2585c:	0025883a 	mov	r18,zero
   25860:	e0800217 	ldw	r2,8(fp)
   25864:	b5ed883a 	add	r22,r22,r23
   25868:	15c5c83a 	sub	r2,r2,r23
   2586c:	e0800215 	stw	r2,8(fp)
   25870:	10002c26 	beq	r2,zero,25924 <__sfvwrite_r+0x2bc>
   25874:	81c00017 	ldw	r7,0(r16)
   25878:	80c00217 	ldw	r3,8(r16)
   2587c:	8280030b 	ldhu	r10,12(r16)
   25880:	3809883a 	mov	r4,r7
   25884:	1829883a 	mov	r20,r3
   25888:	903fc01e 	bne	r18,zero,2578c <__sfvwrite_r+0x124>
   2588c:	8d800017 	ldw	r22,0(r17)
   25890:	8c800117 	ldw	r18,4(r17)
   25894:	8c400204 	addi	r17,r17,8
   25898:	003fb906 	br	25780 <__sfvwrite_r+0x118>
   2589c:	002f883a 	mov	r23,zero
   258a0:	0005883a 	mov	r2,zero
   258a4:	002b883a 	mov	r21,zero
   258a8:	0029883a 	mov	r20,zero
   258ac:	a0003526 	beq	r20,zero,25984 <__sfvwrite_r+0x31c>
   258b0:	10003926 	beq	r2,zero,25998 <__sfvwrite_r+0x330>
   258b4:	b805883a 	mov	r2,r23
   258b8:	a02d883a 	mov	r22,r20
   258bc:	1500012e 	bgeu	r2,r20,258c4 <__sfvwrite_r+0x25c>
   258c0:	102d883a 	mov	r22,r2
   258c4:	81000017 	ldw	r4,0(r16)
   258c8:	80800417 	ldw	r2,16(r16)
   258cc:	84800217 	ldw	r18,8(r16)
   258d0:	81c00517 	ldw	r7,20(r16)
   258d4:	1100022e 	bgeu	r2,r4,258e0 <__sfvwrite_r+0x278>
   258d8:	91e5883a 	add	r18,r18,r7
   258dc:	95803616 	blt	r18,r22,259b8 <__sfvwrite_r+0x350>
   258e0:	b1c06a16 	blt	r22,r7,25a8c <__sfvwrite_r+0x424>
   258e4:	80800917 	ldw	r2,36(r16)
   258e8:	81400717 	ldw	r5,28(r16)
   258ec:	a80d883a 	mov	r6,r21
   258f0:	9809883a 	mov	r4,r19
   258f4:	103ee83a 	callr	r2
   258f8:	1025883a 	mov	r18,r2
   258fc:	00801a0e 	bge	zero,r2,25968 <__sfvwrite_r+0x300>
   25900:	bcafc83a 	sub	r23,r23,r18
   25904:	b8001426 	beq	r23,zero,25958 <__sfvwrite_r+0x2f0>
   25908:	00800044 	movi	r2,1
   2590c:	e0c00217 	ldw	r3,8(fp)
   25910:	acab883a 	add	r21,r21,r18
   25914:	a4a9c83a 	sub	r20,r20,r18
   25918:	1c87c83a 	sub	r3,r3,r18
   2591c:	e0c00215 	stw	r3,8(fp)
   25920:	183fe21e 	bne	r3,zero,258ac <__sfvwrite_r+0x244>
   25924:	0005883a 	mov	r2,zero
   25928:	dfc00a17 	ldw	ra,40(sp)
   2592c:	df000917 	ldw	fp,36(sp)
   25930:	ddc00817 	ldw	r23,32(sp)
   25934:	dd800717 	ldw	r22,28(sp)
   25938:	dd400617 	ldw	r21,24(sp)
   2593c:	dd000517 	ldw	r20,20(sp)
   25940:	dcc00417 	ldw	r19,16(sp)
   25944:	dc800317 	ldw	r18,12(sp)
   25948:	dc400217 	ldw	r17,8(sp)
   2594c:	dc000117 	ldw	r16,4(sp)
   25950:	dec00b04 	addi	sp,sp,44
   25954:	f800283a 	ret
   25958:	800b883a 	mov	r5,r16
   2595c:	9809883a 	mov	r4,r19
   25960:	0024ddc0 	call	24ddc <_fflush_r>
   25964:	103fe926 	beq	r2,zero,2590c <__sfvwrite_r+0x2a4>
   25968:	8080030b 	ldhu	r2,12(r16)
   2596c:	10801014 	ori	r2,r2,64
   25970:	8080030d 	sth	r2,12(r16)
   25974:	00bfffc4 	movi	r2,-1
   25978:	003feb06 	br	25928 <__sfvwrite_r+0x2c0>
   2597c:	0005883a 	mov	r2,zero
   25980:	f800283a 	ret
   25984:	8d000117 	ldw	r20,4(r17)
   25988:	8805883a 	mov	r2,r17
   2598c:	8c400204 	addi	r17,r17,8
   25990:	a03ffc26 	beq	r20,zero,25984 <__sfvwrite_r+0x31c>
   25994:	15400017 	ldw	r21,0(r2)
   25998:	a00d883a 	mov	r6,r20
   2599c:	01400284 	movi	r5,10
   259a0:	a809883a 	mov	r4,r21
   259a4:	002664c0 	call	2664c <memchr>
   259a8:	10004326 	beq	r2,zero,25ab8 <__sfvwrite_r+0x450>
   259ac:	10800044 	addi	r2,r2,1
   259b0:	156fc83a 	sub	r23,r2,r21
   259b4:	003fbf06 	br	258b4 <__sfvwrite_r+0x24c>
   259b8:	a80b883a 	mov	r5,r21
   259bc:	900d883a 	mov	r6,r18
   259c0:	002681c0 	call	2681c <memmove>
   259c4:	80800017 	ldw	r2,0(r16)
   259c8:	800b883a 	mov	r5,r16
   259cc:	9809883a 	mov	r4,r19
   259d0:	1485883a 	add	r2,r2,r18
   259d4:	80800015 	stw	r2,0(r16)
   259d8:	0024ddc0 	call	24ddc <_fflush_r>
   259dc:	103fc826 	beq	r2,zero,25900 <__sfvwrite_r+0x298>
   259e0:	003fe106 	br	25968 <__sfvwrite_r+0x300>
   259e4:	80800417 	ldw	r2,16(r16)
   259e8:	11c01236 	bltu	r2,r7,25a34 <__sfvwrite_r+0x3cc>
   259ec:	81400517 	ldw	r5,20(r16)
   259f0:	91401036 	bltu	r18,r5,25a34 <__sfvwrite_r+0x3cc>
   259f4:	00a00034 	movhi	r2,32768
   259f8:	902f883a 	mov	r23,r18
   259fc:	90800136 	bltu	r18,r2,25a04 <__sfvwrite_r+0x39c>
   25a00:	ddc00017 	ldw	r23,0(sp)
   25a04:	b809883a 	mov	r4,r23
   25a08:	00209080 	call	20908 <__modsi3>
   25a0c:	80c00917 	ldw	r3,36(r16)
   25a10:	81400717 	ldw	r5,28(r16)
   25a14:	b88fc83a 	sub	r7,r23,r2
   25a18:	b00d883a 	mov	r6,r22
   25a1c:	9809883a 	mov	r4,r19
   25a20:	183ee83a 	callr	r3
   25a24:	102f883a 	mov	r23,r2
   25a28:	00bfcf0e 	bge	zero,r2,25968 <__sfvwrite_r+0x300>
   25a2c:	95e5c83a 	sub	r18,r18,r23
   25a30:	003f8b06 	br	25860 <__sfvwrite_r+0x1f8>
   25a34:	182f883a 	mov	r23,r3
   25a38:	90c0012e 	bgeu	r18,r3,25a40 <__sfvwrite_r+0x3d8>
   25a3c:	902f883a 	mov	r23,r18
   25a40:	3809883a 	mov	r4,r7
   25a44:	b80d883a 	mov	r6,r23
   25a48:	b00b883a 	mov	r5,r22
   25a4c:	002681c0 	call	2681c <memmove>
   25a50:	80c00217 	ldw	r3,8(r16)
   25a54:	81c00017 	ldw	r7,0(r16)
   25a58:	1dc7c83a 	sub	r3,r3,r23
   25a5c:	3dcf883a 	add	r7,r7,r23
   25a60:	80c00215 	stw	r3,8(r16)
   25a64:	81c00015 	stw	r7,0(r16)
   25a68:	183ff01e 	bne	r3,zero,25a2c <__sfvwrite_r+0x3c4>
   25a6c:	800b883a 	mov	r5,r16
   25a70:	9809883a 	mov	r4,r19
   25a74:	0024ddc0 	call	24ddc <_fflush_r>
   25a78:	103fec26 	beq	r2,zero,25a2c <__sfvwrite_r+0x3c4>
   25a7c:	003fba06 	br	25968 <__sfvwrite_r+0x300>
   25a80:	9029883a 	mov	r20,r18
   25a84:	902b883a 	mov	r21,r18
   25a88:	003f6a06 	br	25834 <__sfvwrite_r+0x1cc>
   25a8c:	b00d883a 	mov	r6,r22
   25a90:	a80b883a 	mov	r5,r21
   25a94:	002681c0 	call	2681c <memmove>
   25a98:	80c00217 	ldw	r3,8(r16)
   25a9c:	80800017 	ldw	r2,0(r16)
   25aa0:	b025883a 	mov	r18,r22
   25aa4:	1d87c83a 	sub	r3,r3,r22
   25aa8:	1585883a 	add	r2,r2,r22
   25aac:	80c00215 	stw	r3,8(r16)
   25ab0:	80800015 	stw	r2,0(r16)
   25ab4:	003f9206 	br	25900 <__sfvwrite_r+0x298>
   25ab8:	a0800044 	addi	r2,r20,1
   25abc:	102f883a 	mov	r23,r2
   25ac0:	003f7d06 	br	258b8 <__sfvwrite_r+0x250>
   25ac4:	280d883a 	mov	r6,r5
   25ac8:	200b883a 	mov	r5,r4
   25acc:	9809883a 	mov	r4,r19
   25ad0:	0027b900 	call	27b90 <_realloc_r>
   25ad4:	1007883a 	mov	r3,r2
   25ad8:	103f4e1e 	bne	r2,zero,25814 <__sfvwrite_r+0x1ac>
   25adc:	81400417 	ldw	r5,16(r16)
   25ae0:	9809883a 	mov	r4,r19
   25ae4:	00253600 	call	25360 <_free_r>
   25ae8:	8080030b 	ldhu	r2,12(r16)
   25aec:	00c00304 	movi	r3,12
   25af0:	98c00015 	stw	r3,0(r19)
   25af4:	10bfdfcc 	andi	r2,r2,65407
   25af8:	003f9c06 	br	2596c <__sfvwrite_r+0x304>
   25afc:	00c00304 	movi	r3,12
   25b00:	8080030b 	ldhu	r2,12(r16)
   25b04:	98c00015 	stw	r3,0(r19)
   25b08:	003f9806 	br	2596c <__sfvwrite_r+0x304>

00025b0c <_fwalk>:
   25b0c:	defffa04 	addi	sp,sp,-24
   25b10:	dd000415 	stw	r20,16(sp)
   25b14:	dcc00315 	stw	r19,12(sp)
   25b18:	dc800215 	stw	r18,8(sp)
   25b1c:	dfc00515 	stw	ra,20(sp)
   25b20:	dc400115 	stw	r17,4(sp)
   25b24:	dc000015 	stw	r16,0(sp)
   25b28:	2827883a 	mov	r19,r5
   25b2c:	2480b804 	addi	r18,r4,736
   25b30:	0029883a 	mov	r20,zero
   25b34:	94400117 	ldw	r17,4(r18)
   25b38:	94000217 	ldw	r16,8(r18)
   25b3c:	8c7fffc4 	addi	r17,r17,-1
   25b40:	88000d16 	blt	r17,zero,25b78 <_fwalk+0x6c>
   25b44:	8080030b 	ldhu	r2,12(r16)
   25b48:	8c7fffc4 	addi	r17,r17,-1
   25b4c:	108000b0 	cmpltui	r2,r2,2
   25b50:	1000061e 	bne	r2,zero,25b6c <_fwalk+0x60>
   25b54:	8080038f 	ldh	r2,14(r16)
   25b58:	8009883a 	mov	r4,r16
   25b5c:	10bfffe0 	cmpeqi	r2,r2,-1
   25b60:	1000021e 	bne	r2,zero,25b6c <_fwalk+0x60>
   25b64:	983ee83a 	callr	r19
   25b68:	a0a8b03a 	or	r20,r20,r2
   25b6c:	88bfffd8 	cmpnei	r2,r17,-1
   25b70:	84001a04 	addi	r16,r16,104
   25b74:	103ff31e 	bne	r2,zero,25b44 <_fwalk+0x38>
   25b78:	94800017 	ldw	r18,0(r18)
   25b7c:	903fed1e 	bne	r18,zero,25b34 <_fwalk+0x28>
   25b80:	a005883a 	mov	r2,r20
   25b84:	dfc00517 	ldw	ra,20(sp)
   25b88:	dd000417 	ldw	r20,16(sp)
   25b8c:	dcc00317 	ldw	r19,12(sp)
   25b90:	dc800217 	ldw	r18,8(sp)
   25b94:	dc400117 	ldw	r17,4(sp)
   25b98:	dc000017 	ldw	r16,0(sp)
   25b9c:	dec00604 	addi	sp,sp,24
   25ba0:	f800283a 	ret

00025ba4 <_fwalk_reent>:
   25ba4:	defff904 	addi	sp,sp,-28
   25ba8:	dd400515 	stw	r21,20(sp)
   25bac:	dd000415 	stw	r20,16(sp)
   25bb0:	dcc00315 	stw	r19,12(sp)
   25bb4:	dc800215 	stw	r18,8(sp)
   25bb8:	dfc00615 	stw	ra,24(sp)
   25bbc:	dc400115 	stw	r17,4(sp)
   25bc0:	dc000015 	stw	r16,0(sp)
   25bc4:	2025883a 	mov	r18,r4
   25bc8:	2829883a 	mov	r20,r5
   25bcc:	24c0b804 	addi	r19,r4,736
   25bd0:	002b883a 	mov	r21,zero
   25bd4:	9c400117 	ldw	r17,4(r19)
   25bd8:	9c000217 	ldw	r16,8(r19)
   25bdc:	8c7fffc4 	addi	r17,r17,-1
   25be0:	88000e16 	blt	r17,zero,25c1c <_fwalk_reent+0x78>
   25be4:	8080030b 	ldhu	r2,12(r16)
   25be8:	8c7fffc4 	addi	r17,r17,-1
   25bec:	108000b0 	cmpltui	r2,r2,2
   25bf0:	1000071e 	bne	r2,zero,25c10 <_fwalk_reent+0x6c>
   25bf4:	8080038f 	ldh	r2,14(r16)
   25bf8:	800b883a 	mov	r5,r16
   25bfc:	9009883a 	mov	r4,r18
   25c00:	10bfffe0 	cmpeqi	r2,r2,-1
   25c04:	1000021e 	bne	r2,zero,25c10 <_fwalk_reent+0x6c>
   25c08:	a03ee83a 	callr	r20
   25c0c:	a8aab03a 	or	r21,r21,r2
   25c10:	88bfffd8 	cmpnei	r2,r17,-1
   25c14:	84001a04 	addi	r16,r16,104
   25c18:	103ff21e 	bne	r2,zero,25be4 <_fwalk_reent+0x40>
   25c1c:	9cc00017 	ldw	r19,0(r19)
   25c20:	983fec1e 	bne	r19,zero,25bd4 <_fwalk_reent+0x30>
   25c24:	a805883a 	mov	r2,r21
   25c28:	dfc00617 	ldw	ra,24(sp)
   25c2c:	dd400517 	ldw	r21,20(sp)
   25c30:	dd000417 	ldw	r20,16(sp)
   25c34:	dcc00317 	ldw	r19,12(sp)
   25c38:	dc800217 	ldw	r18,8(sp)
   25c3c:	dc400117 	ldw	r17,4(sp)
   25c40:	dc000017 	ldw	r16,0(sp)
   25c44:	dec00704 	addi	sp,sp,28
   25c48:	f800283a 	ret

00025c4c <__localeconv_l>:
   25c4c:	20803c04 	addi	r2,r4,240
   25c50:	f800283a 	ret

00025c54 <_localeconv_r>:
   25c54:	008000f4 	movhi	r2,3
   25c58:	10858304 	addi	r2,r2,5644
   25c5c:	f800283a 	ret

00025c60 <localeconv>:
   25c60:	008000f4 	movhi	r2,3
   25c64:	10858304 	addi	r2,r2,5644
   25c68:	f800283a 	ret

00025c6c <__smakebuf_r>:
   25c6c:	2880030b 	ldhu	r2,12(r5)
   25c70:	deffe804 	addi	sp,sp,-96
   25c74:	dc001215 	stw	r16,72(sp)
   25c78:	dfc01715 	stw	ra,92(sp)
   25c7c:	dd001615 	stw	r20,88(sp)
   25c80:	dcc01515 	stw	r19,84(sp)
   25c84:	dc801415 	stw	r18,80(sp)
   25c88:	dc401315 	stw	r17,76(sp)
   25c8c:	10c0008c 	andi	r3,r2,2
   25c90:	2821883a 	mov	r16,r5
   25c94:	18000d26 	beq	r3,zero,25ccc <__smakebuf_r+0x60>
   25c98:	288010c4 	addi	r2,r5,67
   25c9c:	28800015 	stw	r2,0(r5)
   25ca0:	28800415 	stw	r2,16(r5)
   25ca4:	00800044 	movi	r2,1
   25ca8:	28800515 	stw	r2,20(r5)
   25cac:	dfc01717 	ldw	ra,92(sp)
   25cb0:	dd001617 	ldw	r20,88(sp)
   25cb4:	dcc01517 	ldw	r19,84(sp)
   25cb8:	dc801417 	ldw	r18,80(sp)
   25cbc:	dc401317 	ldw	r17,76(sp)
   25cc0:	dc001217 	ldw	r16,72(sp)
   25cc4:	dec01804 	addi	sp,sp,96
   25cc8:	f800283a 	ret
   25ccc:	2940038f 	ldh	r5,14(r5)
   25cd0:	2023883a 	mov	r17,r4
   25cd4:	28002816 	blt	r5,zero,25d78 <__smakebuf_r+0x10c>
   25cd8:	d80d883a 	mov	r6,sp
   25cdc:	0029d5c0 	call	29d5c <_fstat_r>
   25ce0:	10002416 	blt	r2,zero,25d74 <__smakebuf_r+0x108>
   25ce4:	d8800117 	ldw	r2,4(sp)
   25ce8:	10bc000c 	andi	r2,r2,61440
   25cec:	10880018 	cmpnei	r2,r2,8192
   25cf0:	1000421e 	bne	r2,zero,25dfc <__smakebuf_r+0x190>
   25cf4:	8140038f 	ldh	r5,14(r16)
   25cf8:	8809883a 	mov	r4,r17
   25cfc:	0029dbc0 	call	29dbc <_isatty_r>
   25d00:	10000826 	beq	r2,zero,25d24 <__smakebuf_r+0xb8>
   25d04:	8080030b 	ldhu	r2,12(r16)
   25d08:	80c010c4 	addi	r3,r16,67
   25d0c:	80c00015 	stw	r3,0(r16)
   25d10:	10800054 	ori	r2,r2,1
   25d14:	8080030d 	sth	r2,12(r16)
   25d18:	00800044 	movi	r2,1
   25d1c:	80c00415 	stw	r3,16(r16)
   25d20:	80800515 	stw	r2,20(r16)
   25d24:	04c00044 	movi	r19,1
   25d28:	05010004 	movi	r20,1024
   25d2c:	04820004 	movi	r18,2048
   25d30:	a00b883a 	mov	r5,r20
   25d34:	8809883a 	mov	r4,r17
   25d38:	0025e980 	call	25e98 <_malloc_r>
   25d3c:	10001726 	beq	r2,zero,25d9c <__smakebuf_r+0x130>
   25d40:	80c0030b 	ldhu	r3,12(r16)
   25d44:	010000b4 	movhi	r4,2
   25d48:	2113b204 	addi	r4,r4,20168
   25d4c:	89000f15 	stw	r4,60(r17)
   25d50:	18c02014 	ori	r3,r3,128
   25d54:	80c0030d 	sth	r3,12(r16)
   25d58:	80800015 	stw	r2,0(r16)
   25d5c:	80800415 	stw	r2,16(r16)
   25d60:	85000515 	stw	r20,20(r16)
   25d64:	98001d1e 	bne	r19,zero,25ddc <__smakebuf_r+0x170>
   25d68:	90e4b03a 	or	r18,r18,r3
   25d6c:	8480030d 	sth	r18,12(r16)
   25d70:	003fce06 	br	25cac <__smakebuf_r+0x40>
   25d74:	8080030b 	ldhu	r2,12(r16)
   25d78:	1080200c 	andi	r2,r2,128
   25d7c:	0027883a 	mov	r19,zero
   25d80:	10001326 	beq	r2,zero,25dd0 <__smakebuf_r+0x164>
   25d84:	05001004 	movi	r20,64
   25d88:	a00b883a 	mov	r5,r20
   25d8c:	8809883a 	mov	r4,r17
   25d90:	0025883a 	mov	r18,zero
   25d94:	0025e980 	call	25e98 <_malloc_r>
   25d98:	103fe91e 	bne	r2,zero,25d40 <__smakebuf_r+0xd4>
   25d9c:	8080030b 	ldhu	r2,12(r16)
   25da0:	10c0800c 	andi	r3,r2,512
   25da4:	183fc11e 	bne	r3,zero,25cac <__smakebuf_r+0x40>
   25da8:	00ffff04 	movi	r3,-4
   25dac:	10c4703a 	and	r2,r2,r3
   25db0:	10800094 	ori	r2,r2,2
   25db4:	80c010c4 	addi	r3,r16,67
   25db8:	8080030d 	sth	r2,12(r16)
   25dbc:	00800044 	movi	r2,1
   25dc0:	80c00015 	stw	r3,0(r16)
   25dc4:	80c00415 	stw	r3,16(r16)
   25dc8:	80800515 	stw	r2,20(r16)
   25dcc:	003fb706 	br	25cac <__smakebuf_r+0x40>
   25dd0:	05010004 	movi	r20,1024
   25dd4:	0025883a 	mov	r18,zero
   25dd8:	003fd506 	br	25d30 <__smakebuf_r+0xc4>
   25ddc:	8140038f 	ldh	r5,14(r16)
   25de0:	8809883a 	mov	r4,r17
   25de4:	0029dbc0 	call	29dbc <_isatty_r>
   25de8:	80c0030b 	ldhu	r3,12(r16)
   25dec:	103fde26 	beq	r2,zero,25d68 <__smakebuf_r+0xfc>
   25df0:	18ffff0c 	andi	r3,r3,65532
   25df4:	18c00054 	ori	r3,r3,1
   25df8:	003fdb06 	br	25d68 <__smakebuf_r+0xfc>
   25dfc:	0027883a 	mov	r19,zero
   25e00:	05010004 	movi	r20,1024
   25e04:	04820004 	movi	r18,2048
   25e08:	003fc906 	br	25d30 <__smakebuf_r+0xc4>

00025e0c <__swhatbuf_r>:
   25e0c:	deffea04 	addi	sp,sp,-88
   25e10:	dc001215 	stw	r16,72(sp)
   25e14:	2821883a 	mov	r16,r5
   25e18:	2940038f 	ldh	r5,14(r5)
   25e1c:	dc801415 	stw	r18,80(sp)
   25e20:	dc401315 	stw	r17,76(sp)
   25e24:	dfc01515 	stw	ra,84(sp)
   25e28:	3023883a 	mov	r17,r6
   25e2c:	3825883a 	mov	r18,r7
   25e30:	28001016 	blt	r5,zero,25e74 <__swhatbuf_r+0x68>
   25e34:	d80d883a 	mov	r6,sp
   25e38:	0029d5c0 	call	29d5c <_fstat_r>
   25e3c:	10000d16 	blt	r2,zero,25e74 <__swhatbuf_r+0x68>
   25e40:	d8c00117 	ldw	r3,4(sp)
   25e44:	01010004 	movi	r4,1024
   25e48:	00820004 	movi	r2,2048
   25e4c:	18fc000c 	andi	r3,r3,61440
   25e50:	18c80020 	cmpeqi	r3,r3,8192
   25e54:	90c00015 	stw	r3,0(r18)
   25e58:	89000015 	stw	r4,0(r17)
   25e5c:	dfc01517 	ldw	ra,84(sp)
   25e60:	dc801417 	ldw	r18,80(sp)
   25e64:	dc401317 	ldw	r17,76(sp)
   25e68:	dc001217 	ldw	r16,72(sp)
   25e6c:	dec01604 	addi	sp,sp,88
   25e70:	f800283a 	ret
   25e74:	8080030b 	ldhu	r2,12(r16)
   25e78:	0007883a 	mov	r3,zero
   25e7c:	1080200c 	andi	r2,r2,128
   25e80:	10000326 	beq	r2,zero,25e90 <__swhatbuf_r+0x84>
   25e84:	01001004 	movi	r4,64
   25e88:	0005883a 	mov	r2,zero
   25e8c:	003ff106 	br	25e54 <__swhatbuf_r+0x48>
   25e90:	01010004 	movi	r4,1024
   25e94:	003fef06 	br	25e54 <__swhatbuf_r+0x48>

00025e98 <_malloc_r>:
   25e98:	defff604 	addi	sp,sp,-40
   25e9c:	dc400115 	stw	r17,4(sp)
   25ea0:	2c4002c4 	addi	r17,r5,11
   25ea4:	dc800215 	stw	r18,8(sp)
   25ea8:	dfc00915 	stw	ra,36(sp)
   25eac:	df000815 	stw	fp,32(sp)
   25eb0:	ddc00715 	stw	r23,28(sp)
   25eb4:	dd800615 	stw	r22,24(sp)
   25eb8:	dd400515 	stw	r21,20(sp)
   25ebc:	dd000415 	stw	r20,16(sp)
   25ec0:	dcc00315 	stw	r19,12(sp)
   25ec4:	dc000015 	stw	r16,0(sp)
   25ec8:	888005e8 	cmpgeui	r2,r17,23
   25ecc:	2025883a 	mov	r18,r4
   25ed0:	1000261e 	bne	r2,zero,25f6c <_malloc_r+0xd4>
   25ed4:	29400468 	cmpgeui	r5,r5,17
   25ed8:	28008d1e 	bne	r5,zero,26110 <_malloc_r+0x278>
   25edc:	002e0c00 	call	2e0c0 <__malloc_lock>
   25ee0:	04400404 	movi	r17,16
   25ee4:	00800604 	movi	r2,24
   25ee8:	01c00084 	movi	r7,2
   25eec:	04c000f4 	movhi	r19,3
   25ef0:	9cc44504 	addi	r19,r19,4372
   25ef4:	9885883a 	add	r2,r19,r2
   25ef8:	14000117 	ldw	r16,4(r2)
   25efc:	10fffe04 	addi	r3,r2,-8
   25f00:	80c0cb26 	beq	r16,r3,26230 <_malloc_r+0x398>
   25f04:	80800117 	ldw	r2,4(r16)
   25f08:	81000317 	ldw	r4,12(r16)
   25f0c:	00ffff04 	movi	r3,-4
   25f10:	10c4703a 	and	r2,r2,r3
   25f14:	81400217 	ldw	r5,8(r16)
   25f18:	8085883a 	add	r2,r16,r2
   25f1c:	10c00117 	ldw	r3,4(r2)
   25f20:	29000315 	stw	r4,12(r5)
   25f24:	21400215 	stw	r5,8(r4)
   25f28:	18c00054 	ori	r3,r3,1
   25f2c:	10c00115 	stw	r3,4(r2)
   25f30:	9009883a 	mov	r4,r18
   25f34:	002e0e40 	call	2e0e4 <__malloc_unlock>
   25f38:	80800204 	addi	r2,r16,8
   25f3c:	dfc00917 	ldw	ra,36(sp)
   25f40:	df000817 	ldw	fp,32(sp)
   25f44:	ddc00717 	ldw	r23,28(sp)
   25f48:	dd800617 	ldw	r22,24(sp)
   25f4c:	dd400517 	ldw	r21,20(sp)
   25f50:	dd000417 	ldw	r20,16(sp)
   25f54:	dcc00317 	ldw	r19,12(sp)
   25f58:	dc800217 	ldw	r18,8(sp)
   25f5c:	dc400117 	ldw	r17,4(sp)
   25f60:	dc000017 	ldw	r16,0(sp)
   25f64:	dec00a04 	addi	sp,sp,40
   25f68:	f800283a 	ret
   25f6c:	00bffe04 	movi	r2,-8
   25f70:	88a2703a 	and	r17,r17,r2
   25f74:	88006616 	blt	r17,zero,26110 <_malloc_r+0x278>
   25f78:	89406536 	bltu	r17,r5,26110 <_malloc_r+0x278>
   25f7c:	002e0c00 	call	2e0c0 <__malloc_lock>
   25f80:	88807e28 	cmpgeui	r2,r17,504
   25f84:	1000ef26 	beq	r2,zero,26344 <_malloc_r+0x4ac>
   25f88:	8804d27a 	srli	r2,r17,9
   25f8c:	10006426 	beq	r2,zero,26120 <_malloc_r+0x288>
   25f90:	10c00168 	cmpgeui	r3,r2,5
   25f94:	1800c31e 	bne	r3,zero,262a4 <_malloc_r+0x40c>
   25f98:	8804d1ba 	srli	r2,r17,6
   25f9c:	11c00e44 	addi	r7,r2,57
   25fa0:	380890fa 	slli	r4,r7,3
   25fa4:	12000e04 	addi	r8,r2,56
   25fa8:	04c000f4 	movhi	r19,3
   25fac:	9cc44504 	addi	r19,r19,4372
   25fb0:	9909883a 	add	r4,r19,r4
   25fb4:	24000117 	ldw	r16,4(r4)
   25fb8:	213ffe04 	addi	r4,r4,-8
   25fbc:	24000b26 	beq	r4,r16,25fec <_malloc_r+0x154>
   25fc0:	01bfff04 	movi	r6,-4
   25fc4:	00000306 	br	25fd4 <_malloc_r+0x13c>
   25fc8:	1800970e 	bge	r3,zero,26228 <_malloc_r+0x390>
   25fcc:	84000317 	ldw	r16,12(r16)
   25fd0:	24000626 	beq	r4,r16,25fec <_malloc_r+0x154>
   25fd4:	80800117 	ldw	r2,4(r16)
   25fd8:	1184703a 	and	r2,r2,r6
   25fdc:	1447c83a 	sub	r3,r2,r17
   25fe0:	19400408 	cmpgei	r5,r3,16
   25fe4:	283ff826 	beq	r5,zero,25fc8 <_malloc_r+0x130>
   25fe8:	400f883a 	mov	r7,r8
   25fec:	9c000417 	ldw	r16,16(r19)
   25ff0:	024000f4 	movhi	r9,3
   25ff4:	4a444704 	addi	r9,r9,4380
   25ff8:	82407f26 	beq	r16,r9,261f8 <_malloc_r+0x360>
   25ffc:	80800117 	ldw	r2,4(r16)
   26000:	00ffff04 	movi	r3,-4
   26004:	10c4703a 	and	r2,r2,r3
   26008:	1447c83a 	sub	r3,r2,r17
   2600c:	19000410 	cmplti	r4,r3,16
   26010:	2000cf26 	beq	r4,zero,26350 <_malloc_r+0x4b8>
   26014:	9a400515 	stw	r9,20(r19)
   26018:	9a400415 	stw	r9,16(r19)
   2601c:	1800c10e 	bge	r3,zero,26324 <_malloc_r+0x48c>
   26020:	10c08028 	cmpgeui	r3,r2,512
   26024:	99400117 	ldw	r5,4(r19)
   26028:	1800851e 	bne	r3,zero,26240 <_malloc_r+0x3a8>
   2602c:	1006d0fa 	srli	r3,r2,3
   26030:	1008d17a 	srli	r4,r2,5
   26034:	18800044 	addi	r2,r3,1
   26038:	100490fa 	slli	r2,r2,3
   2603c:	00c00044 	movi	r3,1
   26040:	1906983a 	sll	r3,r3,r4
   26044:	9885883a 	add	r2,r19,r2
   26048:	11000017 	ldw	r4,0(r2)
   2604c:	28cab03a 	or	r5,r5,r3
   26050:	10fffe04 	addi	r3,r2,-8
   26054:	80c00315 	stw	r3,12(r16)
   26058:	81000215 	stw	r4,8(r16)
   2605c:	99400115 	stw	r5,4(r19)
   26060:	14000015 	stw	r16,0(r2)
   26064:	24000315 	stw	r16,12(r4)
   26068:	3805d0ba 	srai	r2,r7,2
   2606c:	01000044 	movi	r4,1
   26070:	2088983a 	sll	r4,r4,r2
   26074:	29002e36 	bltu	r5,r4,26130 <_malloc_r+0x298>
   26078:	2144703a 	and	r2,r4,r5
   2607c:	10000a1e 	bne	r2,zero,260a8 <_malloc_r+0x210>
   26080:	2109883a 	add	r4,r4,r4
   26084:	00bfff04 	movi	r2,-4
   26088:	3884703a 	and	r2,r7,r2
   2608c:	2146703a 	and	r3,r4,r5
   26090:	11c00104 	addi	r7,r2,4
   26094:	1800041e 	bne	r3,zero,260a8 <_malloc_r+0x210>
   26098:	2109883a 	add	r4,r4,r4
   2609c:	2144703a 	and	r2,r4,r5
   260a0:	39c00104 	addi	r7,r7,4
   260a4:	103ffc26 	beq	r2,zero,26098 <_malloc_r+0x200>
   260a8:	02bfff04 	movi	r10,-4
   260ac:	381690fa 	slli	r11,r7,3
   260b0:	3819883a 	mov	r12,r7
   260b4:	9ad7883a 	add	r11,r19,r11
   260b8:	5811883a 	mov	r8,r11
   260bc:	40800317 	ldw	r2,12(r8)
   260c0:	40808126 	beq	r8,r2,262c8 <_malloc_r+0x430>
   260c4:	10c00117 	ldw	r3,4(r2)
   260c8:	1021883a 	mov	r16,r2
   260cc:	10800317 	ldw	r2,12(r2)
   260d0:	1a86703a 	and	r3,r3,r10
   260d4:	1c4bc83a 	sub	r5,r3,r17
   260d8:	29800410 	cmplti	r6,r5,16
   260dc:	30007f26 	beq	r6,zero,262dc <_malloc_r+0x444>
   260e0:	283ff716 	blt	r5,zero,260c0 <_malloc_r+0x228>
   260e4:	80c7883a 	add	r3,r16,r3
   260e8:	19400117 	ldw	r5,4(r3)
   260ec:	81800217 	ldw	r6,8(r16)
   260f0:	9009883a 	mov	r4,r18
   260f4:	29400054 	ori	r5,r5,1
   260f8:	19400115 	stw	r5,4(r3)
   260fc:	30800315 	stw	r2,12(r6)
   26100:	11800215 	stw	r6,8(r2)
   26104:	002e0e40 	call	2e0e4 <__malloc_unlock>
   26108:	80800204 	addi	r2,r16,8
   2610c:	003f8b06 	br	25f3c <_malloc_r+0xa4>
   26110:	00800304 	movi	r2,12
   26114:	90800015 	stw	r2,0(r18)
   26118:	0005883a 	mov	r2,zero
   2611c:	003f8706 	br	25f3c <_malloc_r+0xa4>
   26120:	01008004 	movi	r4,512
   26124:	01c01004 	movi	r7,64
   26128:	02000fc4 	movi	r8,63
   2612c:	003f9e06 	br	25fa8 <_malloc_r+0x110>
   26130:	9c000217 	ldw	r16,8(r19)
   26134:	00bfff04 	movi	r2,-4
   26138:	80c00117 	ldw	r3,4(r16)
   2613c:	18aa703a 	and	r21,r3,r2
   26140:	ac400336 	bltu	r21,r17,26150 <_malloc_r+0x2b8>
   26144:	ac47c83a 	sub	r3,r21,r17
   26148:	18800408 	cmpgei	r2,r3,16
   2614c:	10002c1e 	bne	r2,zero,26200 <_malloc_r+0x368>
   26150:	008000f4 	movhi	r2,3
   26154:	108a3c17 	ldw	r2,10480(r2)
   26158:	00c000f4 	movhi	r3,3
   2615c:	1d115817 	ldw	r20,17760(r3)
   26160:	10bfffd8 	cmpnei	r2,r2,-1
   26164:	856f883a 	add	r23,r16,r21
   26168:	8d29883a 	add	r20,r17,r20
   2616c:	1000e726 	beq	r2,zero,2650c <_malloc_r+0x674>
   26170:	a50403c4 	addi	r20,r20,4111
   26174:	00bc0004 	movi	r2,-4096
   26178:	a0a8703a 	and	r20,r20,r2
   2617c:	a00b883a 	mov	r5,r20
   26180:	9009883a 	mov	r4,r18
   26184:	00281840 	call	28184 <_sbrk_r>
   26188:	102d883a 	mov	r22,r2
   2618c:	10bfffd8 	cmpnei	r2,r2,-1
   26190:	10008426 	beq	r2,zero,263a4 <_malloc_r+0x50c>
   26194:	b5c08236 	bltu	r22,r23,263a0 <_malloc_r+0x508>
   26198:	008000f4 	movhi	r2,3
   2619c:	11116317 	ldw	r4,17804(r2)
   261a0:	a109883a 	add	r4,r20,r4
   261a4:	11116315 	stw	r4,17804(r2)
   261a8:	2007883a 	mov	r3,r4
   261ac:	bd80a51e 	bne	r23,r22,26444 <_malloc_r+0x5ac>
   261b0:	b083ffcc 	andi	r2,r22,4095
   261b4:	1000a31e 	bne	r2,zero,26444 <_malloc_r+0x5ac>
   261b8:	9d800217 	ldw	r22,8(r19)
   261bc:	ad07883a 	add	r3,r21,r20
   261c0:	18c00054 	ori	r3,r3,1
   261c4:	b0c00115 	stw	r3,4(r22)
   261c8:	008000f4 	movhi	r2,3
   261cc:	10915717 	ldw	r2,17756(r2)
   261d0:	1100022e 	bgeu	r2,r4,261dc <_malloc_r+0x344>
   261d4:	008000f4 	movhi	r2,3
   261d8:	11115715 	stw	r4,17756(r2)
   261dc:	008000f4 	movhi	r2,3
   261e0:	10915617 	ldw	r2,17752(r2)
   261e4:	1100022e 	bgeu	r2,r4,261f0 <_malloc_r+0x358>
   261e8:	008000f4 	movhi	r2,3
   261ec:	11115615 	stw	r4,17752(r2)
   261f0:	b021883a 	mov	r16,r22
   261f4:	00006d06 	br	263ac <_malloc_r+0x514>
   261f8:	99400117 	ldw	r5,4(r19)
   261fc:	003f9a06 	br	26068 <_malloc_r+0x1d0>
   26200:	88800054 	ori	r2,r17,1
   26204:	80800115 	stw	r2,4(r16)
   26208:	8463883a 	add	r17,r16,r17
   2620c:	9c400215 	stw	r17,8(r19)
   26210:	18c00054 	ori	r3,r3,1
   26214:	88c00115 	stw	r3,4(r17)
   26218:	9009883a 	mov	r4,r18
   2621c:	002e0e40 	call	2e0e4 <__malloc_unlock>
   26220:	80800204 	addi	r2,r16,8
   26224:	003f4506 	br	25f3c <_malloc_r+0xa4>
   26228:	81000317 	ldw	r4,12(r16)
   2622c:	003f3906 	br	25f14 <_malloc_r+0x7c>
   26230:	14000317 	ldw	r16,12(r2)
   26234:	143f331e 	bne	r2,r16,25f04 <_malloc_r+0x6c>
   26238:	39c00084 	addi	r7,r7,2
   2623c:	003f6b06 	br	25fec <_malloc_r+0x154>
   26240:	1006d27a 	srli	r3,r2,9
   26244:	19000168 	cmpgeui	r4,r3,5
   26248:	20005026 	beq	r4,zero,2638c <_malloc_r+0x4f4>
   2624c:	19000568 	cmpgeui	r4,r3,21
   26250:	2000c01e 	bne	r4,zero,26554 <_malloc_r+0x6bc>
   26254:	19801704 	addi	r6,r3,92
   26258:	300c90fa 	slli	r6,r6,3
   2625c:	190016c4 	addi	r4,r3,91
   26260:	998d883a 	add	r6,r19,r6
   26264:	30c00017 	ldw	r3,0(r6)
   26268:	31bffe04 	addi	r6,r6,-8
   2626c:	30c0a926 	beq	r6,r3,26514 <_malloc_r+0x67c>
   26270:	023fff04 	movi	r8,-4
   26274:	00000206 	br	26280 <_malloc_r+0x3e8>
   26278:	18c00217 	ldw	r3,8(r3)
   2627c:	30c00326 	beq	r6,r3,2628c <_malloc_r+0x3f4>
   26280:	19000117 	ldw	r4,4(r3)
   26284:	2208703a 	and	r4,r4,r8
   26288:	113ffb36 	bltu	r2,r4,26278 <_malloc_r+0x3e0>
   2628c:	19800317 	ldw	r6,12(r3)
   26290:	81800315 	stw	r6,12(r16)
   26294:	80c00215 	stw	r3,8(r16)
   26298:	34000215 	stw	r16,8(r6)
   2629c:	1c000315 	stw	r16,12(r3)
   262a0:	003f7106 	br	26068 <_malloc_r+0x1d0>
   262a4:	10c00568 	cmpgeui	r3,r2,21
   262a8:	18004926 	beq	r3,zero,263d0 <_malloc_r+0x538>
   262ac:	10c01568 	cmpgeui	r3,r2,85
   262b0:	1800af1e 	bne	r3,zero,26570 <_malloc_r+0x6d8>
   262b4:	8804d33a 	srli	r2,r17,12
   262b8:	11c01bc4 	addi	r7,r2,111
   262bc:	380890fa 	slli	r4,r7,3
   262c0:	12001b84 	addi	r8,r2,110
   262c4:	003f3806 	br	25fa8 <_malloc_r+0x110>
   262c8:	63000044 	addi	r12,r12,1
   262cc:	608000cc 	andi	r2,r12,3
   262d0:	42000204 	addi	r8,r8,8
   262d4:	103f791e 	bne	r2,zero,260bc <_malloc_r+0x224>
   262d8:	00004406 	br	263ec <_malloc_r+0x554>
   262dc:	81000217 	ldw	r4,8(r16)
   262e0:	89800054 	ori	r6,r17,1
   262e4:	81800115 	stw	r6,4(r16)
   262e8:	20800315 	stw	r2,12(r4)
   262ec:	11000215 	stw	r4,8(r2)
   262f0:	8463883a 	add	r17,r16,r17
   262f4:	9c400515 	stw	r17,20(r19)
   262f8:	9c400415 	stw	r17,16(r19)
   262fc:	28800054 	ori	r2,r5,1
   26300:	88800115 	stw	r2,4(r17)
   26304:	8a400315 	stw	r9,12(r17)
   26308:	8a400215 	stw	r9,8(r17)
   2630c:	80c7883a 	add	r3,r16,r3
   26310:	19400015 	stw	r5,0(r3)
   26314:	9009883a 	mov	r4,r18
   26318:	002e0e40 	call	2e0e4 <__malloc_unlock>
   2631c:	80800204 	addi	r2,r16,8
   26320:	003f0606 	br	25f3c <_malloc_r+0xa4>
   26324:	8085883a 	add	r2,r16,r2
   26328:	10c00117 	ldw	r3,4(r2)
   2632c:	9009883a 	mov	r4,r18
   26330:	18c00054 	ori	r3,r3,1
   26334:	10c00115 	stw	r3,4(r2)
   26338:	002e0e40 	call	2e0e4 <__malloc_unlock>
   2633c:	80800204 	addi	r2,r16,8
   26340:	003efe06 	br	25f3c <_malloc_r+0xa4>
   26344:	880ed0fa 	srli	r7,r17,3
   26348:	88800204 	addi	r2,r17,8
   2634c:	003ee706 	br	25eec <_malloc_r+0x54>
   26350:	89000054 	ori	r4,r17,1
   26354:	81000115 	stw	r4,4(r16)
   26358:	8463883a 	add	r17,r16,r17
   2635c:	9c400515 	stw	r17,20(r19)
   26360:	9c400415 	stw	r17,16(r19)
   26364:	19000054 	ori	r4,r3,1
   26368:	89000115 	stw	r4,4(r17)
   2636c:	8085883a 	add	r2,r16,r2
   26370:	8a400315 	stw	r9,12(r17)
   26374:	8a400215 	stw	r9,8(r17)
   26378:	10c00015 	stw	r3,0(r2)
   2637c:	9009883a 	mov	r4,r18
   26380:	002e0e40 	call	2e0e4 <__malloc_unlock>
   26384:	80800204 	addi	r2,r16,8
   26388:	003eec06 	br	25f3c <_malloc_r+0xa4>
   2638c:	1006d1ba 	srli	r3,r2,6
   26390:	19800e44 	addi	r6,r3,57
   26394:	300c90fa 	slli	r6,r6,3
   26398:	19000e04 	addi	r4,r3,56
   2639c:	003fb006 	br	26260 <_malloc_r+0x3c8>
   263a0:	84c02426 	beq	r16,r19,26434 <_malloc_r+0x59c>
   263a4:	9c000217 	ldw	r16,8(r19)
   263a8:	80c00117 	ldw	r3,4(r16)
   263ac:	00bfff04 	movi	r2,-4
   263b0:	1884703a 	and	r2,r3,r2
   263b4:	1447c83a 	sub	r3,r2,r17
   263b8:	14400236 	bltu	r2,r17,263c4 <_malloc_r+0x52c>
   263bc:	18800408 	cmpgei	r2,r3,16
   263c0:	103f8f1e 	bne	r2,zero,26200 <_malloc_r+0x368>
   263c4:	9009883a 	mov	r4,r18
   263c8:	002e0e40 	call	2e0e4 <__malloc_unlock>
   263cc:	003f5206 	br	26118 <_malloc_r+0x280>
   263d0:	11c01704 	addi	r7,r2,92
   263d4:	380890fa 	slli	r4,r7,3
   263d8:	120016c4 	addi	r8,r2,91
   263dc:	003ef206 	br	25fa8 <_malloc_r+0x110>
   263e0:	58800217 	ldw	r2,8(r11)
   263e4:	39ffffc4 	addi	r7,r7,-1
   263e8:	12c0961e 	bne	r2,r11,26644 <_malloc_r+0x7ac>
   263ec:	388000cc 	andi	r2,r7,3
   263f0:	5afffe04 	addi	r11,r11,-8
   263f4:	103ffa1e 	bne	r2,zero,263e0 <_malloc_r+0x548>
   263f8:	98c00117 	ldw	r3,4(r19)
   263fc:	0104303a 	nor	r2,zero,r4
   26400:	10c4703a 	and	r2,r2,r3
   26404:	98800115 	stw	r2,4(r19)
   26408:	2109883a 	add	r4,r4,r4
   2640c:	113f4836 	bltu	r2,r4,26130 <_malloc_r+0x298>
   26410:	203f4726 	beq	r4,zero,26130 <_malloc_r+0x298>
   26414:	2086703a 	and	r3,r4,r2
   26418:	1800041e 	bne	r3,zero,2642c <_malloc_r+0x594>
   2641c:	2109883a 	add	r4,r4,r4
   26420:	2086703a 	and	r3,r4,r2
   26424:	63000104 	addi	r12,r12,4
   26428:	183ffc26 	beq	r3,zero,2641c <_malloc_r+0x584>
   2642c:	600f883a 	mov	r7,r12
   26430:	003f1e06 	br	260ac <_malloc_r+0x214>
   26434:	008000f4 	movhi	r2,3
   26438:	10d16317 	ldw	r3,17804(r2)
   2643c:	a0c7883a 	add	r3,r20,r3
   26440:	10d16315 	stw	r3,17804(r2)
   26444:	008000f4 	movhi	r2,3
   26448:	108a3c17 	ldw	r2,10480(r2)
   2644c:	10bfffd8 	cmpnei	r2,r2,-1
   26450:	10004e26 	beq	r2,zero,2658c <_malloc_r+0x6f4>
   26454:	b5c5c83a 	sub	r2,r22,r23
   26458:	10c5883a 	add	r2,r2,r3
   2645c:	00c000f4 	movhi	r3,3
   26460:	18916315 	stw	r2,17804(r3)
   26464:	b70001cc 	andi	fp,r22,7
   26468:	e0003026 	beq	fp,zero,2652c <_malloc_r+0x694>
   2646c:	b72dc83a 	sub	r22,r22,fp
   26470:	b5800204 	addi	r22,r22,8
   26474:	01040204 	movi	r4,4104
   26478:	2709c83a 	sub	r4,r4,fp
   2647c:	b529883a 	add	r20,r22,r20
   26480:	2509c83a 	sub	r4,r4,r20
   26484:	25c3ffcc 	andi	r23,r4,4095
   26488:	b80b883a 	mov	r5,r23
   2648c:	9009883a 	mov	r4,r18
   26490:	00281840 	call	28184 <_sbrk_r>
   26494:	10ffffe0 	cmpeqi	r3,r2,-1
   26498:	1800501e 	bne	r3,zero,265dc <_malloc_r+0x744>
   2649c:	1585c83a 	sub	r2,r2,r22
   264a0:	15e9883a 	add	r20,r2,r23
   264a4:	008000f4 	movhi	r2,3
   264a8:	10916317 	ldw	r2,17804(r2)
   264ac:	9d800215 	stw	r22,8(r19)
   264b0:	a0c00054 	ori	r3,r20,1
   264b4:	b889883a 	add	r4,r23,r2
   264b8:	008000f4 	movhi	r2,3
   264bc:	11116315 	stw	r4,17804(r2)
   264c0:	b0c00115 	stw	r3,4(r22)
   264c4:	84ff4026 	beq	r16,r19,261c8 <_malloc_r+0x330>
   264c8:	a8800428 	cmpgeui	r2,r21,16
   264cc:	10003226 	beq	r2,zero,26598 <_malloc_r+0x700>
   264d0:	80800117 	ldw	r2,4(r16)
   264d4:	017ffe04 	movi	r5,-8
   264d8:	a8fffd04 	addi	r3,r21,-12
   264dc:	1946703a 	and	r3,r3,r5
   264e0:	1080004c 	andi	r2,r2,1
   264e4:	10c4b03a 	or	r2,r2,r3
   264e8:	80800115 	stw	r2,4(r16)
   264ec:	01400144 	movi	r5,5
   264f0:	80c5883a 	add	r2,r16,r3
   264f4:	11400115 	stw	r5,4(r2)
   264f8:	11400215 	stw	r5,8(r2)
   264fc:	18c00428 	cmpgeui	r3,r3,16
   26500:	18003b1e 	bne	r3,zero,265f0 <_malloc_r+0x758>
   26504:	b0c00117 	ldw	r3,4(r22)
   26508:	003f2f06 	br	261c8 <_malloc_r+0x330>
   2650c:	a5000404 	addi	r20,r20,16
   26510:	003f1a06 	br	2617c <_malloc_r+0x2e4>
   26514:	2009d0ba 	srai	r4,r4,2
   26518:	00800044 	movi	r2,1
   2651c:	1104983a 	sll	r2,r2,r4
   26520:	288ab03a 	or	r5,r5,r2
   26524:	99400115 	stw	r5,4(r19)
   26528:	003f5906 	br	26290 <_malloc_r+0x3f8>
   2652c:	b509883a 	add	r4,r22,r20
   26530:	0109c83a 	sub	r4,zero,r4
   26534:	25c3ffcc 	andi	r23,r4,4095
   26538:	b80b883a 	mov	r5,r23
   2653c:	9009883a 	mov	r4,r18
   26540:	00281840 	call	28184 <_sbrk_r>
   26544:	10ffffe0 	cmpeqi	r3,r2,-1
   26548:	183fd426 	beq	r3,zero,2649c <_malloc_r+0x604>
   2654c:	002f883a 	mov	r23,zero
   26550:	003fd406 	br	264a4 <_malloc_r+0x60c>
   26554:	19001568 	cmpgeui	r4,r3,85
   26558:	2000121e 	bne	r4,zero,265a4 <_malloc_r+0x70c>
   2655c:	1006d33a 	srli	r3,r2,12
   26560:	19801bc4 	addi	r6,r3,111
   26564:	300c90fa 	slli	r6,r6,3
   26568:	19001b84 	addi	r4,r3,110
   2656c:	003f3c06 	br	26260 <_malloc_r+0x3c8>
   26570:	10c05568 	cmpgeui	r3,r2,341
   26574:	1800121e 	bne	r3,zero,265c0 <_malloc_r+0x728>
   26578:	8804d3fa 	srli	r2,r17,15
   2657c:	11c01e04 	addi	r7,r2,120
   26580:	380890fa 	slli	r4,r7,3
   26584:	12001dc4 	addi	r8,r2,119
   26588:	003e8706 	br	25fa8 <_malloc_r+0x110>
   2658c:	008000f4 	movhi	r2,3
   26590:	158a3c15 	stw	r22,10480(r2)
   26594:	003fb306 	br	26464 <_malloc_r+0x5cc>
   26598:	00800044 	movi	r2,1
   2659c:	b0800115 	stw	r2,4(r22)
   265a0:	003f8806 	br	263c4 <_malloc_r+0x52c>
   265a4:	19005568 	cmpgeui	r4,r3,341
   265a8:	2000181e 	bne	r4,zero,2660c <_malloc_r+0x774>
   265ac:	1006d3fa 	srli	r3,r2,15
   265b0:	19801e04 	addi	r6,r3,120
   265b4:	300c90fa 	slli	r6,r6,3
   265b8:	19001dc4 	addi	r4,r3,119
   265bc:	003f2806 	br	26260 <_malloc_r+0x3c8>
   265c0:	10815568 	cmpgeui	r2,r2,1365
   265c4:	1000181e 	bne	r2,zero,26628 <_malloc_r+0x790>
   265c8:	8804d4ba 	srli	r2,r17,18
   265cc:	11c01f44 	addi	r7,r2,125
   265d0:	380890fa 	slli	r4,r7,3
   265d4:	12001f04 	addi	r8,r2,124
   265d8:	003e7306 	br	25fa8 <_malloc_r+0x110>
   265dc:	e73ffe04 	addi	fp,fp,-8
   265e0:	a729883a 	add	r20,r20,fp
   265e4:	a5a9c83a 	sub	r20,r20,r22
   265e8:	002f883a 	mov	r23,zero
   265ec:	003fad06 	br	264a4 <_malloc_r+0x60c>
   265f0:	9009883a 	mov	r4,r18
   265f4:	81400204 	addi	r5,r16,8
   265f8:	00253600 	call	25360 <_free_r>
   265fc:	008000f4 	movhi	r2,3
   26600:	9d800217 	ldw	r22,8(r19)
   26604:	11116317 	ldw	r4,17804(r2)
   26608:	003fbe06 	br	26504 <_malloc_r+0x66c>
   2660c:	18c15568 	cmpgeui	r3,r3,1365
   26610:	1800091e 	bne	r3,zero,26638 <_malloc_r+0x7a0>
   26614:	1006d4ba 	srli	r3,r2,18
   26618:	19801f44 	addi	r6,r3,125
   2661c:	300c90fa 	slli	r6,r6,3
   26620:	19001f04 	addi	r4,r3,124
   26624:	003f0e06 	br	26260 <_malloc_r+0x3c8>
   26628:	0100fe04 	movi	r4,1016
   2662c:	01c01fc4 	movi	r7,127
   26630:	02001f84 	movi	r8,126
   26634:	003e5c06 	br	25fa8 <_malloc_r+0x110>
   26638:	0180fe04 	movi	r6,1016
   2663c:	01001f84 	movi	r4,126
   26640:	003f0706 	br	26260 <_malloc_r+0x3c8>
   26644:	98800117 	ldw	r2,4(r19)
   26648:	003f6f06 	br	26408 <_malloc_r+0x570>

0002664c <memchr>:
   2664c:	208000cc 	andi	r2,r4,3
   26650:	280f883a 	mov	r7,r5
   26654:	10000e26 	beq	r2,zero,26690 <memchr+0x44>
   26658:	30bfffc4 	addi	r2,r6,-1
   2665c:	30001726 	beq	r6,zero,266bc <memchr+0x70>
   26660:	29803fcc 	andi	r6,r5,255
   26664:	00000606 	br	26680 <memchr+0x34>
   26668:	21000044 	addi	r4,r4,1
   2666c:	20c000cc 	andi	r3,r4,3
   26670:	18000826 	beq	r3,zero,26694 <memchr+0x48>
   26674:	10bfffc4 	addi	r2,r2,-1
   26678:	10ffffe0 	cmpeqi	r3,r2,-1
   2667c:	18000f1e 	bne	r3,zero,266bc <memchr+0x70>
   26680:	20c00003 	ldbu	r3,0(r4)
   26684:	19bff81e 	bne	r3,r6,26668 <memchr+0x1c>
   26688:	2005883a 	mov	r2,r4
   2668c:	f800283a 	ret
   26690:	3005883a 	mov	r2,r6
   26694:	10c00130 	cmpltui	r3,r2,4
   26698:	18000a26 	beq	r3,zero,266c4 <memchr+0x78>
   2669c:	10001e26 	beq	r2,zero,26718 <memchr+0xcc>
   266a0:	2087883a 	add	r3,r4,r2
   266a4:	39803fcc 	andi	r6,r7,255
   266a8:	2005883a 	mov	r2,r4
   266ac:	11000003 	ldbu	r4,0(r2)
   266b0:	21bff626 	beq	r4,r6,2668c <memchr+0x40>
   266b4:	10800044 	addi	r2,r2,1
   266b8:	18bffc1e 	bne	r3,r2,266ac <memchr+0x60>
   266bc:	0005883a 	mov	r2,zero
   266c0:	f800283a 	ret
   266c4:	00c04074 	movhi	r3,257
   266c8:	29403fcc 	andi	r5,r5,255
   266cc:	18c04044 	addi	r3,r3,257
   266d0:	027fbff4 	movhi	r9,65279
   266d4:	02202074 	movhi	r8,32897
   266d8:	28cd383a 	mul	r6,r5,r3
   266dc:	4a7fbfc4 	addi	r9,r9,-257
   266e0:	42202004 	addi	r8,r8,-32640
   266e4:	00000406 	br	266f8 <memchr+0xac>
   266e8:	10bfff04 	addi	r2,r2,-4
   266ec:	10c00128 	cmpgeui	r3,r2,4
   266f0:	21000104 	addi	r4,r4,4
   266f4:	183fe926 	beq	r3,zero,2669c <memchr+0x50>
   266f8:	20c00017 	ldw	r3,0(r4)
   266fc:	30c6f03a 	xor	r3,r6,r3
   26700:	1a4b883a 	add	r5,r3,r9
   26704:	00c6303a 	nor	r3,zero,r3
   26708:	28c6703a 	and	r3,r5,r3
   2670c:	1a06703a 	and	r3,r3,r8
   26710:	183ff526 	beq	r3,zero,266e8 <memchr+0x9c>
   26714:	003fe106 	br	2669c <memchr+0x50>
   26718:	f800283a 	ret

0002671c <memcpy>:
   2671c:	30c00428 	cmpgeui	r3,r6,16
   26720:	2005883a 	mov	r2,r4
   26724:	18000b1e 	bne	r3,zero,26754 <memcpy+0x38>
   26728:	2007883a 	mov	r3,r4
   2672c:	31ffffc4 	addi	r7,r6,-1
   26730:	30003426 	beq	r6,zero,26804 <memcpy+0xe8>
   26734:	39c00044 	addi	r7,r7,1
   26738:	19cf883a 	add	r7,r3,r7
   2673c:	29800003 	ldbu	r6,0(r5)
   26740:	18c00044 	addi	r3,r3,1
   26744:	29400044 	addi	r5,r5,1
   26748:	19bfffc5 	stb	r6,-1(r3)
   2674c:	38fffb1e 	bne	r7,r3,2673c <memcpy+0x20>
   26750:	f800283a 	ret
   26754:	2146b03a 	or	r3,r4,r5
   26758:	18c000cc 	andi	r3,r3,3
   2675c:	18002a1e 	bne	r3,zero,26808 <memcpy+0xec>
   26760:	333ffc04 	addi	r12,r6,-16
   26764:	6018d13a 	srli	r12,r12,4
   26768:	2811883a 	mov	r8,r5
   2676c:	200f883a 	mov	r7,r4
   26770:	63000044 	addi	r12,r12,1
   26774:	6018913a 	slli	r12,r12,4
   26778:	2307883a 	add	r3,r4,r12
   2677c:	42c00017 	ldw	r11,0(r8)
   26780:	42800117 	ldw	r10,4(r8)
   26784:	42400217 	ldw	r9,8(r8)
   26788:	41000317 	ldw	r4,12(r8)
   2678c:	39c00404 	addi	r7,r7,16
   26790:	3afffc15 	stw	r11,-16(r7)
   26794:	3abffd15 	stw	r10,-12(r7)
   26798:	3a7ffe15 	stw	r9,-8(r7)
   2679c:	393fff15 	stw	r4,-4(r7)
   267a0:	42000404 	addi	r8,r8,16
   267a4:	38fff51e 	bne	r7,r3,2677c <memcpy+0x60>
   267a8:	3100030c 	andi	r4,r6,12
   267ac:	2b0b883a 	add	r5,r5,r12
   267b0:	324003cc 	andi	r9,r6,15
   267b4:	20001726 	beq	r4,zero,26814 <memcpy+0xf8>
   267b8:	2811883a 	mov	r8,r5
   267bc:	1809883a 	mov	r4,r3
   267c0:	1a57883a 	add	r11,r3,r9
   267c4:	42800017 	ldw	r10,0(r8)
   267c8:	21000104 	addi	r4,r4,4
   267cc:	590fc83a 	sub	r7,r11,r4
   267d0:	39c00128 	cmpgeui	r7,r7,4
   267d4:	22bfff15 	stw	r10,-4(r4)
   267d8:	42000104 	addi	r8,r8,4
   267dc:	383ff91e 	bne	r7,zero,267c4 <memcpy+0xa8>
   267e0:	493fff04 	addi	r4,r9,-4
   267e4:	2008d0ba 	srli	r4,r4,2
   267e8:	318000cc 	andi	r6,r6,3
   267ec:	31ffffc4 	addi	r7,r6,-1
   267f0:	21000044 	addi	r4,r4,1
   267f4:	200890ba 	slli	r4,r4,2
   267f8:	1907883a 	add	r3,r3,r4
   267fc:	290b883a 	add	r5,r5,r4
   26800:	303fcc1e 	bne	r6,zero,26734 <memcpy+0x18>
   26804:	f800283a 	ret
   26808:	31ffffc4 	addi	r7,r6,-1
   2680c:	2007883a 	mov	r3,r4
   26810:	003fc806 	br	26734 <memcpy+0x18>
   26814:	480d883a 	mov	r6,r9
   26818:	003fc406 	br	2672c <memcpy+0x10>

0002681c <memmove>:
   2681c:	2005883a 	mov	r2,r4
   26820:	29000a2e 	bgeu	r5,r4,2684c <memmove+0x30>
   26824:	298f883a 	add	r7,r5,r6
   26828:	21c0082e 	bgeu	r4,r7,2684c <memmove+0x30>
   2682c:	2187883a 	add	r3,r4,r6
   26830:	30001226 	beq	r6,zero,2687c <memmove+0x60>
   26834:	397fffc3 	ldbu	r5,-1(r7)
   26838:	18ffffc4 	addi	r3,r3,-1
   2683c:	39ffffc4 	addi	r7,r7,-1
   26840:	19400005 	stb	r5,0(r3)
   26844:	10fffb1e 	bne	r2,r3,26834 <memmove+0x18>
   26848:	f800283a 	ret
   2684c:	30c00428 	cmpgeui	r3,r6,16
   26850:	18000b1e 	bne	r3,zero,26880 <memmove+0x64>
   26854:	1007883a 	mov	r3,r2
   26858:	31ffffc4 	addi	r7,r6,-1
   2685c:	30003626 	beq	r6,zero,26938 <memmove+0x11c>
   26860:	39c00044 	addi	r7,r7,1
   26864:	19cf883a 	add	r7,r3,r7
   26868:	29800003 	ldbu	r6,0(r5)
   2686c:	18c00044 	addi	r3,r3,1
   26870:	29400044 	addi	r5,r5,1
   26874:	19bfffc5 	stb	r6,-1(r3)
   26878:	19fffb1e 	bne	r3,r7,26868 <memmove+0x4c>
   2687c:	f800283a 	ret
   26880:	1146b03a 	or	r3,r2,r5
   26884:	18c000cc 	andi	r3,r3,3
   26888:	1800281e 	bne	r3,zero,2692c <memmove+0x110>
   2688c:	313ffc04 	addi	r4,r6,-16
   26890:	2008d13a 	srli	r4,r4,4
   26894:	2811883a 	mov	r8,r5
   26898:	100f883a 	mov	r7,r2
   2689c:	21000044 	addi	r4,r4,1
   268a0:	2008913a 	slli	r4,r4,4
   268a4:	1107883a 	add	r3,r2,r4
   268a8:	42400017 	ldw	r9,0(r8)
   268ac:	42000404 	addi	r8,r8,16
   268b0:	39c00404 	addi	r7,r7,16
   268b4:	3a7ffc15 	stw	r9,-16(r7)
   268b8:	427ffd17 	ldw	r9,-12(r8)
   268bc:	3a7ffd15 	stw	r9,-12(r7)
   268c0:	427ffe17 	ldw	r9,-8(r8)
   268c4:	3a7ffe15 	stw	r9,-8(r7)
   268c8:	427fff17 	ldw	r9,-4(r8)
   268cc:	3a7fff15 	stw	r9,-4(r7)
   268d0:	38fff51e 	bne	r7,r3,268a8 <memmove+0x8c>
   268d4:	31c0030c 	andi	r7,r6,12
   268d8:	290b883a 	add	r5,r5,r4
   268dc:	324003cc 	andi	r9,r6,15
   268e0:	38001626 	beq	r7,zero,2693c <memmove+0x120>
   268e4:	2809883a 	mov	r4,r5
   268e8:	180f883a 	mov	r7,r3
   268ec:	1a57883a 	add	r11,r3,r9
   268f0:	22800017 	ldw	r10,0(r4)
   268f4:	39c00104 	addi	r7,r7,4
   268f8:	59d1c83a 	sub	r8,r11,r7
   268fc:	42000128 	cmpgeui	r8,r8,4
   26900:	3abfff15 	stw	r10,-4(r7)
   26904:	21000104 	addi	r4,r4,4
   26908:	403ff91e 	bne	r8,zero,268f0 <memmove+0xd4>
   2690c:	493fff04 	addi	r4,r9,-4
   26910:	2008d0ba 	srli	r4,r4,2
   26914:	318000cc 	andi	r6,r6,3
   26918:	21000044 	addi	r4,r4,1
   2691c:	200890ba 	slli	r4,r4,2
   26920:	1907883a 	add	r3,r3,r4
   26924:	290b883a 	add	r5,r5,r4
   26928:	003fcb06 	br	26858 <memmove+0x3c>
   2692c:	31ffffc4 	addi	r7,r6,-1
   26930:	1007883a 	mov	r3,r2
   26934:	003fca06 	br	26860 <memmove+0x44>
   26938:	f800283a 	ret
   2693c:	480d883a 	mov	r6,r9
   26940:	003fc506 	br	26858 <memmove+0x3c>

00026944 <memset>:
   26944:	20c000cc 	andi	r3,r4,3
   26948:	2005883a 	mov	r2,r4
   2694c:	18003626 	beq	r3,zero,26a28 <memset+0xe4>
   26950:	31ffffc4 	addi	r7,r6,-1
   26954:	30003226 	beq	r6,zero,26a20 <memset+0xdc>
   26958:	2811883a 	mov	r8,r5
   2695c:	2007883a 	mov	r3,r4
   26960:	00000306 	br	26970 <memset+0x2c>
   26964:	39ffffc4 	addi	r7,r7,-1
   26968:	39bfffe0 	cmpeqi	r6,r7,-1
   2696c:	30002c1e 	bne	r6,zero,26a20 <memset+0xdc>
   26970:	18c00044 	addi	r3,r3,1
   26974:	198000cc 	andi	r6,r3,3
   26978:	1a3fffc5 	stb	r8,-1(r3)
   2697c:	303ff91e 	bne	r6,zero,26964 <memset+0x20>
   26980:	39000128 	cmpgeui	r4,r7,4
   26984:	20002126 	beq	r4,zero,26a0c <memset+0xc8>
   26988:	02004074 	movhi	r8,257
   2698c:	29803fcc 	andi	r6,r5,255
   26990:	42004044 	addi	r8,r8,257
   26994:	39000430 	cmpltui	r4,r7,16
   26998:	320d383a 	mul	r6,r6,r8
   2699c:	2000251e 	bne	r4,zero,26a34 <memset+0xf0>
   269a0:	393ffc04 	addi	r4,r7,-16
   269a4:	2008d13a 	srli	r4,r4,4
   269a8:	21000044 	addi	r4,r4,1
   269ac:	2008913a 	slli	r4,r4,4
   269b0:	1909883a 	add	r4,r3,r4
   269b4:	19800015 	stw	r6,0(r3)
   269b8:	19800115 	stw	r6,4(r3)
   269bc:	19800215 	stw	r6,8(r3)
   269c0:	19800315 	stw	r6,12(r3)
   269c4:	18c00404 	addi	r3,r3,16
   269c8:	193ffa1e 	bne	r3,r4,269b4 <memset+0x70>
   269cc:	3a00030c 	andi	r8,r7,12
   269d0:	39c003cc 	andi	r7,r7,15
   269d4:	40000d26 	beq	r8,zero,26a0c <memset+0xc8>
   269d8:	2007883a 	mov	r3,r4
   269dc:	21d3883a 	add	r9,r4,r7
   269e0:	18c00104 	addi	r3,r3,4
   269e4:	48d1c83a 	sub	r8,r9,r3
   269e8:	42000128 	cmpgeui	r8,r8,4
   269ec:	19bfff15 	stw	r6,-4(r3)
   269f0:	403ffb1e 	bne	r8,zero,269e0 <memset+0x9c>
   269f4:	38ffff04 	addi	r3,r7,-4
   269f8:	1806d0ba 	srli	r3,r3,2
   269fc:	39c000cc 	andi	r7,r7,3
   26a00:	18c00044 	addi	r3,r3,1
   26a04:	180690ba 	slli	r3,r3,2
   26a08:	20c7883a 	add	r3,r4,r3
   26a0c:	38000526 	beq	r7,zero,26a24 <memset+0xe0>
   26a10:	19cf883a 	add	r7,r3,r7
   26a14:	18c00044 	addi	r3,r3,1
   26a18:	197fffc5 	stb	r5,-1(r3)
   26a1c:	38fffd1e 	bne	r7,r3,26a14 <memset+0xd0>
   26a20:	f800283a 	ret
   26a24:	f800283a 	ret
   26a28:	2007883a 	mov	r3,r4
   26a2c:	300f883a 	mov	r7,r6
   26a30:	003fd306 	br	26980 <memset+0x3c>
   26a34:	1809883a 	mov	r4,r3
   26a38:	003fe706 	br	269d8 <memset+0x94>

00026a3c <_Balloc>:
   26a3c:	20801317 	ldw	r2,76(r4)
   26a40:	defffc04 	addi	sp,sp,-16
   26a44:	dc400115 	stw	r17,4(sp)
   26a48:	dc000015 	stw	r16,0(sp)
   26a4c:	dfc00315 	stw	ra,12(sp)
   26a50:	dc800215 	stw	r18,8(sp)
   26a54:	2021883a 	mov	r16,r4
   26a58:	2823883a 	mov	r17,r5
   26a5c:	10000e26 	beq	r2,zero,26a98 <_Balloc+0x5c>
   26a60:	880690ba 	slli	r3,r17,2
   26a64:	10c7883a 	add	r3,r2,r3
   26a68:	18800017 	ldw	r2,0(r3)
   26a6c:	10001126 	beq	r2,zero,26ab4 <_Balloc+0x78>
   26a70:	11000017 	ldw	r4,0(r2)
   26a74:	19000015 	stw	r4,0(r3)
   26a78:	10000415 	stw	zero,16(r2)
   26a7c:	10000315 	stw	zero,12(r2)
   26a80:	dfc00317 	ldw	ra,12(sp)
   26a84:	dc800217 	ldw	r18,8(sp)
   26a88:	dc400117 	ldw	r17,4(sp)
   26a8c:	dc000017 	ldw	r16,0(sp)
   26a90:	dec00404 	addi	sp,sp,16
   26a94:	f800283a 	ret
   26a98:	01800844 	movi	r6,33
   26a9c:	01400104 	movi	r5,4
   26aa0:	00298ac0 	call	298ac <_calloc_r>
   26aa4:	80801315 	stw	r2,76(r16)
   26aa8:	103fed1e 	bne	r2,zero,26a60 <_Balloc+0x24>
   26aac:	0005883a 	mov	r2,zero
   26ab0:	003ff306 	br	26a80 <_Balloc+0x44>
   26ab4:	04800044 	movi	r18,1
   26ab8:	9464983a 	sll	r18,r18,r17
   26abc:	01400044 	movi	r5,1
   26ac0:	8009883a 	mov	r4,r16
   26ac4:	91800144 	addi	r6,r18,5
   26ac8:	300c90ba 	slli	r6,r6,2
   26acc:	00298ac0 	call	298ac <_calloc_r>
   26ad0:	103ff626 	beq	r2,zero,26aac <_Balloc+0x70>
   26ad4:	14400115 	stw	r17,4(r2)
   26ad8:	14800215 	stw	r18,8(r2)
   26adc:	003fe606 	br	26a78 <_Balloc+0x3c>

00026ae0 <_Bfree>:
   26ae0:	28000726 	beq	r5,zero,26b00 <_Bfree+0x20>
   26ae4:	28c00117 	ldw	r3,4(r5)
   26ae8:	20801317 	ldw	r2,76(r4)
   26aec:	180690ba 	slli	r3,r3,2
   26af0:	10c5883a 	add	r2,r2,r3
   26af4:	10c00017 	ldw	r3,0(r2)
   26af8:	28c00015 	stw	r3,0(r5)
   26afc:	11400015 	stw	r5,0(r2)
   26b00:	f800283a 	ret

00026b04 <__multadd>:
   26b04:	defffa04 	addi	sp,sp,-24
   26b08:	dc400115 	stw	r17,4(sp)
   26b0c:	2c400417 	ldw	r17,16(r5)
   26b10:	dcc00315 	stw	r19,12(sp)
   26b14:	dc800215 	stw	r18,8(sp)
   26b18:	dc000015 	stw	r16,0(sp)
   26b1c:	dfc00515 	stw	ra,20(sp)
   26b20:	dd000415 	stw	r20,16(sp)
   26b24:	2825883a 	mov	r18,r5
   26b28:	2027883a 	mov	r19,r4
   26b2c:	3821883a 	mov	r16,r7
   26b30:	2a400504 	addi	r9,r5,20
   26b34:	0015883a 	mov	r10,zero
   26b38:	48c00017 	ldw	r3,0(r9)
   26b3c:	4a400104 	addi	r9,r9,4
   26b40:	52800044 	addi	r10,r10,1
   26b44:	1a3fffcc 	andi	r8,r3,65535
   26b48:	4191383a 	mul	r8,r8,r6
   26b4c:	180ed43a 	srli	r7,r3,16
   26b50:	4407883a 	add	r3,r8,r16
   26b54:	1810d43a 	srli	r8,r3,16
   26b58:	398f383a 	mul	r7,r7,r6
   26b5c:	18ffffcc 	andi	r3,r3,65535
   26b60:	3a0f883a 	add	r7,r7,r8
   26b64:	3810943a 	slli	r8,r7,16
   26b68:	3820d43a 	srli	r16,r7,16
   26b6c:	40c7883a 	add	r3,r8,r3
   26b70:	48ffff15 	stw	r3,-4(r9)
   26b74:	547ff016 	blt	r10,r17,26b38 <__multadd+0x34>
   26b78:	80000826 	beq	r16,zero,26b9c <__multadd+0x98>
   26b7c:	90800217 	ldw	r2,8(r18)
   26b80:	88800f0e 	bge	r17,r2,26bc0 <__multadd+0xbc>
   26b84:	88800144 	addi	r2,r17,5
   26b88:	100490ba 	slli	r2,r2,2
   26b8c:	8c400044 	addi	r17,r17,1
   26b90:	9085883a 	add	r2,r18,r2
   26b94:	14000015 	stw	r16,0(r2)
   26b98:	94400415 	stw	r17,16(r18)
   26b9c:	9005883a 	mov	r2,r18
   26ba0:	dfc00517 	ldw	ra,20(sp)
   26ba4:	dd000417 	ldw	r20,16(sp)
   26ba8:	dcc00317 	ldw	r19,12(sp)
   26bac:	dc800217 	ldw	r18,8(sp)
   26bb0:	dc400117 	ldw	r17,4(sp)
   26bb4:	dc000017 	ldw	r16,0(sp)
   26bb8:	dec00604 	addi	sp,sp,24
   26bbc:	f800283a 	ret
   26bc0:	91400117 	ldw	r5,4(r18)
   26bc4:	9809883a 	mov	r4,r19
   26bc8:	29400044 	addi	r5,r5,1
   26bcc:	0026a3c0 	call	26a3c <_Balloc>
   26bd0:	1029883a 	mov	r20,r2
   26bd4:	10001026 	beq	r2,zero,26c18 <__multadd+0x114>
   26bd8:	91800417 	ldw	r6,16(r18)
   26bdc:	91400304 	addi	r5,r18,12
   26be0:	11000304 	addi	r4,r2,12
   26be4:	31800084 	addi	r6,r6,2
   26be8:	300c90ba 	slli	r6,r6,2
   26bec:	002671c0 	call	2671c <memcpy>
   26bf0:	90000726 	beq	r18,zero,26c10 <__multadd+0x10c>
   26bf4:	90c00117 	ldw	r3,4(r18)
   26bf8:	98801317 	ldw	r2,76(r19)
   26bfc:	180690ba 	slli	r3,r3,2
   26c00:	10c5883a 	add	r2,r2,r3
   26c04:	10c00017 	ldw	r3,0(r2)
   26c08:	90c00015 	stw	r3,0(r18)
   26c0c:	14800015 	stw	r18,0(r2)
   26c10:	a025883a 	mov	r18,r20
   26c14:	003fdb06 	br	26b84 <__multadd+0x80>
   26c18:	01c000f4 	movhi	r7,3
   26c1c:	010000f4 	movhi	r4,3
   26c20:	39c1bc04 	addi	r7,r7,1776
   26c24:	000d883a 	mov	r6,zero
   26c28:	01402d44 	movi	r5,181
   26c2c:	2101d004 	addi	r4,r4,1856
   26c30:	00298340 	call	29834 <__assert_func>

00026c34 <__s2b>:
   26c34:	defff904 	addi	sp,sp,-28
   26c38:	dc800215 	stw	r18,8(sp)
   26c3c:	dc000015 	stw	r16,0(sp)
   26c40:	2025883a 	mov	r18,r4
   26c44:	2821883a 	mov	r16,r5
   26c48:	39000204 	addi	r4,r7,8
   26c4c:	01400244 	movi	r5,9
   26c50:	dcc00315 	stw	r19,12(sp)
   26c54:	dc400115 	stw	r17,4(sp)
   26c58:	dfc00615 	stw	ra,24(sp)
   26c5c:	3823883a 	mov	r17,r7
   26c60:	dd400515 	stw	r21,20(sp)
   26c64:	dd000415 	stw	r20,16(sp)
   26c68:	3027883a 	mov	r19,r6
   26c6c:	00208880 	call	20888 <__divsi3>
   26c70:	88c00290 	cmplti	r3,r17,10
   26c74:	1800341e 	bne	r3,zero,26d48 <__s2b+0x114>
   26c78:	00c00044 	movi	r3,1
   26c7c:	000b883a 	mov	r5,zero
   26c80:	18c7883a 	add	r3,r3,r3
   26c84:	29400044 	addi	r5,r5,1
   26c88:	18bffd16 	blt	r3,r2,26c80 <__s2b+0x4c>
   26c8c:	9009883a 	mov	r4,r18
   26c90:	0026a3c0 	call	26a3c <_Balloc>
   26c94:	100b883a 	mov	r5,r2
   26c98:	10002d26 	beq	r2,zero,26d50 <__s2b+0x11c>
   26c9c:	d8800717 	ldw	r2,28(sp)
   26ca0:	28800515 	stw	r2,20(r5)
   26ca4:	00800044 	movi	r2,1
   26ca8:	28800415 	stw	r2,16(r5)
   26cac:	98800290 	cmplti	r2,r19,10
   26cb0:	1000221e 	bne	r2,zero,26d3c <__s2b+0x108>
   26cb4:	85400244 	addi	r21,r16,9
   26cb8:	a829883a 	mov	r20,r21
   26cbc:	84e1883a 	add	r16,r16,r19
   26cc0:	a1c00007 	ldb	r7,0(r20)
   26cc4:	01800284 	movi	r6,10
   26cc8:	9009883a 	mov	r4,r18
   26ccc:	39fff404 	addi	r7,r7,-48
   26cd0:	0026b040 	call	26b04 <__multadd>
   26cd4:	a5000044 	addi	r20,r20,1
   26cd8:	100b883a 	mov	r5,r2
   26cdc:	a43ff81e 	bne	r20,r16,26cc0 <__s2b+0x8c>
   26ce0:	9c3ffe04 	addi	r16,r19,-8
   26ce4:	ac21883a 	add	r16,r21,r16
   26ce8:	9c400a0e 	bge	r19,r17,26d14 <__s2b+0xe0>
   26cec:	8ce3c83a 	sub	r17,r17,r19
   26cf0:	8463883a 	add	r17,r16,r17
   26cf4:	81c00007 	ldb	r7,0(r16)
   26cf8:	01800284 	movi	r6,10
   26cfc:	9009883a 	mov	r4,r18
   26d00:	39fff404 	addi	r7,r7,-48
   26d04:	0026b040 	call	26b04 <__multadd>
   26d08:	84000044 	addi	r16,r16,1
   26d0c:	100b883a 	mov	r5,r2
   26d10:	8c3ff81e 	bne	r17,r16,26cf4 <__s2b+0xc0>
   26d14:	2805883a 	mov	r2,r5
   26d18:	dfc00617 	ldw	ra,24(sp)
   26d1c:	dd400517 	ldw	r21,20(sp)
   26d20:	dd000417 	ldw	r20,16(sp)
   26d24:	dcc00317 	ldw	r19,12(sp)
   26d28:	dc800217 	ldw	r18,8(sp)
   26d2c:	dc400117 	ldw	r17,4(sp)
   26d30:	dc000017 	ldw	r16,0(sp)
   26d34:	dec00704 	addi	sp,sp,28
   26d38:	f800283a 	ret
   26d3c:	84000284 	addi	r16,r16,10
   26d40:	04c00244 	movi	r19,9
   26d44:	003fe806 	br	26ce8 <__s2b+0xb4>
   26d48:	000b883a 	mov	r5,zero
   26d4c:	003fcf06 	br	26c8c <__s2b+0x58>
   26d50:	01c000f4 	movhi	r7,3
   26d54:	010000f4 	movhi	r4,3
   26d58:	39c1bc04 	addi	r7,r7,1776
   26d5c:	000d883a 	mov	r6,zero
   26d60:	01403384 	movi	r5,206
   26d64:	2101d004 	addi	r4,r4,1856
   26d68:	00298340 	call	29834 <__assert_func>

00026d6c <__hi0bits>:
   26d6c:	00bfffd4 	movui	r2,65535
   26d70:	11001536 	bltu	r2,r4,26dc8 <__hi0bits+0x5c>
   26d74:	2008943a 	slli	r4,r4,16
   26d78:	00800404 	movi	r2,16
   26d7c:	00c04034 	movhi	r3,256
   26d80:	20c0022e 	bgeu	r4,r3,26d8c <__hi0bits+0x20>
   26d84:	2008923a 	slli	r4,r4,8
   26d88:	10800204 	addi	r2,r2,8
   26d8c:	00c40034 	movhi	r3,4096
   26d90:	20c0022e 	bgeu	r4,r3,26d9c <__hi0bits+0x30>
   26d94:	2008913a 	slli	r4,r4,4
   26d98:	10800104 	addi	r2,r2,4
   26d9c:	00d00034 	movhi	r3,16384
   26da0:	20c00336 	bltu	r4,r3,26db0 <__hi0bits+0x44>
   26da4:	20000716 	blt	r4,zero,26dc4 <__hi0bits+0x58>
   26da8:	10800044 	addi	r2,r2,1
   26dac:	f800283a 	ret
   26db0:	200890ba 	slli	r4,r4,2
   26db4:	20000616 	blt	r4,zero,26dd0 <__hi0bits+0x64>
   26db8:	2110002c 	andhi	r4,r4,16384
   26dbc:	2000061e 	bne	r4,zero,26dd8 <__hi0bits+0x6c>
   26dc0:	00800804 	movi	r2,32
   26dc4:	f800283a 	ret
   26dc8:	0005883a 	mov	r2,zero
   26dcc:	003feb06 	br	26d7c <__hi0bits+0x10>
   26dd0:	10800084 	addi	r2,r2,2
   26dd4:	f800283a 	ret
   26dd8:	108000c4 	addi	r2,r2,3
   26ddc:	f800283a 	ret

00026de0 <__lo0bits>:
   26de0:	20c00017 	ldw	r3,0(r4)
   26de4:	188001cc 	andi	r2,r3,7
   26de8:	10000826 	beq	r2,zero,26e0c <__lo0bits+0x2c>
   26dec:	1880004c 	andi	r2,r3,1
   26df0:	10001f1e 	bne	r2,zero,26e70 <__lo0bits+0x90>
   26df4:	1880008c 	andi	r2,r3,2
   26df8:	10002126 	beq	r2,zero,26e80 <__lo0bits+0xa0>
   26dfc:	1806d07a 	srli	r3,r3,1
   26e00:	00800044 	movi	r2,1
   26e04:	20c00015 	stw	r3,0(r4)
   26e08:	f800283a 	ret
   26e0c:	18bfffcc 	andi	r2,r3,65535
   26e10:	10001426 	beq	r2,zero,26e64 <__lo0bits+0x84>
   26e14:	0005883a 	mov	r2,zero
   26e18:	19403fcc 	andi	r5,r3,255
   26e1c:	2800021e 	bne	r5,zero,26e28 <__lo0bits+0x48>
   26e20:	1806d23a 	srli	r3,r3,8
   26e24:	10800204 	addi	r2,r2,8
   26e28:	194003cc 	andi	r5,r3,15
   26e2c:	2800021e 	bne	r5,zero,26e38 <__lo0bits+0x58>
   26e30:	1806d13a 	srli	r3,r3,4
   26e34:	10800104 	addi	r2,r2,4
   26e38:	194000cc 	andi	r5,r3,3
   26e3c:	2800021e 	bne	r5,zero,26e48 <__lo0bits+0x68>
   26e40:	1806d0ba 	srli	r3,r3,2
   26e44:	10800084 	addi	r2,r2,2
   26e48:	1940004c 	andi	r5,r3,1
   26e4c:	2800031e 	bne	r5,zero,26e5c <__lo0bits+0x7c>
   26e50:	1806d07a 	srli	r3,r3,1
   26e54:	10800044 	addi	r2,r2,1
   26e58:	18000726 	beq	r3,zero,26e78 <__lo0bits+0x98>
   26e5c:	20c00015 	stw	r3,0(r4)
   26e60:	f800283a 	ret
   26e64:	1806d43a 	srli	r3,r3,16
   26e68:	00800404 	movi	r2,16
   26e6c:	003fea06 	br	26e18 <__lo0bits+0x38>
   26e70:	0005883a 	mov	r2,zero
   26e74:	f800283a 	ret
   26e78:	00800804 	movi	r2,32
   26e7c:	f800283a 	ret
   26e80:	1806d0ba 	srli	r3,r3,2
   26e84:	00800084 	movi	r2,2
   26e88:	20c00015 	stw	r3,0(r4)
   26e8c:	f800283a 	ret

00026e90 <__i2b>:
   26e90:	20c01317 	ldw	r3,76(r4)
   26e94:	defffd04 	addi	sp,sp,-12
   26e98:	dc400115 	stw	r17,4(sp)
   26e9c:	dc000015 	stw	r16,0(sp)
   26ea0:	dfc00215 	stw	ra,8(sp)
   26ea4:	2021883a 	mov	r16,r4
   26ea8:	2823883a 	mov	r17,r5
   26eac:	18000d26 	beq	r3,zero,26ee4 <__i2b+0x54>
   26eb0:	18800117 	ldw	r2,4(r3)
   26eb4:	10001826 	beq	r2,zero,26f18 <__i2b+0x88>
   26eb8:	11000017 	ldw	r4,0(r2)
   26ebc:	19000115 	stw	r4,4(r3)
   26ec0:	00c00044 	movi	r3,1
   26ec4:	10000315 	stw	zero,12(r2)
   26ec8:	14400515 	stw	r17,20(r2)
   26ecc:	10c00415 	stw	r3,16(r2)
   26ed0:	dfc00217 	ldw	ra,8(sp)
   26ed4:	dc400117 	ldw	r17,4(sp)
   26ed8:	dc000017 	ldw	r16,0(sp)
   26edc:	dec00304 	addi	sp,sp,12
   26ee0:	f800283a 	ret
   26ee4:	01800844 	movi	r6,33
   26ee8:	01400104 	movi	r5,4
   26eec:	00298ac0 	call	298ac <_calloc_r>
   26ef0:	80801315 	stw	r2,76(r16)
   26ef4:	1007883a 	mov	r3,r2
   26ef8:	103fed1e 	bne	r2,zero,26eb0 <__i2b+0x20>
   26efc:	01c000f4 	movhi	r7,3
   26f00:	010000f4 	movhi	r4,3
   26f04:	39c1bc04 	addi	r7,r7,1776
   26f08:	000d883a 	mov	r6,zero
   26f0c:	01405004 	movi	r5,320
   26f10:	2101d004 	addi	r4,r4,1856
   26f14:	00298340 	call	29834 <__assert_func>
   26f18:	01800704 	movi	r6,28
   26f1c:	01400044 	movi	r5,1
   26f20:	8009883a 	mov	r4,r16
   26f24:	00298ac0 	call	298ac <_calloc_r>
   26f28:	103ff426 	beq	r2,zero,26efc <__i2b+0x6c>
   26f2c:	00c00044 	movi	r3,1
   26f30:	10c00115 	stw	r3,4(r2)
   26f34:	00c00084 	movi	r3,2
   26f38:	10c00215 	stw	r3,8(r2)
   26f3c:	003fe006 	br	26ec0 <__i2b+0x30>

00026f40 <__multiply>:
   26f40:	defff804 	addi	sp,sp,-32
   26f44:	dd400515 	stw	r21,20(sp)
   26f48:	dd000415 	stw	r20,16(sp)
   26f4c:	35400417 	ldw	r21,16(r6)
   26f50:	2d000417 	ldw	r20,16(r5)
   26f54:	dd800615 	stw	r22,24(sp)
   26f58:	dcc00315 	stw	r19,12(sp)
   26f5c:	dfc00715 	stw	ra,28(sp)
   26f60:	dc800215 	stw	r18,8(sp)
   26f64:	dc400115 	stw	r17,4(sp)
   26f68:	dc000015 	stw	r16,0(sp)
   26f6c:	282d883a 	mov	r22,r5
   26f70:	3027883a 	mov	r19,r6
   26f74:	a5400516 	blt	r20,r21,26f8c <__multiply+0x4c>
   26f78:	a807883a 	mov	r3,r21
   26f7c:	2827883a 	mov	r19,r5
   26f80:	a02b883a 	mov	r21,r20
   26f84:	302d883a 	mov	r22,r6
   26f88:	1829883a 	mov	r20,r3
   26f8c:	98800217 	ldw	r2,8(r19)
   26f90:	ad23883a 	add	r17,r21,r20
   26f94:	99400117 	ldw	r5,4(r19)
   26f98:	1440010e 	bge	r2,r17,26fa0 <__multiply+0x60>
   26f9c:	29400044 	addi	r5,r5,1
   26fa0:	0026a3c0 	call	26a3c <_Balloc>
   26fa4:	1025883a 	mov	r18,r2
   26fa8:	10007326 	beq	r2,zero,27178 <__multiply+0x238>
   26fac:	882090ba 	slli	r16,r17,2
   26fb0:	11000504 	addi	r4,r2,20
   26fb4:	2421883a 	add	r16,r4,r16
   26fb8:	2400082e 	bgeu	r4,r16,26fdc <__multiply+0x9c>
   26fbc:	808dc83a 	sub	r6,r16,r2
   26fc0:	31bffac4 	addi	r6,r6,-21
   26fc4:	300cd0ba 	srli	r6,r6,2
   26fc8:	000b883a 	mov	r5,zero
   26fcc:	31800044 	addi	r6,r6,1
   26fd0:	300c90ba 	slli	r6,r6,2
   26fd4:	00269440 	call	26944 <memset>
   26fd8:	1009883a 	mov	r4,r2
   26fdc:	a01090ba 	slli	r8,r20,2
   26fe0:	a80e90ba 	slli	r7,r21,2
   26fe4:	b1400504 	addi	r5,r22,20
   26fe8:	9a400504 	addi	r9,r19,20
   26fec:	2a11883a 	add	r8,r5,r8
   26ff0:	49cf883a 	add	r7,r9,r7
   26ff4:	2a004b2e 	bgeu	r5,r8,27124 <__multiply+0x1e4>
   26ff8:	98800544 	addi	r2,r19,21
   26ffc:	38805c36 	bltu	r7,r2,27170 <__multiply+0x230>
   27000:	3cc5c83a 	sub	r2,r7,r19
   27004:	10bffac4 	addi	r2,r2,-21
   27008:	1004d0ba 	srli	r2,r2,2
   2700c:	10800044 	addi	r2,r2,1
   27010:	100490ba 	slli	r2,r2,2
   27014:	00000506 	br	2702c <__multiply+0xec>
   27018:	5816d43a 	srli	r11,r11,16
   2701c:	5800231e 	bne	r11,zero,270ac <__multiply+0x16c>
   27020:	29400104 	addi	r5,r5,4
   27024:	21000104 	addi	r4,r4,4
   27028:	2a003e2e 	bgeu	r5,r8,27124 <__multiply+0x1e4>
   2702c:	2ac00017 	ldw	r11,0(r5)
   27030:	5b7fffcc 	andi	r13,r11,65535
   27034:	683ff826 	beq	r13,zero,27018 <__multiply+0xd8>
   27038:	2019883a 	mov	r12,r4
   2703c:	4817883a 	mov	r11,r9
   27040:	001d883a 	mov	r14,zero
   27044:	58c00017 	ldw	r3,0(r11)
   27048:	62800017 	ldw	r10,0(r12)
   2704c:	63000104 	addi	r12,r12,4
   27050:	19bfffcc 	andi	r6,r3,65535
   27054:	334d383a 	mul	r6,r6,r13
   27058:	1806d43a 	srli	r3,r3,16
   2705c:	53ffffcc 	andi	r15,r10,65535
   27060:	33cd883a 	add	r6,r6,r15
   27064:	5014d43a 	srli	r10,r10,16
   27068:	338d883a 	add	r6,r6,r14
   2706c:	1b47383a 	mul	r3,r3,r13
   27070:	301cd43a 	srli	r14,r6,16
   27074:	31bfffcc 	andi	r6,r6,65535
   27078:	1a87883a 	add	r3,r3,r10
   2707c:	1b87883a 	add	r3,r3,r14
   27080:	1814943a 	slli	r10,r3,16
   27084:	181cd43a 	srli	r14,r3,16
   27088:	5ac00104 	addi	r11,r11,4
   2708c:	5186b03a 	or	r3,r10,r6
   27090:	60ffff15 	stw	r3,-4(r12)
   27094:	59ffeb36 	bltu	r11,r7,27044 <__multiply+0x104>
   27098:	2087883a 	add	r3,r4,r2
   2709c:	1b800015 	stw	r14,0(r3)
   270a0:	2ac00017 	ldw	r11,0(r5)
   270a4:	5816d43a 	srli	r11,r11,16
   270a8:	583fdd26 	beq	r11,zero,27020 <__multiply+0xe0>
   270ac:	20c00017 	ldw	r3,0(r4)
   270b0:	2019883a 	mov	r12,r4
   270b4:	4815883a 	mov	r10,r9
   270b8:	181b883a 	mov	r13,r3
   270bc:	001d883a 	mov	r14,zero
   270c0:	5180000b 	ldhu	r6,0(r10)
   270c4:	681ed43a 	srli	r15,r13,16
   270c8:	18ffffcc 	andi	r3,r3,65535
   270cc:	32cd383a 	mul	r6,r6,r11
   270d0:	52800104 	addi	r10,r10,4
   270d4:	63400117 	ldw	r13,4(r12)
   270d8:	338d883a 	add	r6,r6,r14
   270dc:	33cd883a 	add	r6,r6,r15
   270e0:	301c943a 	slli	r14,r6,16
   270e4:	300cd43a 	srli	r6,r6,16
   270e8:	6bffffcc 	andi	r15,r13,65535
   270ec:	70c6b03a 	or	r3,r14,r3
   270f0:	60c00015 	stw	r3,0(r12)
   270f4:	50ffff8b 	ldhu	r3,-2(r10)
   270f8:	63000104 	addi	r12,r12,4
   270fc:	1ac7383a 	mul	r3,r3,r11
   27100:	1bc7883a 	add	r3,r3,r15
   27104:	1987883a 	add	r3,r3,r6
   27108:	181cd43a 	srli	r14,r3,16
   2710c:	51ffec36 	bltu	r10,r7,270c0 <__multiply+0x180>
   27110:	208d883a 	add	r6,r4,r2
   27114:	30c00015 	stw	r3,0(r6)
   27118:	29400104 	addi	r5,r5,4
   2711c:	21000104 	addi	r4,r4,4
   27120:	2a3fc236 	bltu	r5,r8,2702c <__multiply+0xec>
   27124:	04400316 	blt	zero,r17,27134 <__multiply+0x1f4>
   27128:	00000506 	br	27140 <__multiply+0x200>
   2712c:	8c7fffc4 	addi	r17,r17,-1
   27130:	88000326 	beq	r17,zero,27140 <__multiply+0x200>
   27134:	80bfff17 	ldw	r2,-4(r16)
   27138:	843fff04 	addi	r16,r16,-4
   2713c:	103ffb26 	beq	r2,zero,2712c <__multiply+0x1ec>
   27140:	9005883a 	mov	r2,r18
   27144:	94400415 	stw	r17,16(r18)
   27148:	dfc00717 	ldw	ra,28(sp)
   2714c:	dd800617 	ldw	r22,24(sp)
   27150:	dd400517 	ldw	r21,20(sp)
   27154:	dd000417 	ldw	r20,16(sp)
   27158:	dcc00317 	ldw	r19,12(sp)
   2715c:	dc800217 	ldw	r18,8(sp)
   27160:	dc400117 	ldw	r17,4(sp)
   27164:	dc000017 	ldw	r16,0(sp)
   27168:	dec00804 	addi	sp,sp,32
   2716c:	f800283a 	ret
   27170:	00800104 	movi	r2,4
   27174:	003fad06 	br	2702c <__multiply+0xec>
   27178:	01c000f4 	movhi	r7,3
   2717c:	010000f4 	movhi	r4,3
   27180:	39c1bc04 	addi	r7,r7,1776
   27184:	000d883a 	mov	r6,zero
   27188:	01405744 	movi	r5,349
   2718c:	2101d004 	addi	r4,r4,1856
   27190:	00298340 	call	29834 <__assert_func>

00027194 <__pow5mult>:
   27194:	defffb04 	addi	sp,sp,-20
   27198:	dcc00315 	stw	r19,12(sp)
   2719c:	dc000015 	stw	r16,0(sp)
   271a0:	dfc00415 	stw	ra,16(sp)
   271a4:	dc800215 	stw	r18,8(sp)
   271a8:	dc400115 	stw	r17,4(sp)
   271ac:	308000cc 	andi	r2,r6,3
   271b0:	3021883a 	mov	r16,r6
   271b4:	2027883a 	mov	r19,r4
   271b8:	10002b1e 	bne	r2,zero,27268 <__pow5mult+0xd4>
   271bc:	2825883a 	mov	r18,r5
   271c0:	8021d0ba 	srai	r16,r16,2
   271c4:	80001926 	beq	r16,zero,2722c <__pow5mult+0x98>
   271c8:	9c401217 	ldw	r17,72(r19)
   271cc:	8800061e 	bne	r17,zero,271e8 <__pow5mult+0x54>
   271d0:	00002d06 	br	27288 <__pow5mult+0xf4>
   271d4:	8021d07a 	srai	r16,r16,1
   271d8:	80001426 	beq	r16,zero,2722c <__pow5mult+0x98>
   271dc:	88800017 	ldw	r2,0(r17)
   271e0:	10001a26 	beq	r2,zero,2724c <__pow5mult+0xb8>
   271e4:	1023883a 	mov	r17,r2
   271e8:	8080004c 	andi	r2,r16,1
   271ec:	103ff926 	beq	r2,zero,271d4 <__pow5mult+0x40>
   271f0:	880d883a 	mov	r6,r17
   271f4:	900b883a 	mov	r5,r18
   271f8:	9809883a 	mov	r4,r19
   271fc:	0026f400 	call	26f40 <__multiply>
   27200:	90000726 	beq	r18,zero,27220 <__pow5mult+0x8c>
   27204:	91000117 	ldw	r4,4(r18)
   27208:	98c01317 	ldw	r3,76(r19)
   2720c:	200890ba 	slli	r4,r4,2
   27210:	1907883a 	add	r3,r3,r4
   27214:	19000017 	ldw	r4,0(r3)
   27218:	91000015 	stw	r4,0(r18)
   2721c:	1c800015 	stw	r18,0(r3)
   27220:	8021d07a 	srai	r16,r16,1
   27224:	1025883a 	mov	r18,r2
   27228:	803fec1e 	bne	r16,zero,271dc <__pow5mult+0x48>
   2722c:	9005883a 	mov	r2,r18
   27230:	dfc00417 	ldw	ra,16(sp)
   27234:	dcc00317 	ldw	r19,12(sp)
   27238:	dc800217 	ldw	r18,8(sp)
   2723c:	dc400117 	ldw	r17,4(sp)
   27240:	dc000017 	ldw	r16,0(sp)
   27244:	dec00504 	addi	sp,sp,20
   27248:	f800283a 	ret
   2724c:	880d883a 	mov	r6,r17
   27250:	880b883a 	mov	r5,r17
   27254:	9809883a 	mov	r4,r19
   27258:	0026f400 	call	26f40 <__multiply>
   2725c:	88800015 	stw	r2,0(r17)
   27260:	10000015 	stw	zero,0(r2)
   27264:	003fdf06 	br	271e4 <__pow5mult+0x50>
   27268:	100490ba 	slli	r2,r2,2
   2726c:	00c000f4 	movhi	r3,3
   27270:	000f883a 	mov	r7,zero
   27274:	10c7883a 	add	r3,r2,r3
   27278:	1981de17 	ldw	r6,1912(r3)
   2727c:	0026b040 	call	26b04 <__multadd>
   27280:	1025883a 	mov	r18,r2
   27284:	003fce06 	br	271c0 <__pow5mult+0x2c>
   27288:	01400044 	movi	r5,1
   2728c:	9809883a 	mov	r4,r19
   27290:	0026a3c0 	call	26a3c <_Balloc>
   27294:	1023883a 	mov	r17,r2
   27298:	10000726 	beq	r2,zero,272b8 <__pow5mult+0x124>
   2729c:	00809c44 	movi	r2,625
   272a0:	88800515 	stw	r2,20(r17)
   272a4:	00800044 	movi	r2,1
   272a8:	88800415 	stw	r2,16(r17)
   272ac:	9c401215 	stw	r17,72(r19)
   272b0:	88000015 	stw	zero,0(r17)
   272b4:	003fcc06 	br	271e8 <__pow5mult+0x54>
   272b8:	01c000f4 	movhi	r7,3
   272bc:	010000f4 	movhi	r4,3
   272c0:	39c1bc04 	addi	r7,r7,1776
   272c4:	000d883a 	mov	r6,zero
   272c8:	01405004 	movi	r5,320
   272cc:	2101d004 	addi	r4,r4,1856
   272d0:	00298340 	call	29834 <__assert_func>

000272d4 <__lshift>:
   272d4:	defff804 	addi	sp,sp,-32
   272d8:	dd800615 	stw	r22,24(sp)
   272dc:	dc400115 	stw	r17,4(sp)
   272e0:	302dd17a 	srai	r22,r6,5
   272e4:	2c400417 	ldw	r17,16(r5)
   272e8:	28800217 	ldw	r2,8(r5)
   272ec:	dd000415 	stw	r20,16(sp)
   272f0:	b463883a 	add	r17,r22,r17
   272f4:	dcc00315 	stw	r19,12(sp)
   272f8:	dc800215 	stw	r18,8(sp)
   272fc:	dc000015 	stw	r16,0(sp)
   27300:	dfc00715 	stw	ra,28(sp)
   27304:	dd400515 	stw	r21,20(sp)
   27308:	8d000044 	addi	r20,r17,1
   2730c:	2827883a 	mov	r19,r5
   27310:	3025883a 	mov	r18,r6
   27314:	29400117 	ldw	r5,4(r5)
   27318:	2021883a 	mov	r16,r4
   2731c:	1500030e 	bge	r2,r20,2732c <__lshift+0x58>
   27320:	1085883a 	add	r2,r2,r2
   27324:	29400044 	addi	r5,r5,1
   27328:	153ffd16 	blt	r2,r20,27320 <__lshift+0x4c>
   2732c:	8009883a 	mov	r4,r16
   27330:	0026a3c0 	call	26a3c <_Balloc>
   27334:	102b883a 	mov	r21,r2
   27338:	10004126 	beq	r2,zero,27440 <__lshift+0x16c>
   2733c:	11000504 	addi	r4,r2,20
   27340:	0580050e 	bge	zero,r22,27358 <__lshift+0x84>
   27344:	b02c90ba 	slli	r22,r22,2
   27348:	000b883a 	mov	r5,zero
   2734c:	b00d883a 	mov	r6,r22
   27350:	00269440 	call	26944 <memset>
   27354:	1589883a 	add	r4,r2,r22
   27358:	9a400417 	ldw	r9,16(r19)
   2735c:	98c00504 	addi	r3,r19,20
   27360:	948007cc 	andi	r18,r18,31
   27364:	481290ba 	slli	r9,r9,2
   27368:	1a53883a 	add	r9,r3,r9
   2736c:	90002c26 	beq	r18,zero,27420 <__lshift+0x14c>
   27370:	01400804 	movi	r5,32
   27374:	2c8bc83a 	sub	r5,r5,r18
   27378:	2005883a 	mov	r2,r4
   2737c:	0011883a 	mov	r8,zero
   27380:	19c00017 	ldw	r7,0(r3)
   27384:	10800104 	addi	r2,r2,4
   27388:	18c00104 	addi	r3,r3,4
   2738c:	3c8e983a 	sll	r7,r7,r18
   27390:	3a0eb03a 	or	r7,r7,r8
   27394:	11ffff15 	stw	r7,-4(r2)
   27398:	1a3fff17 	ldw	r8,-4(r3)
   2739c:	4150d83a 	srl	r8,r8,r5
   273a0:	1a7ff736 	bltu	r3,r9,27380 <__lshift+0xac>
   273a4:	98800544 	addi	r2,r19,21
   273a8:	48802336 	bltu	r9,r2,27438 <__lshift+0x164>
   273ac:	4cc7c83a 	sub	r3,r9,r19
   273b0:	18fffac4 	addi	r3,r3,-21
   273b4:	1806d0ba 	srli	r3,r3,2
   273b8:	18c00044 	addi	r3,r3,1
   273bc:	180690ba 	slli	r3,r3,2
   273c0:	20c9883a 	add	r4,r4,r3
   273c4:	22000015 	stw	r8,0(r4)
   273c8:	4000011e 	bne	r8,zero,273d0 <__lshift+0xfc>
   273cc:	8829883a 	mov	r20,r17
   273d0:	ad000415 	stw	r20,16(r21)
   273d4:	98000726 	beq	r19,zero,273f4 <__lshift+0x120>
   273d8:	98c00117 	ldw	r3,4(r19)
   273dc:	80801317 	ldw	r2,76(r16)
   273e0:	180690ba 	slli	r3,r3,2
   273e4:	10c5883a 	add	r2,r2,r3
   273e8:	10c00017 	ldw	r3,0(r2)
   273ec:	98c00015 	stw	r3,0(r19)
   273f0:	14c00015 	stw	r19,0(r2)
   273f4:	a805883a 	mov	r2,r21
   273f8:	dfc00717 	ldw	ra,28(sp)
   273fc:	dd800617 	ldw	r22,24(sp)
   27400:	dd400517 	ldw	r21,20(sp)
   27404:	dd000417 	ldw	r20,16(sp)
   27408:	dcc00317 	ldw	r19,12(sp)
   2740c:	dc800217 	ldw	r18,8(sp)
   27410:	dc400117 	ldw	r17,4(sp)
   27414:	dc000017 	ldw	r16,0(sp)
   27418:	dec00804 	addi	sp,sp,32
   2741c:	f800283a 	ret
   27420:	18800017 	ldw	r2,0(r3)
   27424:	18c00104 	addi	r3,r3,4
   27428:	21000104 	addi	r4,r4,4
   2742c:	20bfff15 	stw	r2,-4(r4)
   27430:	1a7ffb36 	bltu	r3,r9,27420 <__lshift+0x14c>
   27434:	003fe506 	br	273cc <__lshift+0xf8>
   27438:	00c00104 	movi	r3,4
   2743c:	003fe006 	br	273c0 <__lshift+0xec>
   27440:	01c000f4 	movhi	r7,3
   27444:	010000f4 	movhi	r4,3
   27448:	39c1bc04 	addi	r7,r7,1776
   2744c:	000d883a 	mov	r6,zero
   27450:	01407644 	movi	r5,473
   27454:	2101d004 	addi	r4,r4,1856
   27458:	00298340 	call	29834 <__assert_func>

0002745c <__mcmp>:
   2745c:	21800417 	ldw	r6,16(r4)
   27460:	28c00417 	ldw	r3,16(r5)
   27464:	30c5c83a 	sub	r2,r6,r3
   27468:	30c0101e 	bne	r6,r3,274ac <__mcmp+0x50>
   2746c:	180690ba 	slli	r3,r3,2
   27470:	21000504 	addi	r4,r4,20
   27474:	29400504 	addi	r5,r5,20
   27478:	20cd883a 	add	r6,r4,r3
   2747c:	28c7883a 	add	r3,r5,r3
   27480:	00000106 	br	27488 <__mcmp+0x2c>
   27484:	21800a2e 	bgeu	r4,r6,274b0 <__mcmp+0x54>
   27488:	31ffff17 	ldw	r7,-4(r6)
   2748c:	197fff17 	ldw	r5,-4(r3)
   27490:	31bfff04 	addi	r6,r6,-4
   27494:	18ffff04 	addi	r3,r3,-4
   27498:	397ffa26 	beq	r7,r5,27484 <__mcmp+0x28>
   2749c:	3940022e 	bgeu	r7,r5,274a8 <__mcmp+0x4c>
   274a0:	00bfffc4 	movi	r2,-1
   274a4:	f800283a 	ret
   274a8:	00800044 	movi	r2,1
   274ac:	f800283a 	ret
   274b0:	f800283a 	ret

000274b4 <__mdiff>:
   274b4:	28c00417 	ldw	r3,16(r5)
   274b8:	30800417 	ldw	r2,16(r6)
   274bc:	defffc04 	addi	sp,sp,-16
   274c0:	dc800215 	stw	r18,8(sp)
   274c4:	dc400115 	stw	r17,4(sp)
   274c8:	dc000015 	stw	r16,0(sp)
   274cc:	dfc00315 	stw	ra,12(sp)
   274d0:	2823883a 	mov	r17,r5
   274d4:	3021883a 	mov	r16,r6
   274d8:	18a5c83a 	sub	r18,r3,r2
   274dc:	1880121e 	bne	r3,r2,27528 <__mdiff+0x74>
   274e0:	100c90ba 	slli	r6,r2,2
   274e4:	29400504 	addi	r5,r5,20
   274e8:	80c00504 	addi	r3,r16,20
   274ec:	2985883a 	add	r2,r5,r6
   274f0:	1987883a 	add	r3,r3,r6
   274f4:	00000106 	br	274fc <__mdiff+0x48>
   274f8:	28805f2e 	bgeu	r5,r2,27678 <__mdiff+0x1c4>
   274fc:	11ffff17 	ldw	r7,-4(r2)
   27500:	19bfff17 	ldw	r6,-4(r3)
   27504:	10bfff04 	addi	r2,r2,-4
   27508:	18ffff04 	addi	r3,r3,-4
   2750c:	39bffa26 	beq	r7,r6,274f8 <__mdiff+0x44>
   27510:	3980072e 	bgeu	r7,r6,27530 <__mdiff+0x7c>
   27514:	8805883a 	mov	r2,r17
   27518:	04800044 	movi	r18,1
   2751c:	8023883a 	mov	r17,r16
   27520:	1021883a 	mov	r16,r2
   27524:	00000206 	br	27530 <__mdiff+0x7c>
   27528:	903ffa16 	blt	r18,zero,27514 <__mdiff+0x60>
   2752c:	0025883a 	mov	r18,zero
   27530:	89400117 	ldw	r5,4(r17)
   27534:	0026a3c0 	call	26a3c <_Balloc>
   27538:	10006326 	beq	r2,zero,276c8 <__mdiff+0x214>
   2753c:	8a400417 	ldw	r9,16(r17)
   27540:	83800417 	ldw	r14,16(r16)
   27544:	89400504 	addi	r5,r17,20
   27548:	481490ba 	slli	r10,r9,2
   2754c:	701c90ba 	slli	r14,r14,2
   27550:	81800504 	addi	r6,r16,20
   27554:	13400504 	addi	r13,r2,20
   27558:	14800315 	stw	r18,12(r2)
   2755c:	2a95883a 	add	r10,r5,r10
   27560:	339d883a 	add	r14,r6,r14
   27564:	6819883a 	mov	r12,r13
   27568:	2817883a 	mov	r11,r5
   2756c:	000f883a 	mov	r7,zero
   27570:	59000017 	ldw	r4,0(r11)
   27574:	32000017 	ldw	r8,0(r6)
   27578:	63000104 	addi	r12,r12,4
   2757c:	20ffffcc 	andi	r3,r4,65535
   27580:	43ffffcc 	andi	r15,r8,65535
   27584:	1bc7c83a 	sub	r3,r3,r15
   27588:	4010d43a 	srli	r8,r8,16
   2758c:	19c7883a 	add	r3,r3,r7
   27590:	2008d43a 	srli	r4,r4,16
   27594:	180fd43a 	srai	r7,r3,16
   27598:	18ffffcc 	andi	r3,r3,65535
   2759c:	2209c83a 	sub	r4,r4,r8
   275a0:	21c9883a 	add	r4,r4,r7
   275a4:	2010943a 	slli	r8,r4,16
   275a8:	31800104 	addi	r6,r6,4
   275ac:	200fd43a 	srai	r7,r4,16
   275b0:	1a06b03a 	or	r3,r3,r8
   275b4:	60ffff15 	stw	r3,-4(r12)
   275b8:	5ac00104 	addi	r11,r11,4
   275bc:	33bfec36 	bltu	r6,r14,27570 <__mdiff+0xbc>
   275c0:	7409c83a 	sub	r4,r14,r16
   275c4:	213ffac4 	addi	r4,r4,-21
   275c8:	84000544 	addi	r16,r16,21
   275cc:	200cd0ba 	srli	r6,r4,2
   275d0:	74002736 	bltu	r14,r16,27670 <__mdiff+0x1bc>
   275d4:	31000044 	addi	r4,r6,1
   275d8:	200890ba 	slli	r4,r4,2
   275dc:	290b883a 	add	r5,r5,r4
   275e0:	6911883a 	add	r8,r13,r4
   275e4:	2a802b2e 	bgeu	r5,r10,27694 <__mdiff+0x1e0>
   275e8:	4017883a 	mov	r11,r8
   275ec:	280d883a 	mov	r6,r5
   275f0:	30c00017 	ldw	r3,0(r6)
   275f4:	5ac00104 	addi	r11,r11,4
   275f8:	31800104 	addi	r6,r6,4
   275fc:	193fffcc 	andi	r4,r3,65535
   27600:	21c9883a 	add	r4,r4,r7
   27604:	1818d43a 	srli	r12,r3,16
   27608:	2009d43a 	srai	r4,r4,16
   2760c:	19c7883a 	add	r3,r3,r7
   27610:	18ffffcc 	andi	r3,r3,65535
   27614:	2309883a 	add	r4,r4,r12
   27618:	2018943a 	slli	r12,r4,16
   2761c:	200fd43a 	srai	r7,r4,16
   27620:	1b06b03a 	or	r3,r3,r12
   27624:	58ffff15 	stw	r3,-4(r11)
   27628:	32bff136 	bltu	r6,r10,275f0 <__mdiff+0x13c>
   2762c:	513fffc4 	addi	r4,r10,-1
   27630:	2149c83a 	sub	r4,r4,r5
   27634:	2008d0ba 	srli	r4,r4,2
   27638:	200890ba 	slli	r4,r4,2
   2763c:	4109883a 	add	r4,r8,r4
   27640:	1800041e 	bne	r3,zero,27654 <__mdiff+0x1a0>
   27644:	20ffff17 	ldw	r3,-4(r4)
   27648:	4a7fffc4 	addi	r9,r9,-1
   2764c:	213fff04 	addi	r4,r4,-4
   27650:	183ffc26 	beq	r3,zero,27644 <__mdiff+0x190>
   27654:	12400415 	stw	r9,16(r2)
   27658:	dfc00317 	ldw	ra,12(sp)
   2765c:	dc800217 	ldw	r18,8(sp)
   27660:	dc400117 	ldw	r17,4(sp)
   27664:	dc000017 	ldw	r16,0(sp)
   27668:	dec00404 	addi	sp,sp,16
   2766c:	f800283a 	ret
   27670:	01000104 	movi	r4,4
   27674:	003fd906 	br	275dc <__mdiff+0x128>
   27678:	000b883a 	mov	r5,zero
   2767c:	0026a3c0 	call	26a3c <_Balloc>
   27680:	10000a26 	beq	r2,zero,276ac <__mdiff+0x1f8>
   27684:	00c00044 	movi	r3,1
   27688:	10c00415 	stw	r3,16(r2)
   2768c:	10000515 	stw	zero,20(r2)
   27690:	003ff106 	br	27658 <__mdiff+0x1a4>
   27694:	74000336 	bltu	r14,r16,276a4 <__mdiff+0x1f0>
   27698:	300890ba 	slli	r4,r6,2
   2769c:	6909883a 	add	r4,r13,r4
   276a0:	003fe706 	br	27640 <__mdiff+0x18c>
   276a4:	0009883a 	mov	r4,zero
   276a8:	003ffc06 	br	2769c <__mdiff+0x1e8>
   276ac:	01c000f4 	movhi	r7,3
   276b0:	010000f4 	movhi	r4,3
   276b4:	39c1bc04 	addi	r7,r7,1776
   276b8:	000d883a 	mov	r6,zero
   276bc:	01408c84 	movi	r5,562
   276c0:	2101d004 	addi	r4,r4,1856
   276c4:	00298340 	call	29834 <__assert_func>
   276c8:	01c000f4 	movhi	r7,3
   276cc:	010000f4 	movhi	r4,3
   276d0:	39c1bc04 	addi	r7,r7,1776
   276d4:	000d883a 	mov	r6,zero
   276d8:	01409004 	movi	r5,576
   276dc:	2101d004 	addi	r4,r4,1856
   276e0:	00298340 	call	29834 <__assert_func>

000276e4 <__ulp>:
   276e4:	28dffc2c 	andhi	r3,r5,32752
   276e8:	00bf3034 	movhi	r2,64704
   276ec:	1887883a 	add	r3,r3,r2
   276f0:	00c0020e 	bge	zero,r3,276fc <__ulp+0x18>
   276f4:	0005883a 	mov	r2,zero
   276f8:	f800283a 	ret
   276fc:	00c7c83a 	sub	r3,zero,r3
   27700:	1807d53a 	srai	r3,r3,20
   27704:	18800508 	cmpgei	r2,r3,20
   27708:	1000041e 	bne	r2,zero,2771c <__ulp+0x38>
   2770c:	00800234 	movhi	r2,8
   27710:	10c7d83a 	sra	r3,r2,r3
   27714:	0005883a 	mov	r2,zero
   27718:	f800283a 	ret
   2771c:	18fffb04 	addi	r3,r3,-20
   27720:	188007c8 	cmpgei	r2,r3,31
   27724:	10000326 	beq	r2,zero,27734 <__ulp+0x50>
   27728:	00800044 	movi	r2,1
   2772c:	0007883a 	mov	r3,zero
   27730:	f800283a 	ret
   27734:	00a00034 	movhi	r2,32768
   27738:	10c4d83a 	srl	r2,r2,r3
   2773c:	0007883a 	mov	r3,zero
   27740:	f800283a 	ret

00027744 <__b2d>:
   27744:	defffa04 	addi	sp,sp,-24
   27748:	dc400115 	stw	r17,4(sp)
   2774c:	24400417 	ldw	r17,16(r4)
   27750:	dc000015 	stw	r16,0(sp)
   27754:	24000504 	addi	r16,r4,20
   27758:	882290ba 	slli	r17,r17,2
   2775c:	dc800215 	stw	r18,8(sp)
   27760:	dd000415 	stw	r20,16(sp)
   27764:	8463883a 	add	r17,r16,r17
   27768:	8cbfff17 	ldw	r18,-4(r17)
   2776c:	dcc00315 	stw	r19,12(sp)
   27770:	dfc00515 	stw	ra,20(sp)
   27774:	9009883a 	mov	r4,r18
   27778:	2827883a 	mov	r19,r5
   2777c:	0026d6c0 	call	26d6c <__hi0bits>
   27780:	00c00804 	movi	r3,32
   27784:	1889c83a 	sub	r4,r3,r2
   27788:	99000015 	stw	r4,0(r19)
   2778c:	110002c8 	cmpgei	r4,r2,11
   27790:	8d3fff04 	addi	r20,r17,-4
   27794:	20001b26 	beq	r4,zero,27804 <__b2d+0xc0>
   27798:	117ffd44 	addi	r5,r2,-11
   2779c:	85000e2e 	bgeu	r16,r20,277d8 <__b2d+0x94>
   277a0:	88bffe17 	ldw	r2,-8(r17)
   277a4:	28000e26 	beq	r5,zero,277e0 <__b2d+0x9c>
   277a8:	1949c83a 	sub	r4,r3,r5
   277ac:	1106d83a 	srl	r3,r2,r4
   277b0:	9164983a 	sll	r18,r18,r5
   277b4:	89bffe04 	addi	r6,r17,-8
   277b8:	1144983a 	sll	r2,r2,r5
   277bc:	90c6b03a 	or	r3,r18,r3
   277c0:	18cffc34 	orhi	r3,r3,16368
   277c4:	8180072e 	bgeu	r16,r6,277e4 <__b2d+0xa0>
   277c8:	897ffd17 	ldw	r5,-12(r17)
   277cc:	2908d83a 	srl	r4,r5,r4
   277d0:	1104b03a 	or	r2,r2,r4
   277d4:	00000306 	br	277e4 <__b2d+0xa0>
   277d8:	108002d8 	cmpnei	r2,r2,11
   277dc:	1000161e 	bne	r2,zero,27838 <__b2d+0xf4>
   277e0:	90cffc34 	orhi	r3,r18,16368
   277e4:	dfc00517 	ldw	ra,20(sp)
   277e8:	dd000417 	ldw	r20,16(sp)
   277ec:	dcc00317 	ldw	r19,12(sp)
   277f0:	dc800217 	ldw	r18,8(sp)
   277f4:	dc400117 	ldw	r17,4(sp)
   277f8:	dc000017 	ldw	r16,0(sp)
   277fc:	dec00604 	addi	sp,sp,24
   27800:	f800283a 	ret
   27804:	014002c4 	movi	r5,11
   27808:	288bc83a 	sub	r5,r5,r2
   2780c:	9146d83a 	srl	r3,r18,r5
   27810:	18cffc34 	orhi	r3,r3,16368
   27814:	85000536 	bltu	r16,r20,2782c <__b2d+0xe8>
   27818:	0009883a 	mov	r4,zero
   2781c:	10800544 	addi	r2,r2,21
   27820:	90a4983a 	sll	r18,r18,r2
   27824:	9104b03a 	or	r2,r18,r4
   27828:	003fee06 	br	277e4 <__b2d+0xa0>
   2782c:	893ffe17 	ldw	r4,-8(r17)
   27830:	2148d83a 	srl	r4,r4,r5
   27834:	003ff906 	br	2781c <__b2d+0xd8>
   27838:	9164983a 	sll	r18,r18,r5
   2783c:	0005883a 	mov	r2,zero
   27840:	003fe706 	br	277e0 <__b2d+0x9c>

00027844 <__d2b>:
   27844:	defff804 	addi	sp,sp,-32
   27848:	dd000615 	stw	r20,24(sp)
   2784c:	2829883a 	mov	r20,r5
   27850:	01400044 	movi	r5,1
   27854:	dcc00515 	stw	r19,20(sp)
   27858:	dc000215 	stw	r16,8(sp)
   2785c:	dfc00715 	stw	ra,28(sp)
   27860:	dc800415 	stw	r18,16(sp)
   27864:	dc400315 	stw	r17,12(sp)
   27868:	3021883a 	mov	r16,r6
   2786c:	3827883a 	mov	r19,r7
   27870:	0026a3c0 	call	26a3c <_Balloc>
   27874:	10004226 	beq	r2,zero,27980 <__d2b+0x13c>
   27878:	8024d53a 	srli	r18,r16,20
   2787c:	1023883a 	mov	r17,r2
   27880:	00800434 	movhi	r2,16
   27884:	10bfffc4 	addi	r2,r2,-1
   27888:	9481ffcc 	andi	r18,r18,2047
   2788c:	80a0703a 	and	r16,r16,r2
   27890:	90000126 	beq	r18,zero,27898 <__d2b+0x54>
   27894:	84000434 	orhi	r16,r16,16
   27898:	dc000115 	stw	r16,4(sp)
   2789c:	a0001b26 	beq	r20,zero,2790c <__d2b+0xc8>
   278a0:	d809883a 	mov	r4,sp
   278a4:	dd000015 	stw	r20,0(sp)
   278a8:	0026de00 	call	26de0 <__lo0bits>
   278ac:	d8c00117 	ldw	r3,4(sp)
   278b0:	10003026 	beq	r2,zero,27974 <__d2b+0x130>
   278b4:	01000804 	movi	r4,32
   278b8:	2089c83a 	sub	r4,r4,r2
   278bc:	1908983a 	sll	r4,r3,r4
   278c0:	d9400017 	ldw	r5,0(sp)
   278c4:	1886d83a 	srl	r3,r3,r2
   278c8:	2148b03a 	or	r4,r4,r5
   278cc:	89000515 	stw	r4,20(r17)
   278d0:	d8c00115 	stw	r3,4(sp)
   278d4:	88c00615 	stw	r3,24(r17)
   278d8:	18002426 	beq	r3,zero,2796c <__d2b+0x128>
   278dc:	04000084 	movi	r16,2
   278e0:	8c000415 	stw	r16,16(r17)
   278e4:	9000111e 	bne	r18,zero,2792c <__d2b+0xe8>
   278e8:	800690ba 	slli	r3,r16,2
   278ec:	10bef384 	addi	r2,r2,-1074
   278f0:	98800015 	stw	r2,0(r19)
   278f4:	88c5883a 	add	r2,r17,r3
   278f8:	11000417 	ldw	r4,16(r2)
   278fc:	8020917a 	slli	r16,r16,5
   27900:	0026d6c0 	call	26d6c <__hi0bits>
   27904:	8085c83a 	sub	r2,r16,r2
   27908:	00000d06 	br	27940 <__d2b+0xfc>
   2790c:	d9000104 	addi	r4,sp,4
   27910:	0026de00 	call	26de0 <__lo0bits>
   27914:	d8c00117 	ldw	r3,4(sp)
   27918:	10800804 	addi	r2,r2,32
   2791c:	04000044 	movi	r16,1
   27920:	88c00515 	stw	r3,20(r17)
   27924:	8c000415 	stw	r16,16(r17)
   27928:	903fef26 	beq	r18,zero,278e8 <__d2b+0xa4>
   2792c:	94bef344 	addi	r18,r18,-1075
   27930:	90a5883a 	add	r18,r18,r2
   27934:	04000d44 	movi	r16,53
   27938:	9c800015 	stw	r18,0(r19)
   2793c:	8085c83a 	sub	r2,r16,r2
   27940:	d8c00817 	ldw	r3,32(sp)
   27944:	18800015 	stw	r2,0(r3)
   27948:	8805883a 	mov	r2,r17
   2794c:	dfc00717 	ldw	ra,28(sp)
   27950:	dd000617 	ldw	r20,24(sp)
   27954:	dcc00517 	ldw	r19,20(sp)
   27958:	dc800417 	ldw	r18,16(sp)
   2795c:	dc400317 	ldw	r17,12(sp)
   27960:	dc000217 	ldw	r16,8(sp)
   27964:	dec00804 	addi	sp,sp,32
   27968:	f800283a 	ret
   2796c:	04000044 	movi	r16,1
   27970:	003fec06 	br	27924 <__d2b+0xe0>
   27974:	d9000017 	ldw	r4,0(sp)
   27978:	89000515 	stw	r4,20(r17)
   2797c:	003fd506 	br	278d4 <__d2b+0x90>
   27980:	01c000f4 	movhi	r7,3
   27984:	010000f4 	movhi	r4,3
   27988:	39c1bc04 	addi	r7,r7,1776
   2798c:	000d883a 	mov	r6,zero
   27990:	0140c284 	movi	r5,778
   27994:	2101d004 	addi	r4,r4,1856
   27998:	00298340 	call	29834 <__assert_func>

0002799c <__ratio>:
   2799c:	defff904 	addi	sp,sp,-28
   279a0:	dc400315 	stw	r17,12(sp)
   279a4:	2823883a 	mov	r17,r5
   279a8:	d80b883a 	mov	r5,sp
   279ac:	dfc00615 	stw	ra,24(sp)
   279b0:	dcc00515 	stw	r19,20(sp)
   279b4:	dc800415 	stw	r18,16(sp)
   279b8:	2027883a 	mov	r19,r4
   279bc:	dc000215 	stw	r16,8(sp)
   279c0:	00277440 	call	27744 <__b2d>
   279c4:	d9400104 	addi	r5,sp,4
   279c8:	8809883a 	mov	r4,r17
   279cc:	1025883a 	mov	r18,r2
   279d0:	1821883a 	mov	r16,r3
   279d4:	00277440 	call	27744 <__b2d>
   279d8:	89000417 	ldw	r4,16(r17)
   279dc:	9a000417 	ldw	r8,16(r19)
   279e0:	d9400117 	ldw	r5,4(sp)
   279e4:	100d883a 	mov	r6,r2
   279e8:	4111c83a 	sub	r8,r8,r4
   279ec:	d9000017 	ldw	r4,0(sp)
   279f0:	4010917a 	slli	r8,r8,5
   279f4:	180f883a 	mov	r7,r3
   279f8:	2149c83a 	sub	r4,r4,r5
   279fc:	4111883a 	add	r8,r8,r4
   27a00:	02000c0e 	bge	zero,r8,27a34 <__ratio+0x98>
   27a04:	4010953a 	slli	r8,r8,20
   27a08:	4421883a 	add	r16,r8,r16
   27a0c:	9009883a 	mov	r4,r18
   27a10:	800b883a 	mov	r5,r16
   27a14:	002bc0c0 	call	2bc0c <__divdf3>
   27a18:	dfc00617 	ldw	ra,24(sp)
   27a1c:	dcc00517 	ldw	r19,20(sp)
   27a20:	dc800417 	ldw	r18,16(sp)
   27a24:	dc400317 	ldw	r17,12(sp)
   27a28:	dc000217 	ldw	r16,8(sp)
   27a2c:	dec00704 	addi	sp,sp,28
   27a30:	f800283a 	ret
   27a34:	00bffc34 	movhi	r2,65520
   27a38:	4091383a 	mul	r8,r8,r2
   27a3c:	40cf883a 	add	r7,r8,r3
   27a40:	003ff206 	br	27a0c <__ratio+0x70>

00027a44 <_mprec_log10>:
   27a44:	defffe04 	addi	sp,sp,-8
   27a48:	dc000015 	stw	r16,0(sp)
   27a4c:	dfc00115 	stw	ra,4(sp)
   27a50:	20800608 	cmpgei	r2,r4,24
   27a54:	2021883a 	mov	r16,r4
   27a58:	10000f26 	beq	r2,zero,27a98 <_mprec_log10+0x54>
   27a5c:	0009883a 	mov	r4,zero
   27a60:	014ffc34 	movhi	r5,16368
   27a64:	000d883a 	mov	r6,zero
   27a68:	01d00934 	movhi	r7,16420
   27a6c:	002c6dc0 	call	2c6dc <__muldf3>
   27a70:	843fffc4 	addi	r16,r16,-1
   27a74:	1009883a 	mov	r4,r2
   27a78:	180b883a 	mov	r5,r3
   27a7c:	803ff91e 	bne	r16,zero,27a64 <_mprec_log10+0x20>
   27a80:	2005883a 	mov	r2,r4
   27a84:	2807883a 	mov	r3,r5
   27a88:	dfc00117 	ldw	ra,4(sp)
   27a8c:	dc000017 	ldw	r16,0(sp)
   27a90:	dec00204 	addi	sp,sp,8
   27a94:	f800283a 	ret
   27a98:	202090fa 	slli	r16,r4,3
   27a9c:	008000f4 	movhi	r2,3
   27aa0:	1081f604 	addi	r2,r2,2008
   27aa4:	1405883a 	add	r2,r2,r16
   27aa8:	11000017 	ldw	r4,0(r2)
   27aac:	11400117 	ldw	r5,4(r2)
   27ab0:	003ff306 	br	27a80 <_mprec_log10+0x3c>

00027ab4 <__copybits>:
   27ab4:	297fffc4 	addi	r5,r5,-1
   27ab8:	280fd17a 	srai	r7,r5,5
   27abc:	31400417 	ldw	r5,16(r6)
   27ac0:	30800504 	addi	r2,r6,20
   27ac4:	39c00044 	addi	r7,r7,1
   27ac8:	280a90ba 	slli	r5,r5,2
   27acc:	380e90ba 	slli	r7,r7,2
   27ad0:	114b883a 	add	r5,r2,r5
   27ad4:	21cf883a 	add	r7,r4,r7
   27ad8:	11400c2e 	bgeu	r2,r5,27b0c <__copybits+0x58>
   27adc:	2007883a 	mov	r3,r4
   27ae0:	12000017 	ldw	r8,0(r2)
   27ae4:	10800104 	addi	r2,r2,4
   27ae8:	18c00104 	addi	r3,r3,4
   27aec:	1a3fff15 	stw	r8,-4(r3)
   27af0:	117ffb36 	bltu	r2,r5,27ae0 <__copybits+0x2c>
   27af4:	2985c83a 	sub	r2,r5,r6
   27af8:	10bffac4 	addi	r2,r2,-21
   27afc:	1004d0ba 	srli	r2,r2,2
   27b00:	10800044 	addi	r2,r2,1
   27b04:	100490ba 	slli	r2,r2,2
   27b08:	2089883a 	add	r4,r4,r2
   27b0c:	21c0072e 	bgeu	r4,r7,27b2c <__copybits+0x78>
   27b10:	39bfffc4 	addi	r6,r7,-1
   27b14:	310dc83a 	sub	r6,r6,r4
   27b18:	300cd0ba 	srli	r6,r6,2
   27b1c:	000b883a 	mov	r5,zero
   27b20:	31800044 	addi	r6,r6,1
   27b24:	300c90ba 	slli	r6,r6,2
   27b28:	00269441 	jmpi	26944 <memset>
   27b2c:	f800283a 	ret

00027b30 <__any_on>:
   27b30:	20c00417 	ldw	r3,16(r4)
   27b34:	280dd17a 	srai	r6,r5,5
   27b38:	21000504 	addi	r4,r4,20
   27b3c:	1980080e 	bge	r3,r6,27b60 <__any_on+0x30>
   27b40:	180690ba 	slli	r3,r3,2
   27b44:	20c5883a 	add	r2,r4,r3
   27b48:	20800f2e 	bgeu	r4,r2,27b88 <__any_on+0x58>
   27b4c:	10ffff17 	ldw	r3,-4(r2)
   27b50:	10bfff04 	addi	r2,r2,-4
   27b54:	183ffc26 	beq	r3,zero,27b48 <__any_on+0x18>
   27b58:	00800044 	movi	r2,1
   27b5c:	f800283a 	ret
   27b60:	300490ba 	slli	r2,r6,2
   27b64:	2085883a 	add	r2,r4,r2
   27b68:	30fff70e 	bge	r6,r3,27b48 <__any_on+0x18>
   27b6c:	294007cc 	andi	r5,r5,31
   27b70:	283ff526 	beq	r5,zero,27b48 <__any_on+0x18>
   27b74:	11800017 	ldw	r6,0(r2)
   27b78:	3146d83a 	srl	r3,r6,r5
   27b7c:	1946983a 	sll	r3,r3,r5
   27b80:	30fff51e 	bne	r6,r3,27b58 <__any_on+0x28>
   27b84:	003ff006 	br	27b48 <__any_on+0x18>
   27b88:	0005883a 	mov	r2,zero
   27b8c:	f800283a 	ret

00027b90 <_realloc_r>:
   27b90:	defff504 	addi	sp,sp,-44
   27b94:	dd000515 	stw	r20,20(sp)
   27b98:	dfc00a15 	stw	ra,40(sp)
   27b9c:	df000915 	stw	fp,36(sp)
   27ba0:	ddc00815 	stw	r23,32(sp)
   27ba4:	dd800715 	stw	r22,28(sp)
   27ba8:	dd400615 	stw	r21,24(sp)
   27bac:	dcc00415 	stw	r19,16(sp)
   27bb0:	dc800315 	stw	r18,12(sp)
   27bb4:	dc400215 	stw	r17,8(sp)
   27bb8:	dc000115 	stw	r16,4(sp)
   27bbc:	3029883a 	mov	r20,r6
   27bc0:	28008a26 	beq	r5,zero,27dec <_realloc_r+0x25c>
   27bc4:	2821883a 	mov	r16,r5
   27bc8:	202b883a 	mov	r21,r4
   27bcc:	002e0c00 	call	2e0c0 <__malloc_lock>
   27bd0:	84ffff17 	ldw	r19,-4(r16)
   27bd4:	a44002c4 	addi	r17,r20,11
   27bd8:	04bfff04 	movi	r18,-4
   27bdc:	888005f0 	cmpltui	r2,r17,23
   27be0:	85bffe04 	addi	r22,r16,-8
   27be4:	9ca4703a 	and	r18,r19,r18
   27be8:	10005a1e 	bne	r2,zero,27d54 <_realloc_r+0x1c4>
   27bec:	00bffe04 	movi	r2,-8
   27bf0:	88a2703a 	and	r17,r17,r2
   27bf4:	88005916 	blt	r17,zero,27d5c <_realloc_r+0x1cc>
   27bf8:	8d005836 	bltu	r17,r20,27d5c <_realloc_r+0x1cc>
   27bfc:	94403b0e 	bge	r18,r17,27cec <_realloc_r+0x15c>
   27c00:	05c000f4 	movhi	r23,3
   27c04:	bdc44504 	addi	r23,r23,4372
   27c08:	b9400217 	ldw	r5,8(r23)
   27c0c:	b489883a 	add	r4,r22,r18
   27c10:	20800117 	ldw	r2,4(r4)
   27c14:	29008e26 	beq	r5,r4,27e50 <_realloc_r+0x2c0>
   27c18:	00ffff84 	movi	r3,-2
   27c1c:	10c6703a 	and	r3,r2,r3
   27c20:	20c7883a 	add	r3,r4,r3
   27c24:	18c00117 	ldw	r3,4(r3)
   27c28:	18c0004c 	andi	r3,r3,1
   27c2c:	18004f1e 	bne	r3,zero,27d6c <_realloc_r+0x1dc>
   27c30:	00ffff04 	movi	r3,-4
   27c34:	10c4703a 	and	r2,r2,r3
   27c38:	9087883a 	add	r3,r18,r2
   27c3c:	1c40c30e 	bge	r3,r17,27f4c <_realloc_r+0x3bc>
   27c40:	9cc0004c 	andi	r19,r19,1
   27c44:	98004b1e 	bne	r19,zero,27d74 <_realloc_r+0x1e4>
   27c48:	873ffe17 	ldw	fp,-8(r16)
   27c4c:	00ffff04 	movi	r3,-4
   27c50:	b739c83a 	sub	fp,r22,fp
   27c54:	e4c00117 	ldw	r19,4(fp)
   27c58:	98c6703a 	and	r3,r19,r3
   27c5c:	20000426 	beq	r4,zero,27c70 <_realloc_r+0xe0>
   27c60:	90cf883a 	add	r7,r18,r3
   27c64:	388f883a 	add	r7,r7,r2
   27c68:	2900c226 	beq	r5,r4,27f74 <_realloc_r+0x3e4>
   27c6c:	3c409e0e 	bge	r7,r17,27ee8 <_realloc_r+0x358>
   27c70:	e0004026 	beq	fp,zero,27d74 <_realloc_r+0x1e4>
   27c74:	90ef883a 	add	r23,r18,r3
   27c78:	bc403e16 	blt	r23,r17,27d74 <_realloc_r+0x1e4>
   27c7c:	e0800317 	ldw	r2,12(fp)
   27c80:	e0c00217 	ldw	r3,8(fp)
   27c84:	91bfff04 	addi	r6,r18,-4
   27c88:	31400968 	cmpgeui	r5,r6,37
   27c8c:	18800315 	stw	r2,12(r3)
   27c90:	10c00215 	stw	r3,8(r2)
   27c94:	e1000204 	addi	r4,fp,8
   27c98:	2800e71e 	bne	r5,zero,28038 <_realloc_r+0x4a8>
   27c9c:	30800530 	cmpltui	r2,r6,20
   27ca0:	1000e31e 	bne	r2,zero,28030 <_realloc_r+0x4a0>
   27ca4:	80c00017 	ldw	r3,0(r16)
   27ca8:	30800728 	cmpgeui	r2,r6,28
   27cac:	e0c00215 	stw	r3,8(fp)
   27cb0:	80c00117 	ldw	r3,4(r16)
   27cb4:	e0c00315 	stw	r3,12(fp)
   27cb8:	1000fa1e 	bne	r2,zero,280a4 <_realloc_r+0x514>
   27cbc:	84000204 	addi	r16,r16,8
   27cc0:	e0800404 	addi	r2,fp,16
   27cc4:	80c00017 	ldw	r3,0(r16)
   27cc8:	b825883a 	mov	r18,r23
   27ccc:	10c00015 	stw	r3,0(r2)
   27cd0:	80c00117 	ldw	r3,4(r16)
   27cd4:	e02d883a 	mov	r22,fp
   27cd8:	10c00115 	stw	r3,4(r2)
   27cdc:	80c00217 	ldw	r3,8(r16)
   27ce0:	2021883a 	mov	r16,r4
   27ce4:	10c00215 	stw	r3,8(r2)
   27ce8:	e4c00117 	ldw	r19,4(fp)
   27cec:	9447c83a 	sub	r3,r18,r17
   27cf0:	19000430 	cmpltui	r4,r3,16
   27cf4:	9cc0004c 	andi	r19,r19,1
   27cf8:	b485883a 	add	r2,r22,r18
   27cfc:	20004826 	beq	r4,zero,27e20 <_realloc_r+0x290>
   27d00:	94e6b03a 	or	r19,r18,r19
   27d04:	b4c00115 	stw	r19,4(r22)
   27d08:	10c00117 	ldw	r3,4(r2)
   27d0c:	18c00054 	ori	r3,r3,1
   27d10:	10c00115 	stw	r3,4(r2)
   27d14:	a809883a 	mov	r4,r21
   27d18:	002e0e40 	call	2e0e4 <__malloc_unlock>
   27d1c:	8029883a 	mov	r20,r16
   27d20:	a005883a 	mov	r2,r20
   27d24:	dfc00a17 	ldw	ra,40(sp)
   27d28:	df000917 	ldw	fp,36(sp)
   27d2c:	ddc00817 	ldw	r23,32(sp)
   27d30:	dd800717 	ldw	r22,28(sp)
   27d34:	dd400617 	ldw	r21,24(sp)
   27d38:	dd000517 	ldw	r20,20(sp)
   27d3c:	dcc00417 	ldw	r19,16(sp)
   27d40:	dc800317 	ldw	r18,12(sp)
   27d44:	dc400217 	ldw	r17,8(sp)
   27d48:	dc000117 	ldw	r16,4(sp)
   27d4c:	dec00b04 	addi	sp,sp,44
   27d50:	f800283a 	ret
   27d54:	04400404 	movi	r17,16
   27d58:	8d3fa82e 	bgeu	r17,r20,27bfc <_realloc_r+0x6c>
   27d5c:	00800304 	movi	r2,12
   27d60:	a8800015 	stw	r2,0(r21)
   27d64:	0029883a 	mov	r20,zero
   27d68:	003fed06 	br	27d20 <_realloc_r+0x190>
   27d6c:	9cc0004c 	andi	r19,r19,1
   27d70:	98004e26 	beq	r19,zero,27eac <_realloc_r+0x31c>
   27d74:	a00b883a 	mov	r5,r20
   27d78:	a809883a 	mov	r4,r21
   27d7c:	0025e980 	call	25e98 <_malloc_r>
   27d80:	1029883a 	mov	r20,r2
   27d84:	1000bd26 	beq	r2,zero,2807c <_realloc_r+0x4ec>
   27d88:	84ffff17 	ldw	r19,-4(r16)
   27d8c:	10fffe04 	addi	r3,r2,-8
   27d90:	00bfff84 	movi	r2,-2
   27d94:	9884703a 	and	r2,r19,r2
   27d98:	b085883a 	add	r2,r22,r2
   27d9c:	10c03e26 	beq	r2,r3,27e98 <_realloc_r+0x308>
   27da0:	91bfff04 	addi	r6,r18,-4
   27da4:	30800968 	cmpgeui	r2,r6,37
   27da8:	10006e1e 	bne	r2,zero,27f64 <_realloc_r+0x3d4>
   27dac:	30800530 	cmpltui	r2,r6,20
   27db0:	10004426 	beq	r2,zero,27ec4 <_realloc_r+0x334>
   27db4:	a005883a 	mov	r2,r20
   27db8:	8007883a 	mov	r3,r16
   27dbc:	19000017 	ldw	r4,0(r3)
   27dc0:	11000015 	stw	r4,0(r2)
   27dc4:	19000117 	ldw	r4,4(r3)
   27dc8:	11000115 	stw	r4,4(r2)
   27dcc:	18c00217 	ldw	r3,8(r3)
   27dd0:	10c00215 	stw	r3,8(r2)
   27dd4:	a809883a 	mov	r4,r21
   27dd8:	800b883a 	mov	r5,r16
   27ddc:	00253600 	call	25360 <_free_r>
   27de0:	a809883a 	mov	r4,r21
   27de4:	002e0e40 	call	2e0e4 <__malloc_unlock>
   27de8:	003fcd06 	br	27d20 <_realloc_r+0x190>
   27dec:	300b883a 	mov	r5,r6
   27df0:	dfc00a17 	ldw	ra,40(sp)
   27df4:	df000917 	ldw	fp,36(sp)
   27df8:	ddc00817 	ldw	r23,32(sp)
   27dfc:	dd800717 	ldw	r22,28(sp)
   27e00:	dd400617 	ldw	r21,24(sp)
   27e04:	dd000517 	ldw	r20,20(sp)
   27e08:	dcc00417 	ldw	r19,16(sp)
   27e0c:	dc800317 	ldw	r18,12(sp)
   27e10:	dc400217 	ldw	r17,8(sp)
   27e14:	dc000117 	ldw	r16,4(sp)
   27e18:	dec00b04 	addi	sp,sp,44
   27e1c:	0025e981 	jmpi	25e98 <_malloc_r>
   27e20:	8ce6b03a 	or	r19,r17,r19
   27e24:	b4c00115 	stw	r19,4(r22)
   27e28:	b44b883a 	add	r5,r22,r17
   27e2c:	18c00054 	ori	r3,r3,1
   27e30:	28c00115 	stw	r3,4(r5)
   27e34:	10c00117 	ldw	r3,4(r2)
   27e38:	29400204 	addi	r5,r5,8
   27e3c:	a809883a 	mov	r4,r21
   27e40:	18c00054 	ori	r3,r3,1
   27e44:	10c00115 	stw	r3,4(r2)
   27e48:	00253600 	call	25360 <_free_r>
   27e4c:	003fb106 	br	27d14 <_realloc_r+0x184>
   27e50:	00ffff04 	movi	r3,-4
   27e54:	10c4703a 	and	r2,r2,r3
   27e58:	1487883a 	add	r3,r2,r18
   27e5c:	89800404 	addi	r6,r17,16
   27e60:	19bf7716 	blt	r3,r6,27c40 <_realloc_r+0xb0>
   27e64:	b46d883a 	add	r22,r22,r17
   27e68:	1c45c83a 	sub	r2,r3,r17
   27e6c:	bd800215 	stw	r22,8(r23)
   27e70:	10800054 	ori	r2,r2,1
   27e74:	b0800115 	stw	r2,4(r22)
   27e78:	80bfff17 	ldw	r2,-4(r16)
   27e7c:	a809883a 	mov	r4,r21
   27e80:	8029883a 	mov	r20,r16
   27e84:	1080004c 	andi	r2,r2,1
   27e88:	1444b03a 	or	r2,r2,r17
   27e8c:	80bfff15 	stw	r2,-4(r16)
   27e90:	002e0e40 	call	2e0e4 <__malloc_unlock>
   27e94:	003fa206 	br	27d20 <_realloc_r+0x190>
   27e98:	a0bfff17 	ldw	r2,-4(r20)
   27e9c:	00ffff04 	movi	r3,-4
   27ea0:	10c4703a 	and	r2,r2,r3
   27ea4:	90a5883a 	add	r18,r18,r2
   27ea8:	003f9006 	br	27cec <_realloc_r+0x15c>
   27eac:	873ffe17 	ldw	fp,-8(r16)
   27eb0:	00bfff04 	movi	r2,-4
   27eb4:	b739c83a 	sub	fp,r22,fp
   27eb8:	e0c00117 	ldw	r3,4(fp)
   27ebc:	1886703a 	and	r3,r3,r2
   27ec0:	003f6b06 	br	27c70 <_realloc_r+0xe0>
   27ec4:	80c00017 	ldw	r3,0(r16)
   27ec8:	30800728 	cmpgeui	r2,r6,28
   27ecc:	a0c00015 	stw	r3,0(r20)
   27ed0:	80c00117 	ldw	r3,4(r16)
   27ed4:	a0c00115 	stw	r3,4(r20)
   27ed8:	10004c1e 	bne	r2,zero,2800c <_realloc_r+0x47c>
   27edc:	80c00204 	addi	r3,r16,8
   27ee0:	a0800204 	addi	r2,r20,8
   27ee4:	003fb506 	br	27dbc <_realloc_r+0x22c>
   27ee8:	20800317 	ldw	r2,12(r4)
   27eec:	20c00217 	ldw	r3,8(r4)
   27ef0:	91bfff04 	addi	r6,r18,-4
   27ef4:	31400968 	cmpgeui	r5,r6,37
   27ef8:	18800315 	stw	r2,12(r3)
   27efc:	10c00215 	stw	r3,8(r2)
   27f00:	e0c00217 	ldw	r3,8(fp)
   27f04:	e0800317 	ldw	r2,12(fp)
   27f08:	e1000204 	addi	r4,fp,8
   27f0c:	18800315 	stw	r2,12(r3)
   27f10:	10c00215 	stw	r3,8(r2)
   27f14:	2800511e 	bne	r5,zero,2805c <_realloc_r+0x4cc>
   27f18:	30800530 	cmpltui	r2,r6,20
   27f1c:	10004d1e 	bne	r2,zero,28054 <_realloc_r+0x4c4>
   27f20:	80c00017 	ldw	r3,0(r16)
   27f24:	30800728 	cmpgeui	r2,r6,28
   27f28:	e0c00215 	stw	r3,8(fp)
   27f2c:	80c00117 	ldw	r3,4(r16)
   27f30:	e0c00315 	stw	r3,12(fp)
   27f34:	1000641e 	bne	r2,zero,280c8 <_realloc_r+0x538>
   27f38:	84000204 	addi	r16,r16,8
   27f3c:	e0800404 	addi	r2,fp,16
   27f40:	80c00017 	ldw	r3,0(r16)
   27f44:	3825883a 	mov	r18,r7
   27f48:	003f6006 	br	27ccc <_realloc_r+0x13c>
   27f4c:	20800317 	ldw	r2,12(r4)
   27f50:	21000217 	ldw	r4,8(r4)
   27f54:	1825883a 	mov	r18,r3
   27f58:	20800315 	stw	r2,12(r4)
   27f5c:	11000215 	stw	r4,8(r2)
   27f60:	003f6206 	br	27cec <_realloc_r+0x15c>
   27f64:	800b883a 	mov	r5,r16
   27f68:	a009883a 	mov	r4,r20
   27f6c:	002681c0 	call	2681c <memmove>
   27f70:	003f9806 	br	27dd4 <_realloc_r+0x244>
   27f74:	88800404 	addi	r2,r17,16
   27f78:	38bf3d16 	blt	r7,r2,27c70 <_realloc_r+0xe0>
   27f7c:	e0800317 	ldw	r2,12(fp)
   27f80:	e0c00217 	ldw	r3,8(fp)
   27f84:	91bfff04 	addi	r6,r18,-4
   27f88:	31000968 	cmpgeui	r4,r6,37
   27f8c:	18800315 	stw	r2,12(r3)
   27f90:	10c00215 	stw	r3,8(r2)
   27f94:	e5000204 	addi	r20,fp,8
   27f98:	2000561e 	bne	r4,zero,280f4 <_realloc_r+0x564>
   27f9c:	30800530 	cmpltui	r2,r6,20
   27fa0:	1000521e 	bne	r2,zero,280ec <_realloc_r+0x55c>
   27fa4:	80c00017 	ldw	r3,0(r16)
   27fa8:	30800728 	cmpgeui	r2,r6,28
   27fac:	e0c00215 	stw	r3,8(fp)
   27fb0:	80c00117 	ldw	r3,4(r16)
   27fb4:	e0c00315 	stw	r3,12(fp)
   27fb8:	1000541e 	bne	r2,zero,2810c <_realloc_r+0x57c>
   27fbc:	84000204 	addi	r16,r16,8
   27fc0:	e0800404 	addi	r2,fp,16
   27fc4:	80c00017 	ldw	r3,0(r16)
   27fc8:	10c00015 	stw	r3,0(r2)
   27fcc:	80c00117 	ldw	r3,4(r16)
   27fd0:	10c00115 	stw	r3,4(r2)
   27fd4:	80c00217 	ldw	r3,8(r16)
   27fd8:	10c00215 	stw	r3,8(r2)
   27fdc:	e447883a 	add	r3,fp,r17
   27fe0:	3c45c83a 	sub	r2,r7,r17
   27fe4:	b8c00215 	stw	r3,8(r23)
   27fe8:	10800054 	ori	r2,r2,1
   27fec:	18800115 	stw	r2,4(r3)
   27ff0:	e0800117 	ldw	r2,4(fp)
   27ff4:	a809883a 	mov	r4,r21
   27ff8:	1080004c 	andi	r2,r2,1
   27ffc:	1444b03a 	or	r2,r2,r17
   28000:	e0800115 	stw	r2,4(fp)
   28004:	002e0e40 	call	2e0e4 <__malloc_unlock>
   28008:	003f4506 	br	27d20 <_realloc_r+0x190>
   2800c:	80800217 	ldw	r2,8(r16)
   28010:	31800920 	cmpeqi	r6,r6,36
   28014:	a0800215 	stw	r2,8(r20)
   28018:	80800317 	ldw	r2,12(r16)
   2801c:	a0800315 	stw	r2,12(r20)
   28020:	3000191e 	bne	r6,zero,28088 <_realloc_r+0x4f8>
   28024:	80c00404 	addi	r3,r16,16
   28028:	a0800404 	addi	r2,r20,16
   2802c:	003f6306 	br	27dbc <_realloc_r+0x22c>
   28030:	2005883a 	mov	r2,r4
   28034:	003f2306 	br	27cc4 <_realloc_r+0x134>
   28038:	800b883a 	mov	r5,r16
   2803c:	002681c0 	call	2681c <memmove>
   28040:	1021883a 	mov	r16,r2
   28044:	e4c00117 	ldw	r19,4(fp)
   28048:	b825883a 	mov	r18,r23
   2804c:	e02d883a 	mov	r22,fp
   28050:	003f2606 	br	27cec <_realloc_r+0x15c>
   28054:	2005883a 	mov	r2,r4
   28058:	003fb906 	br	27f40 <_realloc_r+0x3b0>
   2805c:	800b883a 	mov	r5,r16
   28060:	d9c00015 	stw	r7,0(sp)
   28064:	002681c0 	call	2681c <memmove>
   28068:	d9c00017 	ldw	r7,0(sp)
   2806c:	1021883a 	mov	r16,r2
   28070:	e02d883a 	mov	r22,fp
   28074:	3825883a 	mov	r18,r7
   28078:	003f1c06 	br	27cec <_realloc_r+0x15c>
   2807c:	a809883a 	mov	r4,r21
   28080:	002e0e40 	call	2e0e4 <__malloc_unlock>
   28084:	003f3706 	br	27d64 <_realloc_r+0x1d4>
   28088:	81000417 	ldw	r4,16(r16)
   2808c:	80c00604 	addi	r3,r16,24
   28090:	a0800604 	addi	r2,r20,24
   28094:	a1000415 	stw	r4,16(r20)
   28098:	81000517 	ldw	r4,20(r16)
   2809c:	a1000515 	stw	r4,20(r20)
   280a0:	003f4606 	br	27dbc <_realloc_r+0x22c>
   280a4:	80800217 	ldw	r2,8(r16)
   280a8:	31800920 	cmpeqi	r6,r6,36
   280ac:	e0800415 	stw	r2,16(fp)
   280b0:	80800317 	ldw	r2,12(r16)
   280b4:	e0800515 	stw	r2,20(fp)
   280b8:	30001d1e 	bne	r6,zero,28130 <_realloc_r+0x5a0>
   280bc:	84000404 	addi	r16,r16,16
   280c0:	e0800604 	addi	r2,fp,24
   280c4:	003eff06 	br	27cc4 <_realloc_r+0x134>
   280c8:	80800217 	ldw	r2,8(r16)
   280cc:	31800920 	cmpeqi	r6,r6,36
   280d0:	e0800415 	stw	r2,16(fp)
   280d4:	80800317 	ldw	r2,12(r16)
   280d8:	e0800515 	stw	r2,20(fp)
   280dc:	30001b1e 	bne	r6,zero,2814c <_realloc_r+0x5bc>
   280e0:	84000404 	addi	r16,r16,16
   280e4:	e0800604 	addi	r2,fp,24
   280e8:	003f9506 	br	27f40 <_realloc_r+0x3b0>
   280ec:	a005883a 	mov	r2,r20
   280f0:	003fb406 	br	27fc4 <_realloc_r+0x434>
   280f4:	800b883a 	mov	r5,r16
   280f8:	a009883a 	mov	r4,r20
   280fc:	d9c00015 	stw	r7,0(sp)
   28100:	002681c0 	call	2681c <memmove>
   28104:	d9c00017 	ldw	r7,0(sp)
   28108:	003fb406 	br	27fdc <_realloc_r+0x44c>
   2810c:	80800217 	ldw	r2,8(r16)
   28110:	31800920 	cmpeqi	r6,r6,36
   28114:	e0800415 	stw	r2,16(fp)
   28118:	80800317 	ldw	r2,12(r16)
   2811c:	e0800515 	stw	r2,20(fp)
   28120:	3000111e 	bne	r6,zero,28168 <_realloc_r+0x5d8>
   28124:	84000404 	addi	r16,r16,16
   28128:	e0800604 	addi	r2,fp,24
   2812c:	003fa506 	br	27fc4 <_realloc_r+0x434>
   28130:	80c00417 	ldw	r3,16(r16)
   28134:	84000604 	addi	r16,r16,24
   28138:	e0800804 	addi	r2,fp,32
   2813c:	e0c00615 	stw	r3,24(fp)
   28140:	80ffff17 	ldw	r3,-4(r16)
   28144:	e0c00715 	stw	r3,28(fp)
   28148:	003ede06 	br	27cc4 <_realloc_r+0x134>
   2814c:	80c00417 	ldw	r3,16(r16)
   28150:	84000604 	addi	r16,r16,24
   28154:	e0800804 	addi	r2,fp,32
   28158:	e0c00615 	stw	r3,24(fp)
   2815c:	80ffff17 	ldw	r3,-4(r16)
   28160:	e0c00715 	stw	r3,28(fp)
   28164:	003f7606 	br	27f40 <_realloc_r+0x3b0>
   28168:	80c00417 	ldw	r3,16(r16)
   2816c:	84000604 	addi	r16,r16,24
   28170:	e0800804 	addi	r2,fp,32
   28174:	e0c00615 	stw	r3,24(fp)
   28178:	80ffff17 	ldw	r3,-4(r16)
   2817c:	e0c00715 	stw	r3,28(fp)
   28180:	003f9006 	br	27fc4 <_realloc_r+0x434>

00028184 <_sbrk_r>:
   28184:	defffe04 	addi	sp,sp,-8
   28188:	dc000015 	stw	r16,0(sp)
   2818c:	008000f4 	movhi	r2,3
   28190:	2021883a 	mov	r16,r4
   28194:	2809883a 	mov	r4,r5
   28198:	dfc00115 	stw	ra,4(sp)
   2819c:	10115915 	stw	zero,17764(r2)
   281a0:	002e2980 	call	2e298 <sbrk>
   281a4:	10ffffd8 	cmpnei	r3,r2,-1
   281a8:	18000426 	beq	r3,zero,281bc <_sbrk_r+0x38>
   281ac:	dfc00117 	ldw	ra,4(sp)
   281b0:	dc000017 	ldw	r16,0(sp)
   281b4:	dec00204 	addi	sp,sp,8
   281b8:	f800283a 	ret
   281bc:	00c000f4 	movhi	r3,3
   281c0:	18d15917 	ldw	r3,17764(r3)
   281c4:	183ff926 	beq	r3,zero,281ac <_sbrk_r+0x28>
   281c8:	80c00015 	stw	r3,0(r16)
   281cc:	dfc00117 	ldw	ra,4(sp)
   281d0:	dc000017 	ldw	r16,0(sp)
   281d4:	dec00204 	addi	sp,sp,8
   281d8:	f800283a 	ret

000281dc <__sread>:
   281dc:	defffe04 	addi	sp,sp,-8
   281e0:	dc000015 	stw	r16,0(sp)
   281e4:	2821883a 	mov	r16,r5
   281e8:	2940038f 	ldh	r5,14(r5)
   281ec:	dfc00115 	stw	ra,4(sp)
   281f0:	0029fbc0 	call	29fbc <_read_r>
   281f4:	10000716 	blt	r2,zero,28214 <__sread+0x38>
   281f8:	80c01417 	ldw	r3,80(r16)
   281fc:	1887883a 	add	r3,r3,r2
   28200:	80c01415 	stw	r3,80(r16)
   28204:	dfc00117 	ldw	ra,4(sp)
   28208:	dc000017 	ldw	r16,0(sp)
   2820c:	dec00204 	addi	sp,sp,8
   28210:	f800283a 	ret
   28214:	80c0030b 	ldhu	r3,12(r16)
   28218:	18fbffcc 	andi	r3,r3,61439
   2821c:	80c0030d 	sth	r3,12(r16)
   28220:	dfc00117 	ldw	ra,4(sp)
   28224:	dc000017 	ldw	r16,0(sp)
   28228:	dec00204 	addi	sp,sp,8
   2822c:	f800283a 	ret

00028230 <__seofread>:
   28230:	0005883a 	mov	r2,zero
   28234:	f800283a 	ret

00028238 <__swrite>:
   28238:	2880030b 	ldhu	r2,12(r5)
   2823c:	defffb04 	addi	sp,sp,-20
   28240:	dcc00315 	stw	r19,12(sp)
   28244:	dc800215 	stw	r18,8(sp)
   28248:	dc400115 	stw	r17,4(sp)
   2824c:	dc000015 	stw	r16,0(sp)
   28250:	dfc00415 	stw	ra,16(sp)
   28254:	10c0400c 	andi	r3,r2,256
   28258:	2821883a 	mov	r16,r5
   2825c:	2023883a 	mov	r17,r4
   28260:	3025883a 	mov	r18,r6
   28264:	3827883a 	mov	r19,r7
   28268:	18000d1e 	bne	r3,zero,282a0 <__swrite+0x68>
   2826c:	8140038f 	ldh	r5,14(r16)
   28270:	10bbffcc 	andi	r2,r2,61439
   28274:	980f883a 	mov	r7,r19
   28278:	900d883a 	mov	r6,r18
   2827c:	8809883a 	mov	r4,r17
   28280:	8080030d 	sth	r2,12(r16)
   28284:	dfc00417 	ldw	ra,16(sp)
   28288:	dcc00317 	ldw	r19,12(sp)
   2828c:	dc800217 	ldw	r18,8(sp)
   28290:	dc400117 	ldw	r17,4(sp)
   28294:	dc000017 	ldw	r16,0(sp)
   28298:	dec00504 	addi	sp,sp,20
   2829c:	00297781 	jmpi	29778 <_write_r>
   282a0:	2940038f 	ldh	r5,14(r5)
   282a4:	01c00084 	movi	r7,2
   282a8:	000d883a 	mov	r6,zero
   282ac:	0029f080 	call	29f08 <_lseek_r>
   282b0:	8080030b 	ldhu	r2,12(r16)
   282b4:	003fed06 	br	2826c <__swrite+0x34>

000282b8 <__sseek>:
   282b8:	defffe04 	addi	sp,sp,-8
   282bc:	dc000015 	stw	r16,0(sp)
   282c0:	2821883a 	mov	r16,r5
   282c4:	2940038f 	ldh	r5,14(r5)
   282c8:	dfc00115 	stw	ra,4(sp)
   282cc:	0029f080 	call	29f08 <_lseek_r>
   282d0:	10ffffd8 	cmpnei	r3,r2,-1
   282d4:	18000826 	beq	r3,zero,282f8 <__sseek+0x40>
   282d8:	80c0030b 	ldhu	r3,12(r16)
   282dc:	80801415 	stw	r2,80(r16)
   282e0:	18c40014 	ori	r3,r3,4096
   282e4:	80c0030d 	sth	r3,12(r16)
   282e8:	dfc00117 	ldw	ra,4(sp)
   282ec:	dc000017 	ldw	r16,0(sp)
   282f0:	dec00204 	addi	sp,sp,8
   282f4:	f800283a 	ret
   282f8:	80c0030b 	ldhu	r3,12(r16)
   282fc:	18fbffcc 	andi	r3,r3,61439
   28300:	80c0030d 	sth	r3,12(r16)
   28304:	dfc00117 	ldw	ra,4(sp)
   28308:	dc000017 	ldw	r16,0(sp)
   2830c:	dec00204 	addi	sp,sp,8
   28310:	f800283a 	ret

00028314 <__sclose>:
   28314:	2940038f 	ldh	r5,14(r5)
   28318:	00297dc1 	jmpi	297dc <_close_r>

0002831c <__sprint_r.part.0>:
   2831c:	28801917 	ldw	r2,100(r5)
   28320:	defff604 	addi	sp,sp,-40
   28324:	dcc00315 	stw	r19,12(sp)
   28328:	dfc00915 	stw	ra,36(sp)
   2832c:	df000815 	stw	fp,32(sp)
   28330:	ddc00715 	stw	r23,28(sp)
   28334:	dd800615 	stw	r22,24(sp)
   28338:	dd400515 	stw	r21,20(sp)
   2833c:	dd000415 	stw	r20,16(sp)
   28340:	dc800215 	stw	r18,8(sp)
   28344:	dc400115 	stw	r17,4(sp)
   28348:	dc000015 	stw	r16,0(sp)
   2834c:	1088000c 	andi	r2,r2,8192
   28350:	3027883a 	mov	r19,r6
   28354:	10002c26 	beq	r2,zero,28408 <__sprint_r.part.0+0xec>
   28358:	30800217 	ldw	r2,8(r6)
   2835c:	35000017 	ldw	r20,0(r6)
   28360:	2821883a 	mov	r16,r5
   28364:	2023883a 	mov	r17,r4
   28368:	05bfff04 	movi	r22,-4
   2836c:	10002426 	beq	r2,zero,28400 <__sprint_r.part.0+0xe4>
   28370:	a5400117 	ldw	r21,4(r20)
   28374:	a5c00017 	ldw	r23,0(r20)
   28378:	a824d0ba 	srli	r18,r21,2
   2837c:	90001b26 	beq	r18,zero,283ec <__sprint_r.part.0+0xd0>
   28380:	0039883a 	mov	fp,zero
   28384:	00000206 	br	28390 <__sprint_r.part.0+0x74>
   28388:	bdc00104 	addi	r23,r23,4
   2838c:	97001626 	beq	r18,fp,283e8 <__sprint_r.part.0+0xcc>
   28390:	b9400017 	ldw	r5,0(r23)
   28394:	800d883a 	mov	r6,r16
   28398:	8809883a 	mov	r4,r17
   2839c:	0029cc00 	call	29cc0 <_fputwc_r>
   283a0:	10bfffe0 	cmpeqi	r2,r2,-1
   283a4:	e7000044 	addi	fp,fp,1
   283a8:	103ff726 	beq	r2,zero,28388 <__sprint_r.part.0+0x6c>
   283ac:	00bfffc4 	movi	r2,-1
   283b0:	98000215 	stw	zero,8(r19)
   283b4:	98000115 	stw	zero,4(r19)
   283b8:	dfc00917 	ldw	ra,36(sp)
   283bc:	df000817 	ldw	fp,32(sp)
   283c0:	ddc00717 	ldw	r23,28(sp)
   283c4:	dd800617 	ldw	r22,24(sp)
   283c8:	dd400517 	ldw	r21,20(sp)
   283cc:	dd000417 	ldw	r20,16(sp)
   283d0:	dcc00317 	ldw	r19,12(sp)
   283d4:	dc800217 	ldw	r18,8(sp)
   283d8:	dc400117 	ldw	r17,4(sp)
   283dc:	dc000017 	ldw	r16,0(sp)
   283e0:	dec00a04 	addi	sp,sp,40
   283e4:	f800283a 	ret
   283e8:	98800217 	ldw	r2,8(r19)
   283ec:	adaa703a 	and	r21,r21,r22
   283f0:	1545c83a 	sub	r2,r2,r21
   283f4:	98800215 	stw	r2,8(r19)
   283f8:	a5000204 	addi	r20,r20,8
   283fc:	103fdc1e 	bne	r2,zero,28370 <__sprint_r.part.0+0x54>
   28400:	0005883a 	mov	r2,zero
   28404:	003fea06 	br	283b0 <__sprint_r.part.0+0x94>
   28408:	00256680 	call	25668 <__sfvwrite_r>
   2840c:	003fe806 	br	283b0 <__sprint_r.part.0+0x94>

00028410 <__sprint_r>:
   28410:	30c00217 	ldw	r3,8(r6)
   28414:	18000126 	beq	r3,zero,2841c <__sprint_r+0xc>
   28418:	002831c1 	jmpi	2831c <__sprint_r.part.0>
   2841c:	30000115 	stw	zero,4(r6)
   28420:	0005883a 	mov	r2,zero
   28424:	f800283a 	ret

00028428 <___vfiprintf_internal_r>:
   28428:	deffcf04 	addi	sp,sp,-196
   2842c:	dd002b15 	stw	r20,172(sp)
   28430:	dc802915 	stw	r18,164(sp)
   28434:	dfc03015 	stw	ra,192(sp)
   28438:	df002f15 	stw	fp,188(sp)
   2843c:	ddc02e15 	stw	r23,184(sp)
   28440:	dd802d15 	stw	r22,180(sp)
   28444:	dd402c15 	stw	r21,176(sp)
   28448:	dcc02a15 	stw	r19,168(sp)
   2844c:	dc402815 	stw	r17,160(sp)
   28450:	dc002715 	stw	r16,156(sp)
   28454:	d9000015 	stw	r4,0(sp)
   28458:	d9c00315 	stw	r7,12(sp)
   2845c:	2825883a 	mov	r18,r5
   28460:	3029883a 	mov	r20,r6
   28464:	20000226 	beq	r4,zero,28470 <___vfiprintf_internal_r+0x48>
   28468:	20800e17 	ldw	r2,56(r4)
   2846c:	1001b526 	beq	r2,zero,28b44 <___vfiprintf_internal_r+0x71c>
   28470:	9080030b 	ldhu	r2,12(r18)
   28474:	10c8000c 	andi	r3,r2,8192
   28478:	1800071e 	bne	r3,zero,28498 <___vfiprintf_internal_r+0x70>
   2847c:	90c01917 	ldw	r3,100(r18)
   28480:	11080014 	ori	r4,r2,8192
   28484:	00b7ffc4 	movi	r2,-8193
   28488:	1886703a 	and	r3,r3,r2
   2848c:	9100030d 	sth	r4,12(r18)
   28490:	2005883a 	mov	r2,r4
   28494:	90c01915 	stw	r3,100(r18)
   28498:	10c0020c 	andi	r3,r2,8
   2849c:	1800fd26 	beq	r3,zero,28894 <___vfiprintf_internal_r+0x46c>
   284a0:	90c00417 	ldw	r3,16(r18)
   284a4:	1800fb26 	beq	r3,zero,28894 <___vfiprintf_internal_r+0x46c>
   284a8:	1080068c 	andi	r2,r2,26
   284ac:	10800298 	cmpnei	r2,r2,10
   284b0:	10010026 	beq	r2,zero,288b4 <___vfiprintf_internal_r+0x48c>
   284b4:	dcc01704 	addi	r19,sp,92
   284b8:	05c000f4 	movhi	r23,3
   284bc:	dcc00a15 	stw	r19,40(sp)
   284c0:	d8000c15 	stw	zero,48(sp)
   284c4:	d8000b15 	stw	zero,44(sp)
   284c8:	9811883a 	mov	r8,r19
   284cc:	d8000515 	stw	zero,20(sp)
   284d0:	d8000115 	stw	zero,4(sp)
   284d4:	bdc22804 	addi	r23,r23,2208
   284d8:	a0800007 	ldb	r2,0(r20)
   284dc:	1000db26 	beq	r2,zero,2884c <___vfiprintf_internal_r+0x424>
   284e0:	a021883a 	mov	r16,r20
   284e4:	00000306 	br	284f4 <___vfiprintf_internal_r+0xcc>
   284e8:	80800047 	ldb	r2,1(r16)
   284ec:	84000044 	addi	r16,r16,1
   284f0:	10011826 	beq	r2,zero,28954 <___vfiprintf_internal_r+0x52c>
   284f4:	10800958 	cmpnei	r2,r2,37
   284f8:	103ffb1e 	bne	r2,zero,284e8 <___vfiprintf_internal_r+0xc0>
   284fc:	8523c83a 	sub	r17,r16,r20
   28500:	8501161e 	bne	r16,r20,2895c <___vfiprintf_internal_r+0x534>
   28504:	80800003 	ldbu	r2,0(r16)
   28508:	10803fcc 	andi	r2,r2,255
   2850c:	1080201c 	xori	r2,r2,128
   28510:	10bfe004 	addi	r2,r2,-128
   28514:	1000cd26 	beq	r2,zero,2884c <___vfiprintf_internal_r+0x424>
   28518:	80800047 	ldb	r2,1(r16)
   2851c:	85000044 	addi	r20,r16,1
   28520:	d8000945 	stb	zero,37(sp)
   28524:	027fffc4 	movi	r9,-1
   28528:	0023883a 	mov	r17,zero
   2852c:	0021883a 	mov	r16,zero
   28530:	a5000044 	addi	r20,r20,1
   28534:	10fff804 	addi	r3,r2,-32
   28538:	19001668 	cmpgeui	r4,r3,89
   2853c:	20006a1e 	bne	r4,zero,286e8 <___vfiprintf_internal_r+0x2c0>
   28540:	180690ba 	slli	r3,r3,2
   28544:	010000f4 	movhi	r4,3
   28548:	1909883a 	add	r4,r3,r4
   2854c:	20e15517 	ldw	r3,-31404(r4)
   28550:	1800683a 	jmp	r3
   28554:	00028be8 	cmpgeui	zero,zero,2607
   28558:	000286e8 	cmpgeui	zero,zero,2587
   2855c:	000286e8 	cmpgeui	zero,zero,2587
   28560:	00028bdc 	xori	zero,zero,2607
   28564:	000286e8 	cmpgeui	zero,zero,2587
   28568:	000286e8 	cmpgeui	zero,zero,2587
   2856c:	000286e8 	cmpgeui	zero,zero,2587
   28570:	000286e8 	cmpgeui	zero,zero,2587
   28574:	000286e8 	cmpgeui	zero,zero,2587
   28578:	000286e8 	cmpgeui	zero,zero,2587
   2857c:	00028b58 	cmpnei	zero,zero,2605
   28580:	00028bcc 	andi	zero,zero,2607
   28584:	000286e8 	cmpgeui	zero,zero,2587
   28588:	00028b70 	cmpltui	zero,zero,2605
   2858c:	00028b7c 	xorhi	zero,zero,2605
   28590:	000286e8 	cmpgeui	zero,zero,2587
   28594:	00028bc0 	call	28bc <__reset-0x1d744>
   28598:	000286b8 	rdprs	zero,zero,2586
   2859c:	000286b8 	rdprs	zero,zero,2586
   285a0:	000286b8 	rdprs	zero,zero,2586
   285a4:	000286b8 	rdprs	zero,zero,2586
   285a8:	000286b8 	rdprs	zero,zero,2586
   285ac:	000286b8 	rdprs	zero,zero,2586
   285b0:	000286b8 	rdprs	zero,zero,2586
   285b4:	000286b8 	rdprs	zero,zero,2586
   285b8:	000286b8 	rdprs	zero,zero,2586
   285bc:	000286e8 	cmpgeui	zero,zero,2587
   285c0:	000286e8 	cmpgeui	zero,zero,2587
   285c4:	000286e8 	cmpgeui	zero,zero,2587
   285c8:	000286e8 	cmpgeui	zero,zero,2587
   285cc:	000286e8 	cmpgeui	zero,zero,2587
   285d0:	000286e8 	cmpgeui	zero,zero,2587
   285d4:	000286e8 	cmpgeui	zero,zero,2587
   285d8:	000286e8 	cmpgeui	zero,zero,2587
   285dc:	000286e8 	cmpgeui	zero,zero,2587
   285e0:	000286e8 	cmpgeui	zero,zero,2587
   285e4:	000288fc 	xorhi	zero,zero,2595
   285e8:	000286e8 	cmpgeui	zero,zero,2587
   285ec:	000286e8 	cmpgeui	zero,zero,2587
   285f0:	000286e8 	cmpgeui	zero,zero,2587
   285f4:	000286e8 	cmpgeui	zero,zero,2587
   285f8:	000286e8 	cmpgeui	zero,zero,2587
   285fc:	000286e8 	cmpgeui	zero,zero,2587
   28600:	000286e8 	cmpgeui	zero,zero,2587
   28604:	000286e8 	cmpgeui	zero,zero,2587
   28608:	000286e8 	cmpgeui	zero,zero,2587
   2860c:	000286e8 	cmpgeui	zero,zero,2587
   28610:	00028d04 	movi	zero,2612
   28614:	000286e8 	cmpgeui	zero,zero,2587
   28618:	000286e8 	cmpgeui	zero,zero,2587
   2861c:	000286e8 	cmpgeui	zero,zero,2587
   28620:	000286e8 	cmpgeui	zero,zero,2587
   28624:	000286e8 	cmpgeui	zero,zero,2587
   28628:	00028ca0 	cmpeqi	zero,zero,2610
   2862c:	000286e8 	cmpgeui	zero,zero,2587
   28630:	000286e8 	cmpgeui	zero,zero,2587
   28634:	00029478 	rdprs	zero,zero,2641
   28638:	000286e8 	cmpgeui	zero,zero,2587
   2863c:	000286e8 	cmpgeui	zero,zero,2587
   28640:	000286e8 	cmpgeui	zero,zero,2587
   28644:	000286e8 	cmpgeui	zero,zero,2587
   28648:	000286e8 	cmpgeui	zero,zero,2587
   2864c:	000286e8 	cmpgeui	zero,zero,2587
   28650:	000286e8 	cmpgeui	zero,zero,2587
   28654:	000286e8 	cmpgeui	zero,zero,2587
   28658:	000286e8 	cmpgeui	zero,zero,2587
   2865c:	000286e8 	cmpgeui	zero,zero,2587
   28660:	00028c78 	rdprs	zero,zero,2609
   28664:	00028900 	call	2890 <__reset-0x1d770>
   28668:	000286e8 	cmpgeui	zero,zero,2587
   2866c:	000286e8 	cmpgeui	zero,zero,2587
   28670:	000286e8 	cmpgeui	zero,zero,2587
   28674:	00028c6c 	andhi	zero,zero,2609
   28678:	00028900 	call	2890 <__reset-0x1d770>
   2867c:	000286e8 	cmpgeui	zero,zero,2587
   28680:	000286e8 	cmpgeui	zero,zero,2587
   28684:	00028c58 	cmpnei	zero,zero,2609
   28688:	000286e8 	cmpgeui	zero,zero,2587
   2868c:	00028c28 	cmpgeui	zero,zero,2608
   28690:	000294d4 	movui	zero,2643
   28694:	00028e18 	cmpnei	zero,zero,2616
   28698:	00028e0c 	andi	zero,zero,2616
   2869c:	000286e8 	cmpgeui	zero,zero,2587
   286a0:	00028db4 	movhi	zero,2614
   286a4:	000286e8 	cmpgeui	zero,zero,2587
   286a8:	00029470 	cmpltui	zero,zero,2641
   286ac:	000286e8 	cmpgeui	zero,zero,2587
   286b0:	000286e8 	cmpgeui	zero,zero,2587
   286b4:	00029500 	call	2950 <__reset-0x1d6b0>
   286b8:	0023883a 	mov	r17,zero
   286bc:	10fff404 	addi	r3,r2,-48
   286c0:	a0800007 	ldb	r2,0(r20)
   286c4:	8c4002a4 	muli	r17,r17,10
   286c8:	a5000044 	addi	r20,r20,1
   286cc:	1c63883a 	add	r17,r3,r17
   286d0:	10fff404 	addi	r3,r2,-48
   286d4:	190002b0 	cmpltui	r4,r3,10
   286d8:	203ff91e 	bne	r4,zero,286c0 <___vfiprintf_internal_r+0x298>
   286dc:	10fff804 	addi	r3,r2,-32
   286e0:	19001668 	cmpgeui	r4,r3,89
   286e4:	203f9626 	beq	r4,zero,28540 <___vfiprintf_internal_r+0x118>
   286e8:	10005826 	beq	r2,zero,2884c <___vfiprintf_internal_r+0x424>
   286ec:	d8800d05 	stb	r2,52(sp)
   286f0:	d8000945 	stb	zero,37(sp)
   286f4:	05800044 	movi	r22,1
   286f8:	05400044 	movi	r21,1
   286fc:	df000d04 	addi	fp,sp,52
   28700:	0013883a 	mov	r9,zero
   28704:	8340008c 	andi	r13,r16,2
   28708:	68000126 	beq	r13,zero,28710 <___vfiprintf_internal_r+0x2e8>
   2870c:	b5800084 	addi	r22,r22,2
   28710:	d9000b17 	ldw	r4,44(sp)
   28714:	8300210c 	andi	r12,r16,132
   28718:	d8800c17 	ldw	r2,48(sp)
   2871c:	21800044 	addi	r6,r4,1
   28720:	300b883a 	mov	r5,r6
   28724:	6000021e 	bne	r12,zero,28730 <___vfiprintf_internal_r+0x308>
   28728:	8d87c83a 	sub	r3,r17,r22
   2872c:	00c28f16 	blt	zero,r3,2916c <___vfiprintf_internal_r+0xd44>
   28730:	d8c00947 	ldb	r3,37(sp)
   28734:	18000c26 	beq	r3,zero,28768 <___vfiprintf_internal_r+0x340>
   28738:	d8c00944 	addi	r3,sp,37
   2873c:	10800044 	addi	r2,r2,1
   28740:	40c00015 	stw	r3,0(r8)
   28744:	00c00044 	movi	r3,1
   28748:	40c00115 	stw	r3,4(r8)
   2874c:	d8800c15 	stw	r2,48(sp)
   28750:	d9400b15 	stw	r5,44(sp)
   28754:	28c00208 	cmpgei	r3,r5,8
   28758:	1802681e 	bne	r3,zero,290fc <___vfiprintf_internal_r+0xcd4>
   2875c:	2809883a 	mov	r4,r5
   28760:	42000204 	addi	r8,r8,8
   28764:	29400044 	addi	r5,r5,1
   28768:	68001726 	beq	r13,zero,287c8 <___vfiprintf_internal_r+0x3a0>
   2876c:	d8c00984 	addi	r3,sp,38
   28770:	10800084 	addi	r2,r2,2
   28774:	40c00015 	stw	r3,0(r8)
   28778:	00c00084 	movi	r3,2
   2877c:	40c00115 	stw	r3,4(r8)
   28780:	d8800c15 	stw	r2,48(sp)
   28784:	d9400b15 	stw	r5,44(sp)
   28788:	28c00208 	cmpgei	r3,r5,8
   2878c:	18027326 	beq	r3,zero,2915c <___vfiprintf_internal_r+0xd34>
   28790:	1002f626 	beq	r2,zero,2936c <___vfiprintf_internal_r+0xf44>
   28794:	d9000017 	ldw	r4,0(sp)
   28798:	d9800a04 	addi	r6,sp,40
   2879c:	900b883a 	mov	r5,r18
   287a0:	da400415 	stw	r9,16(sp)
   287a4:	db000215 	stw	r12,8(sp)
   287a8:	002831c0 	call	2831c <__sprint_r.part.0>
   287ac:	1000291e 	bne	r2,zero,28854 <___vfiprintf_internal_r+0x42c>
   287b0:	d9000b17 	ldw	r4,44(sp)
   287b4:	d8800c17 	ldw	r2,48(sp)
   287b8:	da400417 	ldw	r9,16(sp)
   287bc:	db000217 	ldw	r12,8(sp)
   287c0:	9811883a 	mov	r8,r19
   287c4:	21400044 	addi	r5,r4,1
   287c8:	63002018 	cmpnei	r12,r12,128
   287cc:	6001cf26 	beq	r12,zero,28f0c <___vfiprintf_internal_r+0xae4>
   287d0:	4d53c83a 	sub	r9,r9,r21
   287d4:	02420d16 	blt	zero,r9,2900c <___vfiprintf_internal_r+0xbe4>
   287d8:	a885883a 	add	r2,r21,r2
   287dc:	d9400b15 	stw	r5,44(sp)
   287e0:	47000015 	stw	fp,0(r8)
   287e4:	45400115 	stw	r21,4(r8)
   287e8:	d8800c15 	stw	r2,48(sp)
   287ec:	29400208 	cmpgei	r5,r5,8
   287f0:	2801c026 	beq	r5,zero,28ef4 <___vfiprintf_internal_r+0xacc>
   287f4:	10007126 	beq	r2,zero,289bc <___vfiprintf_internal_r+0x594>
   287f8:	d9000017 	ldw	r4,0(sp)
   287fc:	d9800a04 	addi	r6,sp,40
   28800:	900b883a 	mov	r5,r18
   28804:	002831c0 	call	2831c <__sprint_r.part.0>
   28808:	1000121e 	bne	r2,zero,28854 <___vfiprintf_internal_r+0x42c>
   2880c:	d8800c17 	ldw	r2,48(sp)
   28810:	9811883a 	mov	r8,r19
   28814:	8400010c 	andi	r16,r16,4
   28818:	80000226 	beq	r16,zero,28824 <___vfiprintf_internal_r+0x3fc>
   2881c:	8da1c83a 	sub	r16,r17,r22
   28820:	04006c16 	blt	zero,r16,289d4 <___vfiprintf_internal_r+0x5ac>
   28824:	8d80010e 	bge	r17,r22,2882c <___vfiprintf_internal_r+0x404>
   28828:	b023883a 	mov	r17,r22
   2882c:	d8c00117 	ldw	r3,4(sp)
   28830:	1c47883a 	add	r3,r3,r17
   28834:	d8c00115 	stw	r3,4(sp)
   28838:	1002261e 	bne	r2,zero,290d4 <___vfiprintf_internal_r+0xcac>
   2883c:	a0800007 	ldb	r2,0(r20)
   28840:	d8000b15 	stw	zero,44(sp)
   28844:	9811883a 	mov	r8,r19
   28848:	103f251e 	bne	r2,zero,284e0 <___vfiprintf_internal_r+0xb8>
   2884c:	d8800c17 	ldw	r2,48(sp)
   28850:	1003631e 	bne	r2,zero,295e0 <___vfiprintf_internal_r+0x11b8>
   28854:	9080030b 	ldhu	r2,12(r18)
   28858:	1080100c 	andi	r2,r2,64
   2885c:	1003741e 	bne	r2,zero,29630 <___vfiprintf_internal_r+0x1208>
   28860:	d8800117 	ldw	r2,4(sp)
   28864:	dfc03017 	ldw	ra,192(sp)
   28868:	df002f17 	ldw	fp,188(sp)
   2886c:	ddc02e17 	ldw	r23,184(sp)
   28870:	dd802d17 	ldw	r22,180(sp)
   28874:	dd402c17 	ldw	r21,176(sp)
   28878:	dd002b17 	ldw	r20,172(sp)
   2887c:	dcc02a17 	ldw	r19,168(sp)
   28880:	dc802917 	ldw	r18,164(sp)
   28884:	dc402817 	ldw	r17,160(sp)
   28888:	dc002717 	ldw	r16,156(sp)
   2888c:	dec03104 	addi	sp,sp,196
   28890:	f800283a 	ret
   28894:	d9000017 	ldw	r4,0(sp)
   28898:	900b883a 	mov	r5,r18
   2889c:	00230a40 	call	230a4 <__swsetup_r>
   288a0:	1003631e 	bne	r2,zero,29630 <___vfiprintf_internal_r+0x1208>
   288a4:	9080030b 	ldhu	r2,12(r18)
   288a8:	1080068c 	andi	r2,r2,26
   288ac:	10800298 	cmpnei	r2,r2,10
   288b0:	103f001e 	bne	r2,zero,284b4 <___vfiprintf_internal_r+0x8c>
   288b4:	9080038f 	ldh	r2,14(r18)
   288b8:	103efe16 	blt	r2,zero,284b4 <___vfiprintf_internal_r+0x8c>
   288bc:	d9c00317 	ldw	r7,12(sp)
   288c0:	d9000017 	ldw	r4,0(sp)
   288c4:	a00d883a 	mov	r6,r20
   288c8:	900b883a 	mov	r5,r18
   288cc:	dfc03017 	ldw	ra,192(sp)
   288d0:	df002f17 	ldw	fp,188(sp)
   288d4:	ddc02e17 	ldw	r23,184(sp)
   288d8:	dd802d17 	ldw	r22,180(sp)
   288dc:	dd402c17 	ldw	r21,176(sp)
   288e0:	dd002b17 	ldw	r20,172(sp)
   288e4:	dcc02a17 	ldw	r19,168(sp)
   288e8:	dc802917 	ldw	r18,164(sp)
   288ec:	dc402817 	ldw	r17,160(sp)
   288f0:	dc002717 	ldw	r16,156(sp)
   288f4:	dec03104 	addi	sp,sp,196
   288f8:	00296b41 	jmpi	296b4 <__sbprintf>
   288fc:	84000414 	ori	r16,r16,16
   28900:	8080080c 	andi	r2,r16,32
   28904:	10006626 	beq	r2,zero,28aa0 <___vfiprintf_internal_r+0x678>
   28908:	d8c00317 	ldw	r3,12(sp)
   2890c:	18800117 	ldw	r2,4(r3)
   28910:	1d800017 	ldw	r22,0(r3)
   28914:	18c00204 	addi	r3,r3,8
   28918:	d8c00315 	stw	r3,12(sp)
   2891c:	102b883a 	mov	r21,r2
   28920:	10006d16 	blt	r2,zero,28ad8 <___vfiprintf_internal_r+0x6b0>
   28924:	48bfffd8 	cmpnei	r2,r9,-1
   28928:	db000943 	ldbu	r12,37(sp)
   2892c:	10007526 	beq	r2,zero,28b04 <___vfiprintf_internal_r+0x6dc>
   28930:	00ffdfc4 	movi	r3,-129
   28934:	b544b03a 	or	r2,r22,r21
   28938:	80e0703a 	and	r16,r16,r3
   2893c:	1000711e 	bne	r2,zero,28b04 <___vfiprintf_internal_r+0x6dc>
   28940:	48033e1e 	bne	r9,zero,2963c <___vfiprintf_internal_r+0x1214>
   28944:	002d883a 	mov	r22,zero
   28948:	002b883a 	mov	r21,zero
   2894c:	9839883a 	mov	fp,r19
   28950:	00007606 	br	28b2c <___vfiprintf_internal_r+0x704>
   28954:	8523c83a 	sub	r17,r16,r20
   28958:	853fbc26 	beq	r16,r20,2884c <___vfiprintf_internal_r+0x424>
   2895c:	d8c00c17 	ldw	r3,48(sp)
   28960:	d8800b17 	ldw	r2,44(sp)
   28964:	45000015 	stw	r20,0(r8)
   28968:	88c7883a 	add	r3,r17,r3
   2896c:	10800044 	addi	r2,r2,1
   28970:	d8800b15 	stw	r2,44(sp)
   28974:	44400115 	stw	r17,4(r8)
   28978:	d8c00c15 	stw	r3,48(sp)
   2897c:	10800208 	cmpgei	r2,r2,8
   28980:	1000061e 	bne	r2,zero,2899c <___vfiprintf_internal_r+0x574>
   28984:	42000204 	addi	r8,r8,8
   28988:	d8c00117 	ldw	r3,4(sp)
   2898c:	80800003 	ldbu	r2,0(r16)
   28990:	1c47883a 	add	r3,r3,r17
   28994:	d8c00115 	stw	r3,4(sp)
   28998:	003edb06 	br	28508 <___vfiprintf_internal_r+0xe0>
   2899c:	18025226 	beq	r3,zero,292e8 <___vfiprintf_internal_r+0xec0>
   289a0:	d9000017 	ldw	r4,0(sp)
   289a4:	d9800a04 	addi	r6,sp,40
   289a8:	900b883a 	mov	r5,r18
   289ac:	002831c0 	call	2831c <__sprint_r.part.0>
   289b0:	103fa81e 	bne	r2,zero,28854 <___vfiprintf_internal_r+0x42c>
   289b4:	9811883a 	mov	r8,r19
   289b8:	003ff306 	br	28988 <___vfiprintf_internal_r+0x560>
   289bc:	d8000b15 	stw	zero,44(sp)
   289c0:	8400010c 	andi	r16,r16,4
   289c4:	80022426 	beq	r16,zero,29258 <___vfiprintf_internal_r+0xe30>
   289c8:	8da1c83a 	sub	r16,r17,r22
   289cc:	0402220e 	bge	zero,r16,29258 <___vfiprintf_internal_r+0xe30>
   289d0:	9811883a 	mov	r8,r19
   289d4:	80c00450 	cmplti	r3,r16,17
   289d8:	d9000b17 	ldw	r4,44(sp)
   289dc:	01c000f4 	movhi	r7,3
   289e0:	18030b1e 	bne	r3,zero,29610 <___vfiprintf_internal_r+0x11e8>
   289e4:	39c22c04 	addi	r7,r7,2224
   289e8:	05400404 	movi	r21,16
   289ec:	00000606 	br	28a08 <___vfiprintf_internal_r+0x5e0>
   289f0:	21400084 	addi	r5,r4,2
   289f4:	42000204 	addi	r8,r8,8
   289f8:	1809883a 	mov	r4,r3
   289fc:	843ffc04 	addi	r16,r16,-16
   28a00:	80c00448 	cmpgei	r3,r16,17
   28a04:	18001726 	beq	r3,zero,28a64 <___vfiprintf_internal_r+0x63c>
   28a08:	20c00044 	addi	r3,r4,1
   28a0c:	10800404 	addi	r2,r2,16
   28a10:	41c00015 	stw	r7,0(r8)
   28a14:	45400115 	stw	r21,4(r8)
   28a18:	d8800c15 	stw	r2,48(sp)
   28a1c:	d8c00b15 	stw	r3,44(sp)
   28a20:	19400208 	cmpgei	r5,r3,8
   28a24:	283ff226 	beq	r5,zero,289f0 <___vfiprintf_internal_r+0x5c8>
   28a28:	d9000017 	ldw	r4,0(sp)
   28a2c:	d9800a04 	addi	r6,sp,40
   28a30:	900b883a 	mov	r5,r18
   28a34:	10013126 	beq	r2,zero,28efc <___vfiprintf_internal_r+0xad4>
   28a38:	d9c00215 	stw	r7,8(sp)
   28a3c:	002831c0 	call	2831c <__sprint_r.part.0>
   28a40:	103f841e 	bne	r2,zero,28854 <___vfiprintf_internal_r+0x42c>
   28a44:	d9000b17 	ldw	r4,44(sp)
   28a48:	843ffc04 	addi	r16,r16,-16
   28a4c:	80c00448 	cmpgei	r3,r16,17
   28a50:	d8800c17 	ldw	r2,48(sp)
   28a54:	d9c00217 	ldw	r7,8(sp)
   28a58:	9811883a 	mov	r8,r19
   28a5c:	21400044 	addi	r5,r4,1
   28a60:	183fe91e 	bne	r3,zero,28a08 <___vfiprintf_internal_r+0x5e0>
   28a64:	1405883a 	add	r2,r2,r16
   28a68:	d9400b15 	stw	r5,44(sp)
   28a6c:	41c00015 	stw	r7,0(r8)
   28a70:	44000115 	stw	r16,4(r8)
   28a74:	d8800c15 	stw	r2,48(sp)
   28a78:	29400210 	cmplti	r5,r5,8
   28a7c:	283f691e 	bne	r5,zero,28824 <___vfiprintf_internal_r+0x3fc>
   28a80:	1001f526 	beq	r2,zero,29258 <___vfiprintf_internal_r+0xe30>
   28a84:	d9000017 	ldw	r4,0(sp)
   28a88:	d9800a04 	addi	r6,sp,40
   28a8c:	900b883a 	mov	r5,r18
   28a90:	002831c0 	call	2831c <__sprint_r.part.0>
   28a94:	103f6f1e 	bne	r2,zero,28854 <___vfiprintf_internal_r+0x42c>
   28a98:	d8800c17 	ldw	r2,48(sp)
   28a9c:	003f6106 	br	28824 <___vfiprintf_internal_r+0x3fc>
   28aa0:	d8c00317 	ldw	r3,12(sp)
   28aa4:	8080040c 	andi	r2,r16,16
   28aa8:	1d800017 	ldw	r22,0(r3)
   28aac:	18c00104 	addi	r3,r3,4
   28ab0:	d8c00315 	stw	r3,12(sp)
   28ab4:	1000251e 	bne	r2,zero,28b4c <___vfiprintf_internal_r+0x724>
   28ab8:	8080100c 	andi	r2,r16,64
   28abc:	10002326 	beq	r2,zero,28b4c <___vfiprintf_internal_r+0x724>
   28ac0:	b5bfffcc 	andi	r22,r22,65535
   28ac4:	b5a0001c 	xori	r22,r22,32768
   28ac8:	b5a00004 	addi	r22,r22,-32768
   28acc:	b02bd7fa 	srai	r21,r22,31
   28ad0:	a805883a 	mov	r2,r21
   28ad4:	103f930e 	bge	r2,zero,28924 <___vfiprintf_internal_r+0x4fc>
   28ad8:	00800b44 	movi	r2,45
   28adc:	b006c03a 	cmpne	r3,r22,zero
   28ae0:	056bc83a 	sub	r21,zero,r21
   28ae4:	d8800945 	stb	r2,37(sp)
   28ae8:	48bfffd8 	cmpnei	r2,r9,-1
   28aec:	a8ebc83a 	sub	r21,r21,r3
   28af0:	05adc83a 	sub	r22,zero,r22
   28af4:	10000226 	beq	r2,zero,28b00 <___vfiprintf_internal_r+0x6d8>
   28af8:	00bfdfc4 	movi	r2,-129
   28afc:	80a0703a 	and	r16,r16,r2
   28b00:	03000b44 	movi	r12,45
   28b04:	a800d41e 	bne	r21,zero,28e58 <___vfiprintf_internal_r+0xa30>
   28b08:	b08002a8 	cmpgeui	r2,r22,10
   28b0c:	1000d21e 	bne	r2,zero,28e58 <___vfiprintf_internal_r+0xa30>
   28b10:	b5800c04 	addi	r22,r22,48
   28b14:	dd8016c5 	stb	r22,91(sp)
   28b18:	482d883a 	mov	r22,r9
   28b1c:	02400116 	blt	zero,r9,28b24 <___vfiprintf_internal_r+0x6fc>
   28b20:	05800044 	movi	r22,1
   28b24:	05400044 	movi	r21,1
   28b28:	df0016c4 	addi	fp,sp,91
   28b2c:	63003fcc 	andi	r12,r12,255
   28b30:	6300201c 	xori	r12,r12,128
   28b34:	633fe004 	addi	r12,r12,-128
   28b38:	603ef226 	beq	r12,zero,28704 <___vfiprintf_internal_r+0x2dc>
   28b3c:	b5800044 	addi	r22,r22,1
   28b40:	003ef006 	br	28704 <___vfiprintf_internal_r+0x2dc>
   28b44:	00251f40 	call	251f4 <__sinit>
   28b48:	003e4906 	br	28470 <___vfiprintf_internal_r+0x48>
   28b4c:	b02bd7fa 	srai	r21,r22,31
   28b50:	a805883a 	mov	r2,r21
   28b54:	003f7206 	br	28920 <___vfiprintf_internal_r+0x4f8>
   28b58:	d8800317 	ldw	r2,12(sp)
   28b5c:	14400017 	ldw	r17,0(r2)
   28b60:	17000104 	addi	fp,r2,4
   28b64:	8802200e 	bge	r17,zero,293e8 <___vfiprintf_internal_r+0xfc0>
   28b68:	0463c83a 	sub	r17,zero,r17
   28b6c:	df000315 	stw	fp,12(sp)
   28b70:	a0800007 	ldb	r2,0(r20)
   28b74:	84000114 	ori	r16,r16,4
   28b78:	003e6d06 	br	28530 <___vfiprintf_internal_r+0x108>
   28b7c:	a0800007 	ldb	r2,0(r20)
   28b80:	a1000044 	addi	r4,r20,1
   28b84:	10c00aa0 	cmpeqi	r3,r2,42
   28b88:	1802b11e 	bne	r3,zero,29650 <___vfiprintf_internal_r+0x1228>
   28b8c:	10fff404 	addi	r3,r2,-48
   28b90:	194002b0 	cmpltui	r5,r3,10
   28b94:	2029883a 	mov	r20,r4
   28b98:	0013883a 	mov	r9,zero
   28b9c:	283e6526 	beq	r5,zero,28534 <___vfiprintf_internal_r+0x10c>
   28ba0:	a0800007 	ldb	r2,0(r20)
   28ba4:	4a4002a4 	muli	r9,r9,10
   28ba8:	a5000044 	addi	r20,r20,1
   28bac:	48d3883a 	add	r9,r9,r3
   28bb0:	10fff404 	addi	r3,r2,-48
   28bb4:	190002b0 	cmpltui	r4,r3,10
   28bb8:	203ff91e 	bne	r4,zero,28ba0 <___vfiprintf_internal_r+0x778>
   28bbc:	003e5d06 	br	28534 <___vfiprintf_internal_r+0x10c>
   28bc0:	a0800007 	ldb	r2,0(r20)
   28bc4:	84002014 	ori	r16,r16,128
   28bc8:	003e5906 	br	28530 <___vfiprintf_internal_r+0x108>
   28bcc:	00c00ac4 	movi	r3,43
   28bd0:	a0800007 	ldb	r2,0(r20)
   28bd4:	d8c00945 	stb	r3,37(sp)
   28bd8:	003e5506 	br	28530 <___vfiprintf_internal_r+0x108>
   28bdc:	a0800007 	ldb	r2,0(r20)
   28be0:	84000054 	ori	r16,r16,1
   28be4:	003e5206 	br	28530 <___vfiprintf_internal_r+0x108>
   28be8:	d8c00947 	ldb	r3,37(sp)
   28bec:	a0800003 	ldbu	r2,0(r20)
   28bf0:	1800091e 	bne	r3,zero,28c18 <___vfiprintf_internal_r+0x7f0>
   28bf4:	10803fcc 	andi	r2,r2,255
   28bf8:	00c00804 	movi	r3,32
   28bfc:	1080201c 	xori	r2,r2,128
   28c00:	d8c00945 	stb	r3,37(sp)
   28c04:	10bfe004 	addi	r2,r2,-128
   28c08:	003e4906 	br	28530 <___vfiprintf_internal_r+0x108>
   28c0c:	a0800043 	ldbu	r2,1(r20)
   28c10:	84000814 	ori	r16,r16,32
   28c14:	a5000044 	addi	r20,r20,1
   28c18:	10803fcc 	andi	r2,r2,255
   28c1c:	1080201c 	xori	r2,r2,128
   28c20:	10bfe004 	addi	r2,r2,-128
   28c24:	003e4206 	br	28530 <___vfiprintf_internal_r+0x108>
   28c28:	8080080c 	andi	r2,r16,32
   28c2c:	1001f826 	beq	r2,zero,29410 <___vfiprintf_internal_r+0xfe8>
   28c30:	d9000117 	ldw	r4,4(sp)
   28c34:	d8800317 	ldw	r2,12(sp)
   28c38:	2007d7fa 	srai	r3,r4,31
   28c3c:	10800017 	ldw	r2,0(r2)
   28c40:	11000015 	stw	r4,0(r2)
   28c44:	10c00115 	stw	r3,4(r2)
   28c48:	d8800317 	ldw	r2,12(sp)
   28c4c:	10800104 	addi	r2,r2,4
   28c50:	d8800315 	stw	r2,12(sp)
   28c54:	003e2006 	br	284d8 <___vfiprintf_internal_r+0xb0>
   28c58:	a0800007 	ldb	r2,0(r20)
   28c5c:	10c01b18 	cmpnei	r3,r2,108
   28c60:	183fea26 	beq	r3,zero,28c0c <___vfiprintf_internal_r+0x7e4>
   28c64:	84000414 	ori	r16,r16,16
   28c68:	003e3106 	br	28530 <___vfiprintf_internal_r+0x108>
   28c6c:	a0800007 	ldb	r2,0(r20)
   28c70:	84001014 	ori	r16,r16,64
   28c74:	003e2e06 	br	28530 <___vfiprintf_internal_r+0x108>
   28c78:	d8c00317 	ldw	r3,12(sp)
   28c7c:	d8000945 	stb	zero,37(sp)
   28c80:	05800044 	movi	r22,1
   28c84:	18800017 	ldw	r2,0(r3)
   28c88:	18c00104 	addi	r3,r3,4
   28c8c:	d8c00315 	stw	r3,12(sp)
   28c90:	d8800d05 	stb	r2,52(sp)
   28c94:	05400044 	movi	r21,1
   28c98:	df000d04 	addi	fp,sp,52
   28c9c:	003e9806 	br	28700 <___vfiprintf_internal_r+0x2d8>
   28ca0:	80800414 	ori	r2,r16,16
   28ca4:	10c0080c 	andi	r3,r2,32
   28ca8:	18019126 	beq	r3,zero,292f0 <___vfiprintf_internal_r+0xec8>
   28cac:	d8c00317 	ldw	r3,12(sp)
   28cb0:	d8000945 	stb	zero,37(sp)
   28cb4:	1d800017 	ldw	r22,0(r3)
   28cb8:	1d400117 	ldw	r21,4(r3)
   28cbc:	18c00204 	addi	r3,r3,8
   28cc0:	d8c00315 	stw	r3,12(sp)
   28cc4:	48ffffd8 	cmpnei	r3,r9,-1
   28cc8:	18019626 	beq	r3,zero,29324 <___vfiprintf_internal_r+0xefc>
   28ccc:	00c00044 	movi	r3,1
   28cd0:	043fdfc4 	movi	r16,-129
   28cd4:	b548b03a 	or	r4,r22,r21
   28cd8:	1420703a 	and	r16,r2,r16
   28cdc:	2000191e 	bne	r4,zero,28d44 <___vfiprintf_internal_r+0x91c>
   28ce0:	4802221e 	bne	r9,zero,2956c <___vfiprintf_internal_r+0x1144>
   28ce4:	1801bc1e 	bne	r3,zero,293d8 <___vfiprintf_internal_r+0xfb0>
   28ce8:	1540004c 	andi	r21,r2,1
   28cec:	a801c126 	beq	r21,zero,293f4 <___vfiprintf_internal_r+0xfcc>
   28cf0:	00800c04 	movi	r2,48
   28cf4:	d88016c5 	stb	r2,91(sp)
   28cf8:	a82d883a 	mov	r22,r21
   28cfc:	df0016c4 	addi	fp,sp,91
   28d00:	003e8006 	br	28704 <___vfiprintf_internal_r+0x2dc>
   28d04:	80800414 	ori	r2,r16,16
   28d08:	10c0080c 	andi	r3,r2,32
   28d0c:	18018826 	beq	r3,zero,29330 <___vfiprintf_internal_r+0xf08>
   28d10:	d8c00317 	ldw	r3,12(sp)
   28d14:	d8000945 	stb	zero,37(sp)
   28d18:	1d800017 	ldw	r22,0(r3)
   28d1c:	1d400117 	ldw	r21,4(r3)
   28d20:	18c00204 	addi	r3,r3,8
   28d24:	d8c00315 	stw	r3,12(sp)
   28d28:	48ffffd8 	cmpnei	r3,r9,-1
   28d2c:	18018d26 	beq	r3,zero,29364 <___vfiprintf_internal_r+0xf3c>
   28d30:	043fdfc4 	movi	r16,-129
   28d34:	b548b03a 	or	r4,r22,r21
   28d38:	0007883a 	mov	r3,zero
   28d3c:	1420703a 	and	r16,r2,r16
   28d40:	203fe726 	beq	r4,zero,28ce0 <___vfiprintf_internal_r+0x8b8>
   28d44:	18800060 	cmpeqi	r2,r3,1
   28d48:	1002511e 	bne	r2,zero,29690 <___vfiprintf_internal_r+0x1268>
   28d4c:	18c000a0 	cmpeqi	r3,r3,2
   28d50:	1801481e 	bne	r3,zero,29274 <___vfiprintf_internal_r+0xe4c>
   28d54:	9839883a 	mov	fp,r19
   28d58:	a808977a 	slli	r4,r21,29
   28d5c:	b006d0fa 	srli	r3,r22,3
   28d60:	a82ad0fa 	srli	r21,r21,3
   28d64:	b08001cc 	andi	r2,r22,7
   28d68:	10800c04 	addi	r2,r2,48
   28d6c:	20ecb03a 	or	r22,r4,r3
   28d70:	e0bfffc5 	stb	r2,-1(fp)
   28d74:	b546b03a 	or	r3,r22,r21
   28d78:	e00b883a 	mov	r5,fp
   28d7c:	e73fffc4 	addi	fp,fp,-1
   28d80:	183ff51e 	bne	r3,zero,28d58 <___vfiprintf_internal_r+0x930>
   28d84:	80c0004c 	andi	r3,r16,1
   28d88:	18014726 	beq	r3,zero,292a8 <___vfiprintf_internal_r+0xe80>
   28d8c:	10800c18 	cmpnei	r2,r2,48
   28d90:	10014526 	beq	r2,zero,292a8 <___vfiprintf_internal_r+0xe80>
   28d94:	297fff84 	addi	r5,r5,-2
   28d98:	00800c04 	movi	r2,48
   28d9c:	e0bfffc5 	stb	r2,-1(fp)
   28da0:	996bc83a 	sub	r21,r19,r5
   28da4:	482d883a 	mov	r22,r9
   28da8:	4d41a616 	blt	r9,r21,29444 <___vfiprintf_internal_r+0x101c>
   28dac:	2839883a 	mov	fp,r5
   28db0:	003e5406 	br	28704 <___vfiprintf_internal_r+0x2dc>
   28db4:	d8800317 	ldw	r2,12(sp)
   28db8:	d8000945 	stb	zero,37(sp)
   28dbc:	17000017 	ldw	fp,0(r2)
   28dc0:	10c00104 	addi	r3,r2,4
   28dc4:	e001f026 	beq	fp,zero,29588 <___vfiprintf_internal_r+0x1160>
   28dc8:	48bfffe0 	cmpeqi	r2,r9,-1
   28dcc:	1001a01e 	bne	r2,zero,29450 <___vfiprintf_internal_r+0x1028>
   28dd0:	480d883a 	mov	r6,r9
   28dd4:	000b883a 	mov	r5,zero
   28dd8:	e009883a 	mov	r4,fp
   28ddc:	d8c00415 	stw	r3,16(sp)
   28de0:	da000315 	stw	r8,12(sp)
   28de4:	da400215 	stw	r9,8(sp)
   28de8:	002664c0 	call	2664c <memchr>
   28dec:	da400217 	ldw	r9,8(sp)
   28df0:	da000317 	ldw	r8,12(sp)
   28df4:	d8c00417 	ldw	r3,16(sp)
   28df8:	1001fe26 	beq	r2,zero,295f4 <___vfiprintf_internal_r+0x11cc>
   28dfc:	172bc83a 	sub	r21,r2,fp
   28e00:	a82d883a 	mov	r22,r21
   28e04:	d8c00315 	stw	r3,12(sp)
   28e08:	003e3d06 	br	28700 <___vfiprintf_internal_r+0x2d8>
   28e0c:	a0800007 	ldb	r2,0(r20)
   28e10:	84000814 	ori	r16,r16,32
   28e14:	003dc606 	br	28530 <___vfiprintf_internal_r+0x108>
   28e18:	d9000317 	ldw	r4,12(sp)
   28e1c:	00de0c04 	movi	r3,30768
   28e20:	014000f4 	movhi	r5,3
   28e24:	d8c0098d 	sth	r3,38(sp)
   28e28:	25800017 	ldw	r22,0(r4)
   28e2c:	20c00104 	addi	r3,r4,4
   28e30:	d8c00315 	stw	r3,12(sp)
   28e34:	28c1a804 	addi	r3,r5,1696
   28e38:	002b883a 	mov	r21,zero
   28e3c:	80800094 	ori	r2,r16,2
   28e40:	d8c00515 	stw	r3,20(sp)
   28e44:	d8000945 	stb	zero,37(sp)
   28e48:	48ffffd8 	cmpnei	r3,r9,-1
   28e4c:	18010826 	beq	r3,zero,29270 <___vfiprintf_internal_r+0xe48>
   28e50:	00c00084 	movi	r3,2
   28e54:	003f9e06 	br	28cd0 <___vfiprintf_internal_r+0x8a8>
   28e58:	9839883a 	mov	fp,r19
   28e5c:	b009883a 	mov	r4,r22
   28e60:	a80b883a 	mov	r5,r21
   28e64:	01800284 	movi	r6,10
   28e68:	000f883a 	mov	r7,zero
   28e6c:	db000615 	stw	r12,24(sp)
   28e70:	da000415 	stw	r8,16(sp)
   28e74:	da400215 	stw	r9,8(sp)
   28e78:	002adf80 	call	2adf8 <__umoddi3>
   28e7c:	10800c04 	addi	r2,r2,48
   28e80:	b009883a 	mov	r4,r22
   28e84:	a80b883a 	mov	r5,r21
   28e88:	e0bfffc5 	stb	r2,-1(fp)
   28e8c:	01800284 	movi	r6,10
   28e90:	000f883a 	mov	r7,zero
   28e94:	002a8a80 	call	2a8a8 <__udivdi3>
   28e98:	a809883a 	mov	r4,r21
   28e9c:	b00b883a 	mov	r5,r22
   28ea0:	da400217 	ldw	r9,8(sp)
   28ea4:	da000417 	ldw	r8,16(sp)
   28ea8:	db000617 	ldw	r12,24(sp)
   28eac:	e73fffc4 	addi	fp,fp,-1
   28eb0:	102d883a 	mov	r22,r2
   28eb4:	182b883a 	mov	r21,r3
   28eb8:	203fe81e 	bne	r4,zero,28e5c <___vfiprintf_internal_r+0xa34>
   28ebc:	294002a8 	cmpgeui	r5,r5,10
   28ec0:	283fe61e 	bne	r5,zero,28e5c <___vfiprintf_internal_r+0xa34>
   28ec4:	9f2bc83a 	sub	r21,r19,fp
   28ec8:	482d883a 	mov	r22,r9
   28ecc:	4d7f170e 	bge	r9,r21,28b2c <___vfiprintf_internal_r+0x704>
   28ed0:	a82d883a 	mov	r22,r21
   28ed4:	003f1506 	br	28b2c <___vfiprintf_internal_r+0x704>
   28ed8:	00c00044 	movi	r3,1
   28edc:	a805883a 	mov	r2,r21
   28ee0:	df001715 	stw	fp,92(sp)
   28ee4:	dd401815 	stw	r21,96(sp)
   28ee8:	dd400c15 	stw	r21,48(sp)
   28eec:	d8c00b15 	stw	r3,44(sp)
   28ef0:	9811883a 	mov	r8,r19
   28ef4:	42000204 	addi	r8,r8,8
   28ef8:	003e4606 	br	28814 <___vfiprintf_internal_r+0x3ec>
   28efc:	01400044 	movi	r5,1
   28f00:	0009883a 	mov	r4,zero
   28f04:	9811883a 	mov	r8,r19
   28f08:	003ebc06 	br	289fc <___vfiprintf_internal_r+0x5d4>
   28f0c:	8d8fc83a 	sub	r7,r17,r22
   28f10:	01fe2f0e 	bge	zero,r7,287d0 <___vfiprintf_internal_r+0x3a8>
   28f14:	38c00450 	cmplti	r3,r7,17
   28f18:	1801c01e 	bne	r3,zero,2961c <___vfiprintf_internal_r+0x11f4>
   28f1c:	00c000f4 	movhi	r3,3
   28f20:	18c22804 	addi	r3,r3,2208
   28f24:	d8c00415 	stw	r3,16(sp)
   28f28:	03000404 	movi	r12,16
   28f2c:	00000606 	br	28f48 <___vfiprintf_internal_r+0xb20>
   28f30:	21800084 	addi	r6,r4,2
   28f34:	42000204 	addi	r8,r8,8
   28f38:	1809883a 	mov	r4,r3
   28f3c:	39fffc04 	addi	r7,r7,-16
   28f40:	38c00448 	cmpgei	r3,r7,17
   28f44:	18001b26 	beq	r3,zero,28fb4 <___vfiprintf_internal_r+0xb8c>
   28f48:	d9400417 	ldw	r5,16(sp)
   28f4c:	20c00044 	addi	r3,r4,1
   28f50:	10800404 	addi	r2,r2,16
   28f54:	41400015 	stw	r5,0(r8)
   28f58:	43000115 	stw	r12,4(r8)
   28f5c:	d8800c15 	stw	r2,48(sp)
   28f60:	d8c00b15 	stw	r3,44(sp)
   28f64:	19400208 	cmpgei	r5,r3,8
   28f68:	283ff126 	beq	r5,zero,28f30 <___vfiprintf_internal_r+0xb08>
   28f6c:	d9000017 	ldw	r4,0(sp)
   28f70:	d9800a04 	addi	r6,sp,40
   28f74:	900b883a 	mov	r5,r18
   28f78:	10005c26 	beq	r2,zero,290ec <___vfiprintf_internal_r+0xcc4>
   28f7c:	d9c00615 	stw	r7,24(sp)
   28f80:	da400215 	stw	r9,8(sp)
   28f84:	002831c0 	call	2831c <__sprint_r.part.0>
   28f88:	103e321e 	bne	r2,zero,28854 <___vfiprintf_internal_r+0x42c>
   28f8c:	d9c00617 	ldw	r7,24(sp)
   28f90:	d9000b17 	ldw	r4,44(sp)
   28f94:	d8800c17 	ldw	r2,48(sp)
   28f98:	39fffc04 	addi	r7,r7,-16
   28f9c:	38c00448 	cmpgei	r3,r7,17
   28fa0:	da400217 	ldw	r9,8(sp)
   28fa4:	9811883a 	mov	r8,r19
   28fa8:	21800044 	addi	r6,r4,1
   28fac:	03000404 	movi	r12,16
   28fb0:	183fe51e 	bne	r3,zero,28f48 <___vfiprintf_internal_r+0xb20>
   28fb4:	d8c00417 	ldw	r3,16(sp)
   28fb8:	11c5883a 	add	r2,r2,r7
   28fbc:	41c00115 	stw	r7,4(r8)
   28fc0:	40c00015 	stw	r3,0(r8)
   28fc4:	d8800c15 	stw	r2,48(sp)
   28fc8:	d9800b15 	stw	r6,44(sp)
   28fcc:	30c00208 	cmpgei	r3,r6,8
   28fd0:	18010b26 	beq	r3,zero,29400 <___vfiprintf_internal_r+0xfd8>
   28fd4:	10017826 	beq	r2,zero,295b8 <___vfiprintf_internal_r+0x1190>
   28fd8:	d9000017 	ldw	r4,0(sp)
   28fdc:	d9800a04 	addi	r6,sp,40
   28fe0:	900b883a 	mov	r5,r18
   28fe4:	da400215 	stw	r9,8(sp)
   28fe8:	002831c0 	call	2831c <__sprint_r.part.0>
   28fec:	103e191e 	bne	r2,zero,28854 <___vfiprintf_internal_r+0x42c>
   28ff0:	da400217 	ldw	r9,8(sp)
   28ff4:	d9000b17 	ldw	r4,44(sp)
   28ff8:	d8800c17 	ldw	r2,48(sp)
   28ffc:	4d53c83a 	sub	r9,r9,r21
   29000:	9811883a 	mov	r8,r19
   29004:	21400044 	addi	r5,r4,1
   29008:	027df30e 	bge	zero,r9,287d8 <___vfiprintf_internal_r+0x3b0>
   2900c:	48c00450 	cmplti	r3,r9,17
   29010:	1801651e 	bne	r3,zero,295a8 <___vfiprintf_internal_r+0x1180>
   29014:	ddc00415 	stw	r23,16(sp)
   29018:	01c00404 	movi	r7,16
   2901c:	00000606 	br	29038 <___vfiprintf_internal_r+0xc10>
   29020:	21400084 	addi	r5,r4,2
   29024:	42000204 	addi	r8,r8,8
   29028:	1809883a 	mov	r4,r3
   2902c:	4a7ffc04 	addi	r9,r9,-16
   29030:	48c00448 	cmpgei	r3,r9,17
   29034:	18001826 	beq	r3,zero,29098 <___vfiprintf_internal_r+0xc70>
   29038:	20c00044 	addi	r3,r4,1
   2903c:	10800404 	addi	r2,r2,16
   29040:	45c00015 	stw	r23,0(r8)
   29044:	41c00115 	stw	r7,4(r8)
   29048:	d8800c15 	stw	r2,48(sp)
   2904c:	d8c00b15 	stw	r3,44(sp)
   29050:	19400208 	cmpgei	r5,r3,8
   29054:	283ff226 	beq	r5,zero,29020 <___vfiprintf_internal_r+0xbf8>
   29058:	d9000017 	ldw	r4,0(sp)
   2905c:	d9800a04 	addi	r6,sp,40
   29060:	900b883a 	mov	r5,r18
   29064:	10001726 	beq	r2,zero,290c4 <___vfiprintf_internal_r+0xc9c>
   29068:	da400215 	stw	r9,8(sp)
   2906c:	002831c0 	call	2831c <__sprint_r.part.0>
   29070:	103df81e 	bne	r2,zero,28854 <___vfiprintf_internal_r+0x42c>
   29074:	da400217 	ldw	r9,8(sp)
   29078:	d9000b17 	ldw	r4,44(sp)
   2907c:	d8800c17 	ldw	r2,48(sp)
   29080:	4a7ffc04 	addi	r9,r9,-16
   29084:	48c00448 	cmpgei	r3,r9,17
   29088:	9811883a 	mov	r8,r19
   2908c:	21400044 	addi	r5,r4,1
   29090:	01c00404 	movi	r7,16
   29094:	183fe81e 	bne	r3,zero,29038 <___vfiprintf_internal_r+0xc10>
   29098:	d8c00417 	ldw	r3,16(sp)
   2909c:	1245883a 	add	r2,r2,r9
   290a0:	42400115 	stw	r9,4(r8)
   290a4:	40c00015 	stw	r3,0(r8)
   290a8:	d8800c15 	stw	r2,48(sp)
   290ac:	d9400b15 	stw	r5,44(sp)
   290b0:	28c00208 	cmpgei	r3,r5,8
   290b4:	1800811e 	bne	r3,zero,292bc <___vfiprintf_internal_r+0xe94>
   290b8:	42000204 	addi	r8,r8,8
   290bc:	29400044 	addi	r5,r5,1
   290c0:	003dc506 	br	287d8 <___vfiprintf_internal_r+0x3b0>
   290c4:	01400044 	movi	r5,1
   290c8:	0009883a 	mov	r4,zero
   290cc:	9811883a 	mov	r8,r19
   290d0:	003fd606 	br	2902c <___vfiprintf_internal_r+0xc04>
   290d4:	d9000017 	ldw	r4,0(sp)
   290d8:	d9800a04 	addi	r6,sp,40
   290dc:	900b883a 	mov	r5,r18
   290e0:	002831c0 	call	2831c <__sprint_r.part.0>
   290e4:	103dd526 	beq	r2,zero,2883c <___vfiprintf_internal_r+0x414>
   290e8:	003dda06 	br	28854 <___vfiprintf_internal_r+0x42c>
   290ec:	01800044 	movi	r6,1
   290f0:	0009883a 	mov	r4,zero
   290f4:	9811883a 	mov	r8,r19
   290f8:	003f9006 	br	28f3c <___vfiprintf_internal_r+0xb14>
   290fc:	10001026 	beq	r2,zero,29140 <___vfiprintf_internal_r+0xd18>
   29100:	d9000017 	ldw	r4,0(sp)
   29104:	d9800a04 	addi	r6,sp,40
   29108:	900b883a 	mov	r5,r18
   2910c:	da400615 	stw	r9,24(sp)
   29110:	db000415 	stw	r12,16(sp)
   29114:	db400215 	stw	r13,8(sp)
   29118:	002831c0 	call	2831c <__sprint_r.part.0>
   2911c:	103dcd1e 	bne	r2,zero,28854 <___vfiprintf_internal_r+0x42c>
   29120:	d9000b17 	ldw	r4,44(sp)
   29124:	d8800c17 	ldw	r2,48(sp)
   29128:	da400617 	ldw	r9,24(sp)
   2912c:	db000417 	ldw	r12,16(sp)
   29130:	db400217 	ldw	r13,8(sp)
   29134:	9811883a 	mov	r8,r19
   29138:	21400044 	addi	r5,r4,1
   2913c:	003d8a06 	br	28768 <___vfiprintf_internal_r+0x340>
   29140:	6800bc26 	beq	r13,zero,29434 <___vfiprintf_internal_r+0x100c>
   29144:	d8800984 	addi	r2,sp,38
   29148:	d8801715 	stw	r2,92(sp)
   2914c:	00800084 	movi	r2,2
   29150:	d8801815 	stw	r2,96(sp)
   29154:	01400044 	movi	r5,1
   29158:	9811883a 	mov	r8,r19
   2915c:	2809883a 	mov	r4,r5
   29160:	42000204 	addi	r8,r8,8
   29164:	29400044 	addi	r5,r5,1
   29168:	003d9706 	br	287c8 <___vfiprintf_internal_r+0x3a0>
   2916c:	19400450 	cmplti	r5,r3,17
   29170:	01c000f4 	movhi	r7,3
   29174:	2801231e 	bne	r5,zero,29604 <___vfiprintf_internal_r+0x11dc>
   29178:	39c22c04 	addi	r7,r7,2224
   2917c:	03800404 	movi	r14,16
   29180:	00000706 	br	291a0 <___vfiprintf_internal_r+0xd78>
   29184:	23c00084 	addi	r15,r4,2
   29188:	42000204 	addi	r8,r8,8
   2918c:	3009883a 	mov	r4,r6
   29190:	18fffc04 	addi	r3,r3,-16
   29194:	19400448 	cmpgei	r5,r3,17
   29198:	28002026 	beq	r5,zero,2921c <___vfiprintf_internal_r+0xdf4>
   2919c:	21800044 	addi	r6,r4,1
   291a0:	10800404 	addi	r2,r2,16
   291a4:	41c00015 	stw	r7,0(r8)
   291a8:	43800115 	stw	r14,4(r8)
   291ac:	d8800c15 	stw	r2,48(sp)
   291b0:	d9800b15 	stw	r6,44(sp)
   291b4:	31400208 	cmpgei	r5,r6,8
   291b8:	283ff226 	beq	r5,zero,29184 <___vfiprintf_internal_r+0xd5c>
   291bc:	d9000017 	ldw	r4,0(sp)
   291c0:	d9800a04 	addi	r6,sp,40
   291c4:	900b883a 	mov	r5,r18
   291c8:	10001f26 	beq	r2,zero,29248 <___vfiprintf_internal_r+0xe20>
   291cc:	d9c00815 	stw	r7,32(sp)
   291d0:	d8c00715 	stw	r3,28(sp)
   291d4:	da400615 	stw	r9,24(sp)
   291d8:	db000415 	stw	r12,16(sp)
   291dc:	db400215 	stw	r13,8(sp)
   291e0:	002831c0 	call	2831c <__sprint_r.part.0>
   291e4:	103d9b1e 	bne	r2,zero,28854 <___vfiprintf_internal_r+0x42c>
   291e8:	d8c00717 	ldw	r3,28(sp)
   291ec:	d9000b17 	ldw	r4,44(sp)
   291f0:	d8800c17 	ldw	r2,48(sp)
   291f4:	18fffc04 	addi	r3,r3,-16
   291f8:	19400448 	cmpgei	r5,r3,17
   291fc:	d9c00817 	ldw	r7,32(sp)
   29200:	da400617 	ldw	r9,24(sp)
   29204:	db000417 	ldw	r12,16(sp)
   29208:	db400217 	ldw	r13,8(sp)
   2920c:	9811883a 	mov	r8,r19
   29210:	23c00044 	addi	r15,r4,1
   29214:	03800404 	movi	r14,16
   29218:	283fe01e 	bne	r5,zero,2919c <___vfiprintf_internal_r+0xd74>
   2921c:	10c5883a 	add	r2,r2,r3
   29220:	40c00115 	stw	r3,4(r8)
   29224:	41c00015 	stw	r7,0(r8)
   29228:	d8800c15 	stw	r2,48(sp)
   2922c:	dbc00b15 	stw	r15,44(sp)
   29230:	78c00208 	cmpgei	r3,r15,8
   29234:	1800511e 	bne	r3,zero,2937c <___vfiprintf_internal_r+0xf54>
   29238:	42000204 	addi	r8,r8,8
   2923c:	79400044 	addi	r5,r15,1
   29240:	7809883a 	mov	r4,r15
   29244:	003d3a06 	br	28730 <___vfiprintf_internal_r+0x308>
   29248:	0009883a 	mov	r4,zero
   2924c:	03c00044 	movi	r15,1
   29250:	9811883a 	mov	r8,r19
   29254:	003fce06 	br	29190 <___vfiprintf_internal_r+0xd68>
   29258:	8d80010e 	bge	r17,r22,29260 <___vfiprintf_internal_r+0xe38>
   2925c:	b023883a 	mov	r17,r22
   29260:	d8800117 	ldw	r2,4(sp)
   29264:	1445883a 	add	r2,r2,r17
   29268:	d8800115 	stw	r2,4(sp)
   2926c:	003d7306 	br	2883c <___vfiprintf_internal_r+0x414>
   29270:	1021883a 	mov	r16,r2
   29274:	9839883a 	mov	fp,r19
   29278:	d9000517 	ldw	r4,20(sp)
   2927c:	b08003cc 	andi	r2,r22,15
   29280:	a806973a 	slli	r3,r21,28
   29284:	b02cd13a 	srli	r22,r22,4
   29288:	2085883a 	add	r2,r4,r2
   2928c:	10800003 	ldbu	r2,0(r2)
   29290:	a82ad13a 	srli	r21,r21,4
   29294:	1dacb03a 	or	r22,r3,r22
   29298:	e0bfffc5 	stb	r2,-1(fp)
   2929c:	b544b03a 	or	r2,r22,r21
   292a0:	e73fffc4 	addi	fp,fp,-1
   292a4:	103ff41e 	bne	r2,zero,29278 <___vfiprintf_internal_r+0xe50>
   292a8:	9f2bc83a 	sub	r21,r19,fp
   292ac:	482d883a 	mov	r22,r9
   292b0:	4d7d140e 	bge	r9,r21,28704 <___vfiprintf_internal_r+0x2dc>
   292b4:	a82d883a 	mov	r22,r21
   292b8:	003d1206 	br	28704 <___vfiprintf_internal_r+0x2dc>
   292bc:	103f0626 	beq	r2,zero,28ed8 <___vfiprintf_internal_r+0xab0>
   292c0:	d9000017 	ldw	r4,0(sp)
   292c4:	d9800a04 	addi	r6,sp,40
   292c8:	900b883a 	mov	r5,r18
   292cc:	002831c0 	call	2831c <__sprint_r.part.0>
   292d0:	103d601e 	bne	r2,zero,28854 <___vfiprintf_internal_r+0x42c>
   292d4:	d9400b17 	ldw	r5,44(sp)
   292d8:	d8800c17 	ldw	r2,48(sp)
   292dc:	9811883a 	mov	r8,r19
   292e0:	29400044 	addi	r5,r5,1
   292e4:	003d3c06 	br	287d8 <___vfiprintf_internal_r+0x3b0>
   292e8:	d8000b15 	stw	zero,44(sp)
   292ec:	003db106 	br	289b4 <___vfiprintf_internal_r+0x58c>
   292f0:	d9000317 	ldw	r4,12(sp)
   292f4:	10c0040c 	andi	r3,r2,16
   292f8:	25800017 	ldw	r22,0(r4)
   292fc:	21000104 	addi	r4,r4,4
   29300:	d9000315 	stw	r4,12(sp)
   29304:	1800031e 	bne	r3,zero,29314 <___vfiprintf_internal_r+0xeec>
   29308:	10c0100c 	andi	r3,r2,64
   2930c:	18000126 	beq	r3,zero,29314 <___vfiprintf_internal_r+0xeec>
   29310:	b5bfffcc 	andi	r22,r22,65535
   29314:	d8000945 	stb	zero,37(sp)
   29318:	48ffffd8 	cmpnei	r3,r9,-1
   2931c:	002b883a 	mov	r21,zero
   29320:	183e6a1e 	bne	r3,zero,28ccc <___vfiprintf_internal_r+0x8a4>
   29324:	1021883a 	mov	r16,r2
   29328:	0019883a 	mov	r12,zero
   2932c:	003df506 	br	28b04 <___vfiprintf_internal_r+0x6dc>
   29330:	d9000317 	ldw	r4,12(sp)
   29334:	10c0040c 	andi	r3,r2,16
   29338:	25800017 	ldw	r22,0(r4)
   2933c:	21000104 	addi	r4,r4,4
   29340:	d9000315 	stw	r4,12(sp)
   29344:	1800031e 	bne	r3,zero,29354 <___vfiprintf_internal_r+0xf2c>
   29348:	10c0100c 	andi	r3,r2,64
   2934c:	18000126 	beq	r3,zero,29354 <___vfiprintf_internal_r+0xf2c>
   29350:	b5bfffcc 	andi	r22,r22,65535
   29354:	d8000945 	stb	zero,37(sp)
   29358:	48ffffd8 	cmpnei	r3,r9,-1
   2935c:	002b883a 	mov	r21,zero
   29360:	183e731e 	bne	r3,zero,28d30 <___vfiprintf_internal_r+0x908>
   29364:	1021883a 	mov	r16,r2
   29368:	003e7a06 	br	28d54 <___vfiprintf_internal_r+0x92c>
   2936c:	01400044 	movi	r5,1
   29370:	0009883a 	mov	r4,zero
   29374:	9811883a 	mov	r8,r19
   29378:	003d1306 	br	287c8 <___vfiprintf_internal_r+0x3a0>
   2937c:	10005726 	beq	r2,zero,294dc <___vfiprintf_internal_r+0x10b4>
   29380:	d9000017 	ldw	r4,0(sp)
   29384:	d9800a04 	addi	r6,sp,40
   29388:	900b883a 	mov	r5,r18
   2938c:	da400615 	stw	r9,24(sp)
   29390:	db000415 	stw	r12,16(sp)
   29394:	db400215 	stw	r13,8(sp)
   29398:	002831c0 	call	2831c <__sprint_r.part.0>
   2939c:	103d2d1e 	bne	r2,zero,28854 <___vfiprintf_internal_r+0x42c>
   293a0:	d9000b17 	ldw	r4,44(sp)
   293a4:	d8800c17 	ldw	r2,48(sp)
   293a8:	da400617 	ldw	r9,24(sp)
   293ac:	db000417 	ldw	r12,16(sp)
   293b0:	db400217 	ldw	r13,8(sp)
   293b4:	9811883a 	mov	r8,r19
   293b8:	21400044 	addi	r5,r4,1
   293bc:	003cdc06 	br	28730 <___vfiprintf_internal_r+0x308>
   293c0:	d8000945 	stb	zero,37(sp)
   293c4:	48bfffd8 	cmpnei	r2,r9,-1
   293c8:	103faa26 	beq	r2,zero,29274 <___vfiprintf_internal_r+0xe4c>
   293cc:	00bfdfc4 	movi	r2,-129
   293d0:	80a0703a 	and	r16,r16,r2
   293d4:	4800621e 	bne	r9,zero,29560 <___vfiprintf_internal_r+0x1138>
   293d8:	002d883a 	mov	r22,zero
   293dc:	002b883a 	mov	r21,zero
   293e0:	9839883a 	mov	fp,r19
   293e4:	003cc706 	br	28704 <___vfiprintf_internal_r+0x2dc>
   293e8:	a0800007 	ldb	r2,0(r20)
   293ec:	df000315 	stw	fp,12(sp)
   293f0:	003c4f06 	br	28530 <___vfiprintf_internal_r+0x108>
   293f4:	002d883a 	mov	r22,zero
   293f8:	9839883a 	mov	fp,r19
   293fc:	003cc106 	br	28704 <___vfiprintf_internal_r+0x2dc>
   29400:	42000204 	addi	r8,r8,8
   29404:	31400044 	addi	r5,r6,1
   29408:	3009883a 	mov	r4,r6
   2940c:	003cf006 	br	287d0 <___vfiprintf_internal_r+0x3a8>
   29410:	8080040c 	andi	r2,r16,16
   29414:	10003e1e 	bne	r2,zero,29510 <___vfiprintf_internal_r+0x10e8>
   29418:	8400100c 	andi	r16,r16,64
   2941c:	80003c26 	beq	r16,zero,29510 <___vfiprintf_internal_r+0x10e8>
   29420:	d8800317 	ldw	r2,12(sp)
   29424:	d8c00117 	ldw	r3,4(sp)
   29428:	10800017 	ldw	r2,0(r2)
   2942c:	10c0000d 	sth	r3,0(r2)
   29430:	003e0506 	br	28c48 <___vfiprintf_internal_r+0x820>
   29434:	0009883a 	mov	r4,zero
   29438:	01400044 	movi	r5,1
   2943c:	9811883a 	mov	r8,r19
   29440:	003ce106 	br	287c8 <___vfiprintf_internal_r+0x3a0>
   29444:	a82d883a 	mov	r22,r21
   29448:	2839883a 	mov	fp,r5
   2944c:	003cad06 	br	28704 <___vfiprintf_internal_r+0x2dc>
   29450:	e009883a 	mov	r4,fp
   29454:	da000215 	stw	r8,8(sp)
   29458:	d8c00315 	stw	r3,12(sp)
   2945c:	0020b840 	call	20b84 <strlen>
   29460:	da000217 	ldw	r8,8(sp)
   29464:	102b883a 	mov	r21,r2
   29468:	102d883a 	mov	r22,r2
   2946c:	003ca406 	br	28700 <___vfiprintf_internal_r+0x2d8>
   29470:	8005883a 	mov	r2,r16
   29474:	003e0b06 	br	28ca4 <___vfiprintf_internal_r+0x87c>
   29478:	00c000f4 	movhi	r3,3
   2947c:	18c1a304 	addi	r3,r3,1676
   29480:	d8c00515 	stw	r3,20(sp)
   29484:	80c0080c 	andi	r3,r16,32
   29488:	18002826 	beq	r3,zero,2952c <___vfiprintf_internal_r+0x1104>
   2948c:	d8c00317 	ldw	r3,12(sp)
   29490:	1d800017 	ldw	r22,0(r3)
   29494:	1d400117 	ldw	r21,4(r3)
   29498:	18c00204 	addi	r3,r3,8
   2949c:	d8c00315 	stw	r3,12(sp)
   294a0:	80c0004c 	andi	r3,r16,1
   294a4:	18001f26 	beq	r3,zero,29524 <___vfiprintf_internal_r+0x10fc>
   294a8:	b546b03a 	or	r3,r22,r21
   294ac:	183fc426 	beq	r3,zero,293c0 <___vfiprintf_internal_r+0xf98>
   294b0:	00c00c04 	movi	r3,48
   294b4:	d8c00985 	stb	r3,38(sp)
   294b8:	d88009c5 	stb	r2,39(sp)
   294bc:	d8000945 	stb	zero,37(sp)
   294c0:	48bfffd8 	cmpnei	r2,r9,-1
   294c4:	80c00094 	ori	r3,r16,2
   294c8:	10006d1e 	bne	r2,zero,29680 <___vfiprintf_internal_r+0x1258>
   294cc:	1821883a 	mov	r16,r3
   294d0:	003f6806 	br	29274 <___vfiprintf_internal_r+0xe4c>
   294d4:	8005883a 	mov	r2,r16
   294d8:	003e0b06 	br	28d08 <___vfiprintf_internal_r+0x8e0>
   294dc:	d8c00947 	ldb	r3,37(sp)
   294e0:	18003b26 	beq	r3,zero,295d0 <___vfiprintf_internal_r+0x11a8>
   294e4:	d8800944 	addi	r2,sp,37
   294e8:	d8801715 	stw	r2,92(sp)
   294ec:	00800044 	movi	r2,1
   294f0:	d8801815 	stw	r2,96(sp)
   294f4:	01400044 	movi	r5,1
   294f8:	9811883a 	mov	r8,r19
   294fc:	003c9706 	br	2875c <___vfiprintf_internal_r+0x334>
   29500:	00c000f4 	movhi	r3,3
   29504:	18c1a804 	addi	r3,r3,1696
   29508:	d8c00515 	stw	r3,20(sp)
   2950c:	003fdd06 	br	29484 <___vfiprintf_internal_r+0x105c>
   29510:	d8800317 	ldw	r2,12(sp)
   29514:	d8c00117 	ldw	r3,4(sp)
   29518:	10800017 	ldw	r2,0(r2)
   2951c:	10c00015 	stw	r3,0(r2)
   29520:	003dc906 	br	28c48 <___vfiprintf_internal_r+0x820>
   29524:	8005883a 	mov	r2,r16
   29528:	003e4606 	br	28e44 <___vfiprintf_internal_r+0xa1c>
   2952c:	d9000317 	ldw	r4,12(sp)
   29530:	80c0040c 	andi	r3,r16,16
   29534:	25800017 	ldw	r22,0(r4)
   29538:	21000104 	addi	r4,r4,4
   2953c:	d9000315 	stw	r4,12(sp)
   29540:	1800051e 	bne	r3,zero,29558 <___vfiprintf_internal_r+0x1130>
   29544:	80c0100c 	andi	r3,r16,64
   29548:	18000326 	beq	r3,zero,29558 <___vfiprintf_internal_r+0x1130>
   2954c:	b5bfffcc 	andi	r22,r22,65535
   29550:	002b883a 	mov	r21,zero
   29554:	003fd206 	br	294a0 <___vfiprintf_internal_r+0x1078>
   29558:	002b883a 	mov	r21,zero
   2955c:	003fd006 	br	294a0 <___vfiprintf_internal_r+0x1078>
   29560:	002d883a 	mov	r22,zero
   29564:	002b883a 	mov	r21,zero
   29568:	003f4206 	br	29274 <___vfiprintf_internal_r+0xe4c>
   2956c:	18800060 	cmpeqi	r2,r3,1
   29570:	1000341e 	bne	r2,zero,29644 <___vfiprintf_internal_r+0x121c>
   29574:	18c000a0 	cmpeqi	r3,r3,2
   29578:	183ff91e 	bne	r3,zero,29560 <___vfiprintf_internal_r+0x1138>
   2957c:	002d883a 	mov	r22,zero
   29580:	002b883a 	mov	r21,zero
   29584:	003df306 	br	28d54 <___vfiprintf_internal_r+0x92c>
   29588:	488001f0 	cmpltui	r2,r9,7
   2958c:	482b883a 	mov	r21,r9
   29590:	10000d26 	beq	r2,zero,295c8 <___vfiprintf_internal_r+0x11a0>
   29594:	070000f4 	movhi	fp,3
   29598:	a82d883a 	mov	r22,r21
   2959c:	d8c00315 	stw	r3,12(sp)
   295a0:	e701ad04 	addi	fp,fp,1716
   295a4:	003c5606 	br	28700 <___vfiprintf_internal_r+0x2d8>
   295a8:	00c000f4 	movhi	r3,3
   295ac:	18c22804 	addi	r3,r3,2208
   295b0:	d8c00415 	stw	r3,16(sp)
   295b4:	003eb806 	br	29098 <___vfiprintf_internal_r+0xc70>
   295b8:	01400044 	movi	r5,1
   295bc:	0009883a 	mov	r4,zero
   295c0:	9811883a 	mov	r8,r19
   295c4:	003c8206 	br	287d0 <___vfiprintf_internal_r+0x3a8>
   295c8:	05400184 	movi	r21,6
   295cc:	003ff106 	br	29594 <___vfiprintf_internal_r+0x116c>
   295d0:	0009883a 	mov	r4,zero
   295d4:	01400044 	movi	r5,1
   295d8:	9811883a 	mov	r8,r19
   295dc:	003c6206 	br	28768 <___vfiprintf_internal_r+0x340>
   295e0:	d9000017 	ldw	r4,0(sp)
   295e4:	d9800a04 	addi	r6,sp,40
   295e8:	900b883a 	mov	r5,r18
   295ec:	002831c0 	call	2831c <__sprint_r.part.0>
   295f0:	003c9806 	br	28854 <___vfiprintf_internal_r+0x42c>
   295f4:	482d883a 	mov	r22,r9
   295f8:	d8c00315 	stw	r3,12(sp)
   295fc:	482b883a 	mov	r21,r9
   29600:	003c3f06 	br	28700 <___vfiprintf_internal_r+0x2d8>
   29604:	301f883a 	mov	r15,r6
   29608:	39c22c04 	addi	r7,r7,2224
   2960c:	003f0306 	br	2921c <___vfiprintf_internal_r+0xdf4>
   29610:	21400044 	addi	r5,r4,1
   29614:	39c22c04 	addi	r7,r7,2224
   29618:	003d1206 	br	28a64 <___vfiprintf_internal_r+0x63c>
   2961c:	00c000f4 	movhi	r3,3
   29620:	18c22804 	addi	r3,r3,2208
   29624:	280d883a 	mov	r6,r5
   29628:	d8c00415 	stw	r3,16(sp)
   2962c:	003e6106 	br	28fb4 <___vfiprintf_internal_r+0xb8c>
   29630:	00bfffc4 	movi	r2,-1
   29634:	d8800115 	stw	r2,4(sp)
   29638:	003c8906 	br	28860 <___vfiprintf_internal_r+0x438>
   2963c:	05800c04 	movi	r22,48
   29640:	003d3406 	br	28b14 <___vfiprintf_internal_r+0x6ec>
   29644:	0019883a 	mov	r12,zero
   29648:	05800c04 	movi	r22,48
   2964c:	003d3106 	br	28b14 <___vfiprintf_internal_r+0x6ec>
   29650:	d8800317 	ldw	r2,12(sp)
   29654:	12400017 	ldw	r9,0(r2)
   29658:	17000104 	addi	fp,r2,4
   2965c:	4800010e 	bge	r9,zero,29664 <___vfiprintf_internal_r+0x123c>
   29660:	027fffc4 	movi	r9,-1
   29664:	a0800043 	ldbu	r2,1(r20)
   29668:	df000315 	stw	fp,12(sp)
   2966c:	2029883a 	mov	r20,r4
   29670:	10803fcc 	andi	r2,r2,255
   29674:	1080201c 	xori	r2,r2,128
   29678:	10bfe004 	addi	r2,r2,-128
   2967c:	003bac06 	br	28530 <___vfiprintf_internal_r+0x108>
   29680:	00bfdfc4 	movi	r2,-129
   29684:	8084703a 	and	r2,r16,r2
   29688:	14000094 	ori	r16,r2,2
   2968c:	003ef906 	br	29274 <___vfiprintf_internal_r+0xe4c>
   29690:	0019883a 	mov	r12,zero
   29694:	003d1b06 	br	28b04 <___vfiprintf_internal_r+0x6dc>

00029698 <__vfiprintf_internal>:
   29698:	00c000f4 	movhi	r3,3
   2969c:	2005883a 	mov	r2,r4
   296a0:	190a3b17 	ldw	r4,10476(r3)
   296a4:	300f883a 	mov	r7,r6
   296a8:	280d883a 	mov	r6,r5
   296ac:	100b883a 	mov	r5,r2
   296b0:	00284281 	jmpi	28428 <___vfiprintf_internal_r>

000296b4 <__sbprintf>:
   296b4:	28c0038b 	ldhu	r3,14(r5)
   296b8:	2880030b 	ldhu	r2,12(r5)
   296bc:	2ac01917 	ldw	r11,100(r5)
   296c0:	1806943a 	slli	r3,r3,16
   296c4:	2a800717 	ldw	r10,28(r5)
   296c8:	2a400917 	ldw	r9,36(r5)
   296cc:	defee204 	addi	sp,sp,-1144
   296d0:	10bfff4c 	andi	r2,r2,65533
   296d4:	10c4b03a 	or	r2,r2,r3
   296d8:	da001a04 	addi	r8,sp,104
   296dc:	00c10004 	movi	r3,1024
   296e0:	dc011a15 	stw	r16,1128(sp)
   296e4:	2821883a 	mov	r16,r5
   296e8:	d80b883a 	mov	r5,sp
   296ec:	dc811c15 	stw	r18,1136(sp)
   296f0:	dc411b15 	stw	r17,1132(sp)
   296f4:	dfc11d15 	stw	ra,1140(sp)
   296f8:	2025883a 	mov	r18,r4
   296fc:	dac01915 	stw	r11,100(sp)
   29700:	d8800315 	stw	r2,12(sp)
   29704:	da800715 	stw	r10,28(sp)
   29708:	da400915 	stw	r9,36(sp)
   2970c:	da000015 	stw	r8,0(sp)
   29710:	da000415 	stw	r8,16(sp)
   29714:	d8c00215 	stw	r3,8(sp)
   29718:	d8c00515 	stw	r3,20(sp)
   2971c:	d8000615 	stw	zero,24(sp)
   29720:	00284280 	call	28428 <___vfiprintf_internal_r>
   29724:	1023883a 	mov	r17,r2
   29728:	10000d0e 	bge	r2,zero,29760 <__sbprintf+0xac>
   2972c:	d880030b 	ldhu	r2,12(sp)
   29730:	1080100c 	andi	r2,r2,64
   29734:	10000326 	beq	r2,zero,29744 <__sbprintf+0x90>
   29738:	8080030b 	ldhu	r2,12(r16)
   2973c:	10801014 	ori	r2,r2,64
   29740:	8080030d 	sth	r2,12(r16)
   29744:	8805883a 	mov	r2,r17
   29748:	dfc11d17 	ldw	ra,1140(sp)
   2974c:	dc811c17 	ldw	r18,1136(sp)
   29750:	dc411b17 	ldw	r17,1132(sp)
   29754:	dc011a17 	ldw	r16,1128(sp)
   29758:	dec11e04 	addi	sp,sp,1144
   2975c:	f800283a 	ret
   29760:	d80b883a 	mov	r5,sp
   29764:	9009883a 	mov	r4,r18
   29768:	0024ddc0 	call	24ddc <_fflush_r>
   2976c:	103fef26 	beq	r2,zero,2972c <__sbprintf+0x78>
   29770:	047fffc4 	movi	r17,-1
   29774:	003fed06 	br	2972c <__sbprintf+0x78>

00029778 <_write_r>:
   29778:	2807883a 	mov	r3,r5
   2977c:	defffe04 	addi	sp,sp,-8
   29780:	dc000015 	stw	r16,0(sp)
   29784:	300b883a 	mov	r5,r6
   29788:	008000f4 	movhi	r2,3
   2978c:	380d883a 	mov	r6,r7
   29790:	2021883a 	mov	r16,r4
   29794:	1809883a 	mov	r4,r3
   29798:	dfc00115 	stw	ra,4(sp)
   2979c:	10115915 	stw	zero,17764(r2)
   297a0:	002e3bc0 	call	2e3bc <write>
   297a4:	10ffffd8 	cmpnei	r3,r2,-1
   297a8:	18000426 	beq	r3,zero,297bc <_write_r+0x44>
   297ac:	dfc00117 	ldw	ra,4(sp)
   297b0:	dc000017 	ldw	r16,0(sp)
   297b4:	dec00204 	addi	sp,sp,8
   297b8:	f800283a 	ret
   297bc:	00c000f4 	movhi	r3,3
   297c0:	18d15917 	ldw	r3,17764(r3)
   297c4:	183ff926 	beq	r3,zero,297ac <_write_r+0x34>
   297c8:	80c00015 	stw	r3,0(r16)
   297cc:	dfc00117 	ldw	ra,4(sp)
   297d0:	dc000017 	ldw	r16,0(sp)
   297d4:	dec00204 	addi	sp,sp,8
   297d8:	f800283a 	ret

000297dc <_close_r>:
   297dc:	defffe04 	addi	sp,sp,-8
   297e0:	dc000015 	stw	r16,0(sp)
   297e4:	008000f4 	movhi	r2,3
   297e8:	2021883a 	mov	r16,r4
   297ec:	2809883a 	mov	r4,r5
   297f0:	dfc00115 	stw	ra,4(sp)
   297f4:	10115915 	stw	zero,17764(r2)
   297f8:	002d9f80 	call	2d9f8 <close>
   297fc:	10ffffd8 	cmpnei	r3,r2,-1
   29800:	18000426 	beq	r3,zero,29814 <_close_r+0x38>
   29804:	dfc00117 	ldw	ra,4(sp)
   29808:	dc000017 	ldw	r16,0(sp)
   2980c:	dec00204 	addi	sp,sp,8
   29810:	f800283a 	ret
   29814:	00c000f4 	movhi	r3,3
   29818:	18d15917 	ldw	r3,17764(r3)
   2981c:	183ff926 	beq	r3,zero,29804 <_close_r+0x28>
   29820:	80c00015 	stw	r3,0(r16)
   29824:	dfc00117 	ldw	ra,4(sp)
   29828:	dc000017 	ldw	r16,0(sp)
   2982c:	dec00204 	addi	sp,sp,8
   29830:	f800283a 	ret

00029834 <__assert_func>:
   29834:	008000f4 	movhi	r2,3
   29838:	120a3b17 	ldw	r8,10476(r2)
   2983c:	defffc04 	addi	sp,sp,-16
   29840:	3807883a 	mov	r3,r7
   29844:	3005883a 	mov	r2,r6
   29848:	dfc00315 	stw	ra,12(sp)
   2984c:	42400317 	ldw	r9,12(r8)
   29850:	200f883a 	mov	r7,r4
   29854:	2811883a 	mov	r8,r5
   29858:	180d883a 	mov	r6,r3
   2985c:	10000a26 	beq	r2,zero,29888 <__assert_func+0x54>
   29860:	00c000f4 	movhi	r3,3
   29864:	18c23004 	addi	r3,r3,2240
   29868:	014000f4 	movhi	r5,3
   2986c:	29423404 	addi	r5,r5,2256
   29870:	4809883a 	mov	r4,r9
   29874:	d8c00115 	stw	r3,4(sp)
   29878:	da000015 	stw	r8,0(sp)
   2987c:	d8800215 	stw	r2,8(sp)
   29880:	0029b240 	call	29b24 <fiprintf>
   29884:	002a36c0 	call	2a36c <abort>
   29888:	00c000f4 	movhi	r3,3
   2988c:	18c23304 	addi	r3,r3,2252
   29890:	1805883a 	mov	r2,r3
   29894:	003ff406 	br	29868 <__assert_func+0x34>

00029898 <__assert>:
   29898:	deffff04 	addi	sp,sp,-4
   2989c:	300f883a 	mov	r7,r6
   298a0:	000d883a 	mov	r6,zero
   298a4:	dfc00015 	stw	ra,0(sp)
   298a8:	00298340 	call	29834 <__assert_func>

000298ac <_calloc_r>:
   298ac:	2804d43a 	srli	r2,r5,16
   298b0:	deffff04 	addi	sp,sp,-4
   298b4:	dfc00015 	stw	ra,0(sp)
   298b8:	3006d43a 	srli	r3,r6,16
   298bc:	10002a1e 	bne	r2,zero,29968 <_calloc_r+0xbc>
   298c0:	1800411e 	bne	r3,zero,299c8 <_calloc_r+0x11c>
   298c4:	31bfffcc 	andi	r6,r6,65535
   298c8:	297fffcc 	andi	r5,r5,65535
   298cc:	298b383a 	mul	r5,r5,r6
   298d0:	0025e980 	call	25e98 <_malloc_r>
   298d4:	1009883a 	mov	r4,r2
   298d8:	10003626 	beq	r2,zero,299b4 <_calloc_r+0x108>
   298dc:	11bfff17 	ldw	r6,-4(r2)
   298e0:	00bfff04 	movi	r2,-4
   298e4:	308c703a 	and	r6,r6,r2
   298e8:	31bfff04 	addi	r6,r6,-4
   298ec:	30800968 	cmpgeui	r2,r6,37
   298f0:	10000c1e 	bne	r2,zero,29924 <_calloc_r+0x78>
   298f4:	30800530 	cmpltui	r2,r6,20
   298f8:	1000111e 	bne	r2,zero,29940 <_calloc_r+0x94>
   298fc:	20000015 	stw	zero,0(r4)
   29900:	20000115 	stw	zero,4(r4)
   29904:	30800728 	cmpgeui	r2,r6,28
   29908:	10001526 	beq	r2,zero,29960 <_calloc_r+0xb4>
   2990c:	20000215 	stw	zero,8(r4)
   29910:	20000315 	stw	zero,12(r4)
   29914:	31800920 	cmpeqi	r6,r6,36
   29918:	3000311e 	bne	r6,zero,299e0 <_calloc_r+0x134>
   2991c:	20800404 	addi	r2,r4,16
   29920:	00000806 	br	29944 <_calloc_r+0x98>
   29924:	000b883a 	mov	r5,zero
   29928:	00269440 	call	26944 <memset>
   2992c:	1009883a 	mov	r4,r2
   29930:	2005883a 	mov	r2,r4
   29934:	dfc00017 	ldw	ra,0(sp)
   29938:	dec00104 	addi	sp,sp,4
   2993c:	f800283a 	ret
   29940:	2005883a 	mov	r2,r4
   29944:	10000015 	stw	zero,0(r2)
   29948:	10000115 	stw	zero,4(r2)
   2994c:	10000215 	stw	zero,8(r2)
   29950:	2005883a 	mov	r2,r4
   29954:	dfc00017 	ldw	ra,0(sp)
   29958:	dec00104 	addi	sp,sp,4
   2995c:	f800283a 	ret
   29960:	20800204 	addi	r2,r4,8
   29964:	003ff706 	br	29944 <_calloc_r+0x98>
   29968:	1800191e 	bne	r3,zero,299d0 <_calloc_r+0x124>
   2996c:	1007883a 	mov	r3,r2
   29970:	3005883a 	mov	r2,r6
   29974:	297fffcc 	andi	r5,r5,65535
   29978:	31bfffcc 	andi	r6,r6,65535
   2997c:	298b383a 	mul	r5,r5,r6
   29980:	18ffffcc 	andi	r3,r3,65535
   29984:	10bfffcc 	andi	r2,r2,65535
   29988:	10c5383a 	mul	r2,r2,r3
   2998c:	2806d43a 	srli	r3,r5,16
   29990:	10c5883a 	add	r2,r2,r3
   29994:	1006d43a 	srli	r3,r2,16
   29998:	18000d1e 	bne	r3,zero,299d0 <_calloc_r+0x124>
   2999c:	1004943a 	slli	r2,r2,16
   299a0:	297fffcc 	andi	r5,r5,65535
   299a4:	114ab03a 	or	r5,r2,r5
   299a8:	0025e980 	call	25e98 <_malloc_r>
   299ac:	1009883a 	mov	r4,r2
   299b0:	103fca1e 	bne	r2,zero,298dc <_calloc_r+0x30>
   299b4:	0009883a 	mov	r4,zero
   299b8:	2005883a 	mov	r2,r4
   299bc:	dfc00017 	ldw	ra,0(sp)
   299c0:	dec00104 	addi	sp,sp,4
   299c4:	f800283a 	ret
   299c8:	2805883a 	mov	r2,r5
   299cc:	003fe906 	br	29974 <_calloc_r+0xc8>
   299d0:	00299f00 	call	299f0 <__errno>
   299d4:	00c00304 	movi	r3,12
   299d8:	10c00015 	stw	r3,0(r2)
   299dc:	003ff506 	br	299b4 <_calloc_r+0x108>
   299e0:	20000415 	stw	zero,16(r4)
   299e4:	20800604 	addi	r2,r4,24
   299e8:	20000515 	stw	zero,20(r4)
   299ec:	003fd506 	br	29944 <_calloc_r+0x98>

000299f0 <__errno>:
   299f0:	008000f4 	movhi	r2,3
   299f4:	108a3b17 	ldw	r2,10476(r2)
   299f8:	f800283a 	ret

000299fc <_fclose_r>:
   299fc:	defffc04 	addi	sp,sp,-16
   29a00:	dfc00315 	stw	ra,12(sp)
   29a04:	dc800215 	stw	r18,8(sp)
   29a08:	dc400115 	stw	r17,4(sp)
   29a0c:	dc000015 	stw	r16,0(sp)
   29a10:	28000726 	beq	r5,zero,29a30 <_fclose_r+0x34>
   29a14:	2821883a 	mov	r16,r5
   29a18:	2023883a 	mov	r17,r4
   29a1c:	20000226 	beq	r4,zero,29a28 <_fclose_r+0x2c>
   29a20:	20800e17 	ldw	r2,56(r4)
   29a24:	10002726 	beq	r2,zero,29ac4 <_fclose_r+0xc8>
   29a28:	8080030f 	ldh	r2,12(r16)
   29a2c:	1000081e 	bne	r2,zero,29a50 <_fclose_r+0x54>
   29a30:	0025883a 	mov	r18,zero
   29a34:	9005883a 	mov	r2,r18
   29a38:	dfc00317 	ldw	ra,12(sp)
   29a3c:	dc800217 	ldw	r18,8(sp)
   29a40:	dc400117 	ldw	r17,4(sp)
   29a44:	dc000017 	ldw	r16,0(sp)
   29a48:	dec00404 	addi	sp,sp,16
   29a4c:	f800283a 	ret
   29a50:	800b883a 	mov	r5,r16
   29a54:	8809883a 	mov	r4,r17
   29a58:	0024bd40 	call	24bd4 <__sflush_r>
   29a5c:	80c00b17 	ldw	r3,44(r16)
   29a60:	1025883a 	mov	r18,r2
   29a64:	18000426 	beq	r3,zero,29a78 <_fclose_r+0x7c>
   29a68:	81400717 	ldw	r5,28(r16)
   29a6c:	8809883a 	mov	r4,r17
   29a70:	183ee83a 	callr	r3
   29a74:	10001716 	blt	r2,zero,29ad4 <_fclose_r+0xd8>
   29a78:	8080030b 	ldhu	r2,12(r16)
   29a7c:	1080200c 	andi	r2,r2,128
   29a80:	1000181e 	bne	r2,zero,29ae4 <_fclose_r+0xe8>
   29a84:	81400c17 	ldw	r5,48(r16)
   29a88:	28000526 	beq	r5,zero,29aa0 <_fclose_r+0xa4>
   29a8c:	80801004 	addi	r2,r16,64
   29a90:	28800226 	beq	r5,r2,29a9c <_fclose_r+0xa0>
   29a94:	8809883a 	mov	r4,r17
   29a98:	00253600 	call	25360 <_free_r>
   29a9c:	80000c15 	stw	zero,48(r16)
   29aa0:	81401117 	ldw	r5,68(r16)
   29aa4:	28000326 	beq	r5,zero,29ab4 <_fclose_r+0xb8>
   29aa8:	8809883a 	mov	r4,r17
   29aac:	00253600 	call	25360 <_free_r>
   29ab0:	80001115 	stw	zero,68(r16)
   29ab4:	00252040 	call	25204 <__sfp_lock_acquire>
   29ab8:	8000030d 	sth	zero,12(r16)
   29abc:	00252080 	call	25208 <__sfp_lock_release>
   29ac0:	003fdc06 	br	29a34 <_fclose_r+0x38>
   29ac4:	00251f40 	call	251f4 <__sinit>
   29ac8:	8080030f 	ldh	r2,12(r16)
   29acc:	103fd826 	beq	r2,zero,29a30 <_fclose_r+0x34>
   29ad0:	003fdf06 	br	29a50 <_fclose_r+0x54>
   29ad4:	8080030b 	ldhu	r2,12(r16)
   29ad8:	04bfffc4 	movi	r18,-1
   29adc:	1080200c 	andi	r2,r2,128
   29ae0:	103fe826 	beq	r2,zero,29a84 <_fclose_r+0x88>
   29ae4:	81400417 	ldw	r5,16(r16)
   29ae8:	8809883a 	mov	r4,r17
   29aec:	00253600 	call	25360 <_free_r>
   29af0:	003fe406 	br	29a84 <_fclose_r+0x88>

00029af4 <fclose>:
   29af4:	008000f4 	movhi	r2,3
   29af8:	200b883a 	mov	r5,r4
   29afc:	110a3b17 	ldw	r4,10476(r2)
   29b00:	00299fc1 	jmpi	299fc <_fclose_r>

00029b04 <_fiprintf_r>:
   29b04:	defffe04 	addi	sp,sp,-8
   29b08:	dfc00015 	stw	ra,0(sp)
   29b0c:	d9c00115 	stw	r7,4(sp)
   29b10:	d9c00104 	addi	r7,sp,4
   29b14:	002a0d80 	call	2a0d8 <_vfiprintf_r>
   29b18:	dfc00017 	ldw	ra,0(sp)
   29b1c:	dec00204 	addi	sp,sp,8
   29b20:	f800283a 	ret

00029b24 <fiprintf>:
   29b24:	defffd04 	addi	sp,sp,-12
   29b28:	2005883a 	mov	r2,r4
   29b2c:	dfc00015 	stw	ra,0(sp)
   29b30:	d9800115 	stw	r6,4(sp)
   29b34:	d9c00215 	stw	r7,8(sp)
   29b38:	00c000f4 	movhi	r3,3
   29b3c:	190a3b17 	ldw	r4,10476(r3)
   29b40:	280d883a 	mov	r6,r5
   29b44:	d9c00104 	addi	r7,sp,4
   29b48:	100b883a 	mov	r5,r2
   29b4c:	002a0d80 	call	2a0d8 <_vfiprintf_r>
   29b50:	dfc00017 	ldw	ra,0(sp)
   29b54:	dec00304 	addi	sp,sp,12
   29b58:	f800283a 	ret

00029b5c <__fputwc>:
   29b5c:	defff904 	addi	sp,sp,-28
   29b60:	dcc00415 	stw	r19,16(sp)
   29b64:	dc800315 	stw	r18,12(sp)
   29b68:	dc000115 	stw	r16,4(sp)
   29b6c:	dfc00615 	stw	ra,24(sp)
   29b70:	dd000515 	stw	r20,20(sp)
   29b74:	dc400215 	stw	r17,8(sp)
   29b78:	2027883a 	mov	r19,r4
   29b7c:	2825883a 	mov	r18,r5
   29b80:	3021883a 	mov	r16,r6
   29b84:	0029e880 	call	29e88 <__locale_mb_cur_max>
   29b88:	10800058 	cmpnei	r2,r2,1
   29b8c:	1000071e 	bne	r2,zero,29bac <__fputwc+0x50>
   29b90:	90bfffc4 	addi	r2,r18,-1
   29b94:	10803fe8 	cmpgeui	r2,r2,255
   29b98:	1000041e 	bne	r2,zero,29bac <__fputwc+0x50>
   29b9c:	900b883a 	mov	r5,r18
   29ba0:	dc8000c5 	stb	r18,3(sp)
   29ba4:	05000044 	movi	r20,1
   29ba8:	00000a06 	br	29bd4 <__fputwc+0x78>
   29bac:	81c01704 	addi	r7,r16,92
   29bb0:	900d883a 	mov	r6,r18
   29bb4:	d94000c4 	addi	r5,sp,3
   29bb8:	9809883a 	mov	r4,r19
   29bbc:	002a23c0 	call	2a23c <_wcrtomb_r>
   29bc0:	1029883a 	mov	r20,r2
   29bc4:	10bfffd8 	cmpnei	r2,r2,-1
   29bc8:	10003826 	beq	r2,zero,29cac <__fputwc+0x150>
   29bcc:	a0001f26 	beq	r20,zero,29c4c <__fputwc+0xf0>
   29bd0:	d94000c3 	ldbu	r5,3(sp)
   29bd4:	0023883a 	mov	r17,zero
   29bd8:	00000a06 	br	29c04 <__fputwc+0xa8>
   29bdc:	80800017 	ldw	r2,0(r16)
   29be0:	11400005 	stb	r5,0(r2)
   29be4:	80c00017 	ldw	r3,0(r16)
   29be8:	18c00044 	addi	r3,r3,1
   29bec:	80c00015 	stw	r3,0(r16)
   29bf0:	8c400044 	addi	r17,r17,1
   29bf4:	d88000c4 	addi	r2,sp,3
   29bf8:	1447883a 	add	r3,r2,r17
   29bfc:	8d00132e 	bgeu	r17,r20,29c4c <__fputwc+0xf0>
   29c00:	19400003 	ldbu	r5,0(r3)
   29c04:	80c00217 	ldw	r3,8(r16)
   29c08:	18ffffc4 	addi	r3,r3,-1
   29c0c:	80c00215 	stw	r3,8(r16)
   29c10:	183ff20e 	bge	r3,zero,29bdc <__fputwc+0x80>
   29c14:	80800617 	ldw	r2,24(r16)
   29c18:	18801516 	blt	r3,r2,29c70 <__fputwc+0x114>
   29c1c:	80800017 	ldw	r2,0(r16)
   29c20:	11400005 	stb	r5,0(r2)
   29c24:	80800017 	ldw	r2,0(r16)
   29c28:	10c00003 	ldbu	r3,0(r2)
   29c2c:	10800044 	addi	r2,r2,1
   29c30:	18c002a0 	cmpeqi	r3,r3,10
   29c34:	1800161e 	bne	r3,zero,29c90 <__fputwc+0x134>
   29c38:	80800015 	stw	r2,0(r16)
   29c3c:	8c400044 	addi	r17,r17,1
   29c40:	d88000c4 	addi	r2,sp,3
   29c44:	1447883a 	add	r3,r2,r17
   29c48:	8d3fed36 	bltu	r17,r20,29c00 <__fputwc+0xa4>
   29c4c:	9005883a 	mov	r2,r18
   29c50:	dfc00617 	ldw	ra,24(sp)
   29c54:	dd000517 	ldw	r20,20(sp)
   29c58:	dcc00417 	ldw	r19,16(sp)
   29c5c:	dc800317 	ldw	r18,12(sp)
   29c60:	dc400217 	ldw	r17,8(sp)
   29c64:	dc000117 	ldw	r16,4(sp)
   29c68:	dec00704 	addi	sp,sp,28
   29c6c:	f800283a 	ret
   29c70:	29403fcc 	andi	r5,r5,255
   29c74:	800d883a 	mov	r6,r16
   29c78:	9809883a 	mov	r4,r19
   29c7c:	002a0dc0 	call	2a0dc <__swbuf_r>
   29c80:	10bfffe0 	cmpeqi	r2,r2,-1
   29c84:	103fda26 	beq	r2,zero,29bf0 <__fputwc+0x94>
   29c88:	00bfffc4 	movi	r2,-1
   29c8c:	003ff006 	br	29c50 <__fputwc+0xf4>
   29c90:	800d883a 	mov	r6,r16
   29c94:	01400284 	movi	r5,10
   29c98:	9809883a 	mov	r4,r19
   29c9c:	002a0dc0 	call	2a0dc <__swbuf_r>
   29ca0:	10bfffe0 	cmpeqi	r2,r2,-1
   29ca4:	103fd226 	beq	r2,zero,29bf0 <__fputwc+0x94>
   29ca8:	003ff706 	br	29c88 <__fputwc+0x12c>
   29cac:	8080030b 	ldhu	r2,12(r16)
   29cb0:	10801014 	ori	r2,r2,64
   29cb4:	8080030d 	sth	r2,12(r16)
   29cb8:	00bfffc4 	movi	r2,-1
   29cbc:	003fe406 	br	29c50 <__fputwc+0xf4>

00029cc0 <_fputwc_r>:
   29cc0:	3080030b 	ldhu	r2,12(r6)
   29cc4:	10c8000c 	andi	r3,r2,8192
   29cc8:	1800051e 	bne	r3,zero,29ce0 <_fputwc_r+0x20>
   29ccc:	30c01917 	ldw	r3,100(r6)
   29cd0:	10880014 	ori	r2,r2,8192
   29cd4:	3080030d 	sth	r2,12(r6)
   29cd8:	18880014 	ori	r2,r3,8192
   29cdc:	30801915 	stw	r2,100(r6)
   29ce0:	0029b5c1 	jmpi	29b5c <__fputwc>

00029ce4 <fputwc>:
   29ce4:	defffc04 	addi	sp,sp,-16
   29ce8:	008000f4 	movhi	r2,3
   29cec:	dc000215 	stw	r16,8(sp)
   29cf0:	140a3b17 	ldw	r16,10476(r2)
   29cf4:	dfc00315 	stw	ra,12(sp)
   29cf8:	280d883a 	mov	r6,r5
   29cfc:	200b883a 	mov	r5,r4
   29d00:	80000226 	beq	r16,zero,29d0c <fputwc+0x28>
   29d04:	80800e17 	ldw	r2,56(r16)
   29d08:	10000d26 	beq	r2,zero,29d40 <fputwc+0x5c>
   29d0c:	3080030b 	ldhu	r2,12(r6)
   29d10:	10c8000c 	andi	r3,r2,8192
   29d14:	1800051e 	bne	r3,zero,29d2c <fputwc+0x48>
   29d18:	30c01917 	ldw	r3,100(r6)
   29d1c:	10880014 	ori	r2,r2,8192
   29d20:	3080030d 	sth	r2,12(r6)
   29d24:	18880014 	ori	r2,r3,8192
   29d28:	30801915 	stw	r2,100(r6)
   29d2c:	8009883a 	mov	r4,r16
   29d30:	dfc00317 	ldw	ra,12(sp)
   29d34:	dc000217 	ldw	r16,8(sp)
   29d38:	dec00404 	addi	sp,sp,16
   29d3c:	0029b5c1 	jmpi	29b5c <__fputwc>
   29d40:	d9000015 	stw	r4,0(sp)
   29d44:	8009883a 	mov	r4,r16
   29d48:	d9800115 	stw	r6,4(sp)
   29d4c:	00251f40 	call	251f4 <__sinit>
   29d50:	d9800117 	ldw	r6,4(sp)
   29d54:	d9400017 	ldw	r5,0(sp)
   29d58:	003fec06 	br	29d0c <fputwc+0x28>

00029d5c <_fstat_r>:
   29d5c:	2807883a 	mov	r3,r5
   29d60:	defffe04 	addi	sp,sp,-8
   29d64:	dc000015 	stw	r16,0(sp)
   29d68:	008000f4 	movhi	r2,3
   29d6c:	300b883a 	mov	r5,r6
   29d70:	2021883a 	mov	r16,r4
   29d74:	1809883a 	mov	r4,r3
   29d78:	dfc00115 	stw	ra,4(sp)
   29d7c:	10115915 	stw	zero,17764(r2)
   29d80:	002db6c0 	call	2db6c <fstat>
   29d84:	10ffffd8 	cmpnei	r3,r2,-1
   29d88:	18000426 	beq	r3,zero,29d9c <_fstat_r+0x40>
   29d8c:	dfc00117 	ldw	ra,4(sp)
   29d90:	dc000017 	ldw	r16,0(sp)
   29d94:	dec00204 	addi	sp,sp,8
   29d98:	f800283a 	ret
   29d9c:	00c000f4 	movhi	r3,3
   29da0:	18d15917 	ldw	r3,17764(r3)
   29da4:	183ff926 	beq	r3,zero,29d8c <_fstat_r+0x30>
   29da8:	80c00015 	stw	r3,0(r16)
   29dac:	dfc00117 	ldw	ra,4(sp)
   29db0:	dc000017 	ldw	r16,0(sp)
   29db4:	dec00204 	addi	sp,sp,8
   29db8:	f800283a 	ret

00029dbc <_isatty_r>:
   29dbc:	defffe04 	addi	sp,sp,-8
   29dc0:	dc000015 	stw	r16,0(sp)
   29dc4:	008000f4 	movhi	r2,3
   29dc8:	2021883a 	mov	r16,r4
   29dcc:	2809883a 	mov	r4,r5
   29dd0:	dfc00115 	stw	ra,4(sp)
   29dd4:	10115915 	stw	zero,17764(r2)
   29dd8:	002dc780 	call	2dc78 <isatty>
   29ddc:	10ffffd8 	cmpnei	r3,r2,-1
   29de0:	18000426 	beq	r3,zero,29df4 <_isatty_r+0x38>
   29de4:	dfc00117 	ldw	ra,4(sp)
   29de8:	dc000017 	ldw	r16,0(sp)
   29dec:	dec00204 	addi	sp,sp,8
   29df0:	f800283a 	ret
   29df4:	00c000f4 	movhi	r3,3
   29df8:	18d15917 	ldw	r3,17764(r3)
   29dfc:	183ff926 	beq	r3,zero,29de4 <_isatty_r+0x28>
   29e00:	80c00015 	stw	r3,0(r16)
   29e04:	dfc00117 	ldw	ra,4(sp)
   29e08:	dc000017 	ldw	r16,0(sp)
   29e0c:	dec00204 	addi	sp,sp,8
   29e10:	f800283a 	ret

00029e14 <_setlocale_r>:
   29e14:	30001626 	beq	r6,zero,29e70 <_setlocale_r+0x5c>
   29e18:	014000f4 	movhi	r5,3
   29e1c:	defffe04 	addi	sp,sp,-8
   29e20:	29424104 	addi	r5,r5,2308
   29e24:	3009883a 	mov	r4,r6
   29e28:	dc000015 	stw	r16,0(sp)
   29e2c:	dfc00115 	stw	ra,4(sp)
   29e30:	3021883a 	mov	r16,r6
   29e34:	002a0200 	call	2a020 <strcmp>
   29e38:	1000061e 	bne	r2,zero,29e54 <_setlocale_r+0x40>
   29e3c:	008000f4 	movhi	r2,3
   29e40:	10824004 	addi	r2,r2,2304
   29e44:	dfc00117 	ldw	ra,4(sp)
   29e48:	dc000017 	ldw	r16,0(sp)
   29e4c:	dec00204 	addi	sp,sp,8
   29e50:	f800283a 	ret
   29e54:	80800003 	ldbu	r2,0(r16)
   29e58:	10bfef44 	addi	r2,r2,-67
   29e5c:	10000726 	beq	r2,zero,29e7c <_setlocale_r+0x68>
   29e60:	80800003 	ldbu	r2,0(r16)
   29e64:	103ff526 	beq	r2,zero,29e3c <_setlocale_r+0x28>
   29e68:	0005883a 	mov	r2,zero
   29e6c:	003ff506 	br	29e44 <_setlocale_r+0x30>
   29e70:	008000f4 	movhi	r2,3
   29e74:	10824004 	addi	r2,r2,2304
   29e78:	f800283a 	ret
   29e7c:	80800043 	ldbu	r2,1(r16)
   29e80:	103fee26 	beq	r2,zero,29e3c <_setlocale_r+0x28>
   29e84:	003ff606 	br	29e60 <_setlocale_r+0x4c>

00029e88 <__locale_mb_cur_max>:
   29e88:	008000f4 	movhi	r2,3
   29e8c:	10859107 	ldb	r2,5700(r2)
   29e90:	f800283a 	ret

00029e94 <setlocale>:
   29e94:	28001626 	beq	r5,zero,29ef0 <setlocale+0x5c>
   29e98:	defffe04 	addi	sp,sp,-8
   29e9c:	dc000015 	stw	r16,0(sp)
   29ea0:	2821883a 	mov	r16,r5
   29ea4:	014000f4 	movhi	r5,3
   29ea8:	29424104 	addi	r5,r5,2308
   29eac:	8009883a 	mov	r4,r16
   29eb0:	dfc00115 	stw	ra,4(sp)
   29eb4:	002a0200 	call	2a020 <strcmp>
   29eb8:	1000061e 	bne	r2,zero,29ed4 <setlocale+0x40>
   29ebc:	008000f4 	movhi	r2,3
   29ec0:	10824004 	addi	r2,r2,2304
   29ec4:	dfc00117 	ldw	ra,4(sp)
   29ec8:	dc000017 	ldw	r16,0(sp)
   29ecc:	dec00204 	addi	sp,sp,8
   29ed0:	f800283a 	ret
   29ed4:	80800003 	ldbu	r2,0(r16)
   29ed8:	10bfef44 	addi	r2,r2,-67
   29edc:	10000726 	beq	r2,zero,29efc <setlocale+0x68>
   29ee0:	80800003 	ldbu	r2,0(r16)
   29ee4:	103ff526 	beq	r2,zero,29ebc <setlocale+0x28>
   29ee8:	0005883a 	mov	r2,zero
   29eec:	003ff506 	br	29ec4 <setlocale+0x30>
   29ef0:	008000f4 	movhi	r2,3
   29ef4:	10824004 	addi	r2,r2,2304
   29ef8:	f800283a 	ret
   29efc:	80800043 	ldbu	r2,1(r16)
   29f00:	103fee26 	beq	r2,zero,29ebc <setlocale+0x28>
   29f04:	003ff606 	br	29ee0 <setlocale+0x4c>

00029f08 <_lseek_r>:
   29f08:	2807883a 	mov	r3,r5
   29f0c:	defffe04 	addi	sp,sp,-8
   29f10:	dc000015 	stw	r16,0(sp)
   29f14:	300b883a 	mov	r5,r6
   29f18:	008000f4 	movhi	r2,3
   29f1c:	380d883a 	mov	r6,r7
   29f20:	2021883a 	mov	r16,r4
   29f24:	1809883a 	mov	r4,r3
   29f28:	dfc00115 	stw	ra,4(sp)
   29f2c:	10115915 	stw	zero,17764(r2)
   29f30:	002df700 	call	2df70 <lseek>
   29f34:	10ffffd8 	cmpnei	r3,r2,-1
   29f38:	18000426 	beq	r3,zero,29f4c <_lseek_r+0x44>
   29f3c:	dfc00117 	ldw	ra,4(sp)
   29f40:	dc000017 	ldw	r16,0(sp)
   29f44:	dec00204 	addi	sp,sp,8
   29f48:	f800283a 	ret
   29f4c:	00c000f4 	movhi	r3,3
   29f50:	18d15917 	ldw	r3,17764(r3)
   29f54:	183ff926 	beq	r3,zero,29f3c <_lseek_r+0x34>
   29f58:	80c00015 	stw	r3,0(r16)
   29f5c:	dfc00117 	ldw	ra,4(sp)
   29f60:	dc000017 	ldw	r16,0(sp)
   29f64:	dec00204 	addi	sp,sp,8
   29f68:	f800283a 	ret

00029f6c <_mbtowc_r>:
   29f6c:	008000f4 	movhi	r2,3
   29f70:	10858017 	ldw	r2,5632(r2)
   29f74:	1000683a 	jmp	r2

00029f78 <__ascii_mbtowc>:
   29f78:	deffff04 	addi	sp,sp,-4
   29f7c:	28000826 	beq	r5,zero,29fa0 <__ascii_mbtowc+0x28>
   29f80:	30000926 	beq	r6,zero,29fa8 <__ascii_mbtowc+0x30>
   29f84:	38000b26 	beq	r7,zero,29fb4 <__ascii_mbtowc+0x3c>
   29f88:	30800003 	ldbu	r2,0(r6)
   29f8c:	28800015 	stw	r2,0(r5)
   29f90:	30800003 	ldbu	r2,0(r6)
   29f94:	1004c03a 	cmpne	r2,r2,zero
   29f98:	dec00104 	addi	sp,sp,4
   29f9c:	f800283a 	ret
   29fa0:	d80b883a 	mov	r5,sp
   29fa4:	303ff71e 	bne	r6,zero,29f84 <__ascii_mbtowc+0xc>
   29fa8:	0005883a 	mov	r2,zero
   29fac:	dec00104 	addi	sp,sp,4
   29fb0:	f800283a 	ret
   29fb4:	00bfff84 	movi	r2,-2
   29fb8:	003ff706 	br	29f98 <__ascii_mbtowc+0x20>

00029fbc <_read_r>:
   29fbc:	2807883a 	mov	r3,r5
   29fc0:	defffe04 	addi	sp,sp,-8
   29fc4:	dc000015 	stw	r16,0(sp)
   29fc8:	300b883a 	mov	r5,r6
   29fcc:	008000f4 	movhi	r2,3
   29fd0:	380d883a 	mov	r6,r7
   29fd4:	2021883a 	mov	r16,r4
   29fd8:	1809883a 	mov	r4,r3
   29fdc:	dfc00115 	stw	ra,4(sp)
   29fe0:	10115915 	stw	zero,17764(r2)
   29fe4:	002e1440 	call	2e144 <read>
   29fe8:	10ffffd8 	cmpnei	r3,r2,-1
   29fec:	18000426 	beq	r3,zero,2a000 <_read_r+0x44>
   29ff0:	dfc00117 	ldw	ra,4(sp)
   29ff4:	dc000017 	ldw	r16,0(sp)
   29ff8:	dec00204 	addi	sp,sp,8
   29ffc:	f800283a 	ret
   2a000:	00c000f4 	movhi	r3,3
   2a004:	18d15917 	ldw	r3,17764(r3)
   2a008:	183ff926 	beq	r3,zero,29ff0 <_read_r+0x34>
   2a00c:	80c00015 	stw	r3,0(r16)
   2a010:	dfc00117 	ldw	ra,4(sp)
   2a014:	dc000017 	ldw	r16,0(sp)
   2a018:	dec00204 	addi	sp,sp,8
   2a01c:	f800283a 	ret

0002a020 <strcmp>:
   2a020:	2144b03a 	or	r2,r4,r5
   2a024:	108000cc 	andi	r2,r2,3
   2a028:	1000141e 	bne	r2,zero,2a07c <strcmp+0x5c>
   2a02c:	20800017 	ldw	r2,0(r4)
   2a030:	28c00017 	ldw	r3,0(r5)
   2a034:	10c0111e 	bne	r2,r3,2a07c <strcmp+0x5c>
   2a038:	01ffbff4 	movhi	r7,65279
   2a03c:	01a02074 	movhi	r6,32897
   2a040:	39ffbfc4 	addi	r7,r7,-257
   2a044:	31a02004 	addi	r6,r6,-32640
   2a048:	00000306 	br	2a058 <strcmp+0x38>
   2a04c:	20800017 	ldw	r2,0(r4)
   2a050:	28c00017 	ldw	r3,0(r5)
   2a054:	10c0091e 	bne	r2,r3,2a07c <strcmp+0x5c>
   2a058:	11c7883a 	add	r3,r2,r7
   2a05c:	0084303a 	nor	r2,zero,r2
   2a060:	1884703a 	and	r2,r3,r2
   2a064:	1184703a 	and	r2,r2,r6
   2a068:	21000104 	addi	r4,r4,4
   2a06c:	29400104 	addi	r5,r5,4
   2a070:	103ff626 	beq	r2,zero,2a04c <strcmp+0x2c>
   2a074:	0005883a 	mov	r2,zero
   2a078:	f800283a 	ret
   2a07c:	20c00003 	ldbu	r3,0(r4)
   2a080:	18803fcc 	andi	r2,r3,255
   2a084:	1080201c 	xori	r2,r2,128
   2a088:	10bfe004 	addi	r2,r2,-128
   2a08c:	1000071e 	bne	r2,zero,2a0ac <strcmp+0x8c>
   2a090:	00000a06 	br	2a0bc <strcmp+0x9c>
   2a094:	20c00003 	ldbu	r3,0(r4)
   2a098:	29400044 	addi	r5,r5,1
   2a09c:	18803fcc 	andi	r2,r3,255
   2a0a0:	1080201c 	xori	r2,r2,128
   2a0a4:	10bfe004 	addi	r2,r2,-128
   2a0a8:	10000726 	beq	r2,zero,2a0c8 <strcmp+0xa8>
   2a0ac:	29800007 	ldb	r6,0(r5)
   2a0b0:	21000044 	addi	r4,r4,1
   2a0b4:	30bff726 	beq	r6,r2,2a094 <strcmp+0x74>
   2a0b8:	18803fcc 	andi	r2,r3,255
   2a0bc:	28c00003 	ldbu	r3,0(r5)
   2a0c0:	10c5c83a 	sub	r2,r2,r3
   2a0c4:	f800283a 	ret
   2a0c8:	28c00003 	ldbu	r3,0(r5)
   2a0cc:	0005883a 	mov	r2,zero
   2a0d0:	10c5c83a 	sub	r2,r2,r3
   2a0d4:	f800283a 	ret

0002a0d8 <_vfiprintf_r>:
   2a0d8:	00284281 	jmpi	28428 <___vfiprintf_internal_r>

0002a0dc <__swbuf_r>:
   2a0dc:	defffb04 	addi	sp,sp,-20
   2a0e0:	dcc00315 	stw	r19,12(sp)
   2a0e4:	dc400115 	stw	r17,4(sp)
   2a0e8:	dc000015 	stw	r16,0(sp)
   2a0ec:	dfc00415 	stw	ra,16(sp)
   2a0f0:	dc800215 	stw	r18,8(sp)
   2a0f4:	2027883a 	mov	r19,r4
   2a0f8:	2823883a 	mov	r17,r5
   2a0fc:	3021883a 	mov	r16,r6
   2a100:	20000226 	beq	r4,zero,2a10c <__swbuf_r+0x30>
   2a104:	20800e17 	ldw	r2,56(r4)
   2a108:	10003e26 	beq	r2,zero,2a204 <__swbuf_r+0x128>
   2a10c:	80800617 	ldw	r2,24(r16)
   2a110:	80c0030b 	ldhu	r3,12(r16)
   2a114:	80800215 	stw	r2,8(r16)
   2a118:	1880020c 	andi	r2,r3,8
   2a11c:	10001f26 	beq	r2,zero,2a19c <__swbuf_r+0xc0>
   2a120:	80800417 	ldw	r2,16(r16)
   2a124:	10001d26 	beq	r2,zero,2a19c <__swbuf_r+0xc0>
   2a128:	1948000c 	andi	r5,r3,8192
   2a12c:	8c803fcc 	andi	r18,r17,255
   2a130:	28002326 	beq	r5,zero,2a1c0 <__swbuf_r+0xe4>
   2a134:	80c00017 	ldw	r3,0(r16)
   2a138:	81000517 	ldw	r4,20(r16)
   2a13c:	1885c83a 	sub	r2,r3,r2
   2a140:	1100290e 	bge	r2,r4,2a1e8 <__swbuf_r+0x10c>
   2a144:	10800044 	addi	r2,r2,1
   2a148:	81400217 	ldw	r5,8(r16)
   2a14c:	19000044 	addi	r4,r3,1
   2a150:	81000015 	stw	r4,0(r16)
   2a154:	297fffc4 	addi	r5,r5,-1
   2a158:	81400215 	stw	r5,8(r16)
   2a15c:	1c400005 	stb	r17,0(r3)
   2a160:	80c00517 	ldw	r3,20(r16)
   2a164:	18802926 	beq	r3,r2,2a20c <__swbuf_r+0x130>
   2a168:	8080030b 	ldhu	r2,12(r16)
   2a16c:	1080004c 	andi	r2,r2,1
   2a170:	10000226 	beq	r2,zero,2a17c <__swbuf_r+0xa0>
   2a174:	90800298 	cmpnei	r2,r18,10
   2a178:	10002426 	beq	r2,zero,2a20c <__swbuf_r+0x130>
   2a17c:	9005883a 	mov	r2,r18
   2a180:	dfc00417 	ldw	ra,16(sp)
   2a184:	dcc00317 	ldw	r19,12(sp)
   2a188:	dc800217 	ldw	r18,8(sp)
   2a18c:	dc400117 	ldw	r17,4(sp)
   2a190:	dc000017 	ldw	r16,0(sp)
   2a194:	dec00504 	addi	sp,sp,20
   2a198:	f800283a 	ret
   2a19c:	800b883a 	mov	r5,r16
   2a1a0:	9809883a 	mov	r4,r19
   2a1a4:	00230a40 	call	230a4 <__swsetup_r>
   2a1a8:	10001c1e 	bne	r2,zero,2a21c <__swbuf_r+0x140>
   2a1ac:	80c0030b 	ldhu	r3,12(r16)
   2a1b0:	80800417 	ldw	r2,16(r16)
   2a1b4:	8c803fcc 	andi	r18,r17,255
   2a1b8:	1948000c 	andi	r5,r3,8192
   2a1bc:	283fdd1e 	bne	r5,zero,2a134 <__swbuf_r+0x58>
   2a1c0:	81001917 	ldw	r4,100(r16)
   2a1c4:	18c80014 	ori	r3,r3,8192
   2a1c8:	0177ffc4 	movi	r5,-8193
   2a1cc:	2148703a 	and	r4,r4,r5
   2a1d0:	80c0030d 	sth	r3,12(r16)
   2a1d4:	80c00017 	ldw	r3,0(r16)
   2a1d8:	81001915 	stw	r4,100(r16)
   2a1dc:	81000517 	ldw	r4,20(r16)
   2a1e0:	1885c83a 	sub	r2,r3,r2
   2a1e4:	113fd716 	blt	r2,r4,2a144 <__swbuf_r+0x68>
   2a1e8:	800b883a 	mov	r5,r16
   2a1ec:	9809883a 	mov	r4,r19
   2a1f0:	0024ddc0 	call	24ddc <_fflush_r>
   2a1f4:	1000091e 	bne	r2,zero,2a21c <__swbuf_r+0x140>
   2a1f8:	80c00017 	ldw	r3,0(r16)
   2a1fc:	00800044 	movi	r2,1
   2a200:	003fd106 	br	2a148 <__swbuf_r+0x6c>
   2a204:	00251f40 	call	251f4 <__sinit>
   2a208:	003fc006 	br	2a10c <__swbuf_r+0x30>
   2a20c:	800b883a 	mov	r5,r16
   2a210:	9809883a 	mov	r4,r19
   2a214:	0024ddc0 	call	24ddc <_fflush_r>
   2a218:	103fd826 	beq	r2,zero,2a17c <__swbuf_r+0xa0>
   2a21c:	04bfffc4 	movi	r18,-1
   2a220:	003fd606 	br	2a17c <__swbuf_r+0xa0>

0002a224 <__swbuf>:
   2a224:	00c000f4 	movhi	r3,3
   2a228:	2005883a 	mov	r2,r4
   2a22c:	190a3b17 	ldw	r4,10476(r3)
   2a230:	280d883a 	mov	r6,r5
   2a234:	100b883a 	mov	r5,r2
   2a238:	002a0dc1 	jmpi	2a0dc <__swbuf_r>

0002a23c <_wcrtomb_r>:
   2a23c:	defffa04 	addi	sp,sp,-24
   2a240:	dc400415 	stw	r17,16(sp)
   2a244:	dc000315 	stw	r16,12(sp)
   2a248:	008000f4 	movhi	r2,3
   2a24c:	dfc00515 	stw	ra,20(sp)
   2a250:	10857f17 	ldw	r2,5628(r2)
   2a254:	2023883a 	mov	r17,r4
   2a258:	3821883a 	mov	r16,r7
   2a25c:	28000826 	beq	r5,zero,2a280 <_wcrtomb_r+0x44>
   2a260:	103ee83a 	callr	r2
   2a264:	10ffffd8 	cmpnei	r3,r2,-1
   2a268:	18000a26 	beq	r3,zero,2a294 <_wcrtomb_r+0x58>
   2a26c:	dfc00517 	ldw	ra,20(sp)
   2a270:	dc400417 	ldw	r17,16(sp)
   2a274:	dc000317 	ldw	r16,12(sp)
   2a278:	dec00604 	addi	sp,sp,24
   2a27c:	f800283a 	ret
   2a280:	000d883a 	mov	r6,zero
   2a284:	d9400084 	addi	r5,sp,2
   2a288:	103ee83a 	callr	r2
   2a28c:	10ffffd8 	cmpnei	r3,r2,-1
   2a290:	183ff61e 	bne	r3,zero,2a26c <_wcrtomb_r+0x30>
   2a294:	00802284 	movi	r2,138
   2a298:	80000015 	stw	zero,0(r16)
   2a29c:	88800015 	stw	r2,0(r17)
   2a2a0:	00bfffc4 	movi	r2,-1
   2a2a4:	003ff106 	br	2a26c <_wcrtomb_r+0x30>

0002a2a8 <wcrtomb>:
   2a2a8:	defffa04 	addi	sp,sp,-24
   2a2ac:	00c000f4 	movhi	r3,3
   2a2b0:	dc400415 	stw	r17,16(sp)
   2a2b4:	dc000315 	stw	r16,12(sp)
   2a2b8:	1c4a3b17 	ldw	r17,10476(r3)
   2a2bc:	dfc00515 	stw	ra,20(sp)
   2a2c0:	00c000f4 	movhi	r3,3
   2a2c4:	18c57f17 	ldw	r3,5628(r3)
   2a2c8:	3021883a 	mov	r16,r6
   2a2cc:	20000c26 	beq	r4,zero,2a300 <wcrtomb+0x58>
   2a2d0:	280d883a 	mov	r6,r5
   2a2d4:	800f883a 	mov	r7,r16
   2a2d8:	200b883a 	mov	r5,r4
   2a2dc:	8809883a 	mov	r4,r17
   2a2e0:	183ee83a 	callr	r3
   2a2e4:	10ffffd8 	cmpnei	r3,r2,-1
   2a2e8:	18000c26 	beq	r3,zero,2a31c <wcrtomb+0x74>
   2a2ec:	dfc00517 	ldw	ra,20(sp)
   2a2f0:	dc400417 	ldw	r17,16(sp)
   2a2f4:	dc000317 	ldw	r16,12(sp)
   2a2f8:	dec00604 	addi	sp,sp,24
   2a2fc:	f800283a 	ret
   2a300:	300f883a 	mov	r7,r6
   2a304:	d9400084 	addi	r5,sp,2
   2a308:	000d883a 	mov	r6,zero
   2a30c:	8809883a 	mov	r4,r17
   2a310:	183ee83a 	callr	r3
   2a314:	10ffffd8 	cmpnei	r3,r2,-1
   2a318:	183ff41e 	bne	r3,zero,2a2ec <wcrtomb+0x44>
   2a31c:	00802284 	movi	r2,138
   2a320:	80000015 	stw	zero,0(r16)
   2a324:	88800015 	stw	r2,0(r17)
   2a328:	00bfffc4 	movi	r2,-1
   2a32c:	003fef06 	br	2a2ec <wcrtomb+0x44>

0002a330 <_wctomb_r>:
   2a330:	008000f4 	movhi	r2,3
   2a334:	10857f17 	ldw	r2,5628(r2)
   2a338:	1000683a 	jmp	r2

0002a33c <__ascii_wctomb>:
   2a33c:	28000926 	beq	r5,zero,2a364 <__ascii_wctomb+0x28>
   2a340:	30804030 	cmpltui	r2,r6,256
   2a344:	10000326 	beq	r2,zero,2a354 <__ascii_wctomb+0x18>
   2a348:	29800005 	stb	r6,0(r5)
   2a34c:	00800044 	movi	r2,1
   2a350:	f800283a 	ret
   2a354:	00802284 	movi	r2,138
   2a358:	20800015 	stw	r2,0(r4)
   2a35c:	00bfffc4 	movi	r2,-1
   2a360:	f800283a 	ret
   2a364:	0005883a 	mov	r2,zero
   2a368:	f800283a 	ret

0002a36c <abort>:
   2a36c:	deffff04 	addi	sp,sp,-4
   2a370:	01000184 	movi	r4,6
   2a374:	dfc00015 	stw	ra,0(sp)
   2a378:	002a5dc0 	call	2a5dc <raise>
   2a37c:	01000044 	movi	r4,1
   2a380:	002daf40 	call	2daf4 <_exit>

0002a384 <_init_signal_r>:
   2a384:	2080b717 	ldw	r2,732(r4)
   2a388:	10000226 	beq	r2,zero,2a394 <_init_signal_r+0x10>
   2a38c:	0005883a 	mov	r2,zero
   2a390:	f800283a 	ret
   2a394:	defffe04 	addi	sp,sp,-8
   2a398:	01402004 	movi	r5,128
   2a39c:	dc000015 	stw	r16,0(sp)
   2a3a0:	dfc00115 	stw	ra,4(sp)
   2a3a4:	2021883a 	mov	r16,r4
   2a3a8:	0025e980 	call	25e98 <_malloc_r>
   2a3ac:	8080b715 	stw	r2,732(r16)
   2a3b0:	1009883a 	mov	r4,r2
   2a3b4:	10000826 	beq	r2,zero,2a3d8 <_init_signal_r+0x54>
   2a3b8:	01802004 	movi	r6,128
   2a3bc:	000b883a 	mov	r5,zero
   2a3c0:	00269440 	call	26944 <memset>
   2a3c4:	0005883a 	mov	r2,zero
   2a3c8:	dfc00117 	ldw	ra,4(sp)
   2a3cc:	dc000017 	ldw	r16,0(sp)
   2a3d0:	dec00204 	addi	sp,sp,8
   2a3d4:	f800283a 	ret
   2a3d8:	00bfffc4 	movi	r2,-1
   2a3dc:	003ffa06 	br	2a3c8 <_init_signal_r+0x44>

0002a3e0 <_signal_r>:
   2a3e0:	defffc04 	addi	sp,sp,-16
   2a3e4:	dc400115 	stw	r17,4(sp)
   2a3e8:	dfc00315 	stw	ra,12(sp)
   2a3ec:	dc800215 	stw	r18,8(sp)
   2a3f0:	dc000015 	stw	r16,0(sp)
   2a3f4:	28800830 	cmpltui	r2,r5,32
   2a3f8:	2023883a 	mov	r17,r4
   2a3fc:	10000e26 	beq	r2,zero,2a438 <_signal_r+0x58>
   2a400:	20c0b717 	ldw	r3,732(r4)
   2a404:	2821883a 	mov	r16,r5
   2a408:	3025883a 	mov	r18,r6
   2a40c:	18000e26 	beq	r3,zero,2a448 <_signal_r+0x68>
   2a410:	802090ba 	slli	r16,r16,2
   2a414:	1c07883a 	add	r3,r3,r16
   2a418:	18800017 	ldw	r2,0(r3)
   2a41c:	1c800015 	stw	r18,0(r3)
   2a420:	dfc00317 	ldw	ra,12(sp)
   2a424:	dc800217 	ldw	r18,8(sp)
   2a428:	dc400117 	ldw	r17,4(sp)
   2a42c:	dc000017 	ldw	r16,0(sp)
   2a430:	dec00404 	addi	sp,sp,16
   2a434:	f800283a 	ret
   2a438:	00800584 	movi	r2,22
   2a43c:	20800015 	stw	r2,0(r4)
   2a440:	00bfffc4 	movi	r2,-1
   2a444:	003ff606 	br	2a420 <_signal_r+0x40>
   2a448:	01402004 	movi	r5,128
   2a44c:	0025e980 	call	25e98 <_malloc_r>
   2a450:	8880b715 	stw	r2,732(r17)
   2a454:	103ffa26 	beq	r2,zero,2a440 <_signal_r+0x60>
   2a458:	01802004 	movi	r6,128
   2a45c:	000b883a 	mov	r5,zero
   2a460:	1009883a 	mov	r4,r2
   2a464:	00269440 	call	26944 <memset>
   2a468:	1007883a 	mov	r3,r2
   2a46c:	003fe806 	br	2a410 <_signal_r+0x30>

0002a470 <_raise_r>:
   2a470:	28800830 	cmpltui	r2,r5,32
   2a474:	10002626 	beq	r2,zero,2a510 <_raise_r+0xa0>
   2a478:	2080b717 	ldw	r2,732(r4)
   2a47c:	defffd04 	addi	sp,sp,-12
   2a480:	dc000115 	stw	r16,4(sp)
   2a484:	dfc00215 	stw	ra,8(sp)
   2a488:	2821883a 	mov	r16,r5
   2a48c:	10001026 	beq	r2,zero,2a4d0 <_raise_r+0x60>
   2a490:	280690ba 	slli	r3,r5,2
   2a494:	10c5883a 	add	r2,r2,r3
   2a498:	10c00017 	ldw	r3,0(r2)
   2a49c:	18000c26 	beq	r3,zero,2a4d0 <_raise_r+0x60>
   2a4a0:	19400060 	cmpeqi	r5,r3,1
   2a4a4:	2800051e 	bne	r5,zero,2a4bc <_raise_r+0x4c>
   2a4a8:	197fffd8 	cmpnei	r5,r3,-1
   2a4ac:	28001126 	beq	r5,zero,2a4f4 <_raise_r+0x84>
   2a4b0:	10000015 	stw	zero,0(r2)
   2a4b4:	8009883a 	mov	r4,r16
   2a4b8:	183ee83a 	callr	r3
   2a4bc:	0005883a 	mov	r2,zero
   2a4c0:	dfc00217 	ldw	ra,8(sp)
   2a4c4:	dc000117 	ldw	r16,4(sp)
   2a4c8:	dec00304 	addi	sp,sp,12
   2a4cc:	f800283a 	ret
   2a4d0:	d9000015 	stw	r4,0(sp)
   2a4d4:	002a8a40 	call	2a8a4 <_getpid_r>
   2a4d8:	d9000017 	ldw	r4,0(sp)
   2a4dc:	800d883a 	mov	r6,r16
   2a4e0:	100b883a 	mov	r5,r2
   2a4e4:	dfc00217 	ldw	ra,8(sp)
   2a4e8:	dc000117 	ldw	r16,4(sp)
   2a4ec:	dec00304 	addi	sp,sp,12
   2a4f0:	002a8441 	jmpi	2a844 <_kill_r>
   2a4f4:	00800584 	movi	r2,22
   2a4f8:	20800015 	stw	r2,0(r4)
   2a4fc:	00800044 	movi	r2,1
   2a500:	dfc00217 	ldw	ra,8(sp)
   2a504:	dc000117 	ldw	r16,4(sp)
   2a508:	dec00304 	addi	sp,sp,12
   2a50c:	f800283a 	ret
   2a510:	00800584 	movi	r2,22
   2a514:	20800015 	stw	r2,0(r4)
   2a518:	00bfffc4 	movi	r2,-1
   2a51c:	f800283a 	ret

0002a520 <__sigtramp_r>:
   2a520:	28800830 	cmpltui	r2,r5,32
   2a524:	10002b26 	beq	r2,zero,2a5d4 <__sigtramp_r+0xb4>
   2a528:	20c0b717 	ldw	r3,732(r4)
   2a52c:	defffd04 	addi	sp,sp,-12
   2a530:	dc400115 	stw	r17,4(sp)
   2a534:	dc000015 	stw	r16,0(sp)
   2a538:	dfc00215 	stw	ra,8(sp)
   2a53c:	2821883a 	mov	r16,r5
   2a540:	2023883a 	mov	r17,r4
   2a544:	18001726 	beq	r3,zero,2a5a4 <__sigtramp_r+0x84>
   2a548:	800490ba 	slli	r2,r16,2
   2a54c:	1887883a 	add	r3,r3,r2
   2a550:	18800017 	ldw	r2,0(r3)
   2a554:	10000d26 	beq	r2,zero,2a58c <__sigtramp_r+0x6c>
   2a558:	113fffe0 	cmpeqi	r4,r2,-1
   2a55c:	20000f1e 	bne	r4,zero,2a59c <__sigtramp_r+0x7c>
   2a560:	11000060 	cmpeqi	r4,r2,1
   2a564:	20000b1e 	bne	r4,zero,2a594 <__sigtramp_r+0x74>
   2a568:	18000015 	stw	zero,0(r3)
   2a56c:	8009883a 	mov	r4,r16
   2a570:	103ee83a 	callr	r2
   2a574:	0005883a 	mov	r2,zero
   2a578:	dfc00217 	ldw	ra,8(sp)
   2a57c:	dc400117 	ldw	r17,4(sp)
   2a580:	dc000017 	ldw	r16,0(sp)
   2a584:	dec00304 	addi	sp,sp,12
   2a588:	f800283a 	ret
   2a58c:	00800044 	movi	r2,1
   2a590:	003ff906 	br	2a578 <__sigtramp_r+0x58>
   2a594:	008000c4 	movi	r2,3
   2a598:	003ff706 	br	2a578 <__sigtramp_r+0x58>
   2a59c:	00800084 	movi	r2,2
   2a5a0:	003ff506 	br	2a578 <__sigtramp_r+0x58>
   2a5a4:	01402004 	movi	r5,128
   2a5a8:	0025e980 	call	25e98 <_malloc_r>
   2a5ac:	8880b715 	stw	r2,732(r17)
   2a5b0:	10000626 	beq	r2,zero,2a5cc <__sigtramp_r+0xac>
   2a5b4:	01802004 	movi	r6,128
   2a5b8:	000b883a 	mov	r5,zero
   2a5bc:	1009883a 	mov	r4,r2
   2a5c0:	00269440 	call	26944 <memset>
   2a5c4:	1007883a 	mov	r3,r2
   2a5c8:	003fdf06 	br	2a548 <__sigtramp_r+0x28>
   2a5cc:	00bfffc4 	movi	r2,-1
   2a5d0:	003fe906 	br	2a578 <__sigtramp_r+0x58>
   2a5d4:	00bfffc4 	movi	r2,-1
   2a5d8:	f800283a 	ret

0002a5dc <raise>:
   2a5dc:	defffd04 	addi	sp,sp,-12
   2a5e0:	dc400115 	stw	r17,4(sp)
   2a5e4:	00c000f4 	movhi	r3,3
   2a5e8:	dfc00215 	stw	ra,8(sp)
   2a5ec:	dc000015 	stw	r16,0(sp)
   2a5f0:	20800830 	cmpltui	r2,r4,32
   2a5f4:	1c4a3b17 	ldw	r17,10476(r3)
   2a5f8:	10002126 	beq	r2,zero,2a680 <raise+0xa4>
   2a5fc:	8880b717 	ldw	r2,732(r17)
   2a600:	2021883a 	mov	r16,r4
   2a604:	10001026 	beq	r2,zero,2a648 <raise+0x6c>
   2a608:	200690ba 	slli	r3,r4,2
   2a60c:	10c5883a 	add	r2,r2,r3
   2a610:	10c00017 	ldw	r3,0(r2)
   2a614:	18000c26 	beq	r3,zero,2a648 <raise+0x6c>
   2a618:	19400060 	cmpeqi	r5,r3,1
   2a61c:	2800041e 	bne	r5,zero,2a630 <raise+0x54>
   2a620:	197fffd8 	cmpnei	r5,r3,-1
   2a624:	28001226 	beq	r5,zero,2a670 <raise+0x94>
   2a628:	10000015 	stw	zero,0(r2)
   2a62c:	183ee83a 	callr	r3
   2a630:	0005883a 	mov	r2,zero
   2a634:	dfc00217 	ldw	ra,8(sp)
   2a638:	dc400117 	ldw	r17,4(sp)
   2a63c:	dc000017 	ldw	r16,0(sp)
   2a640:	dec00304 	addi	sp,sp,12
   2a644:	f800283a 	ret
   2a648:	8809883a 	mov	r4,r17
   2a64c:	002a8a40 	call	2a8a4 <_getpid_r>
   2a650:	800d883a 	mov	r6,r16
   2a654:	100b883a 	mov	r5,r2
   2a658:	8809883a 	mov	r4,r17
   2a65c:	dfc00217 	ldw	ra,8(sp)
   2a660:	dc400117 	ldw	r17,4(sp)
   2a664:	dc000017 	ldw	r16,0(sp)
   2a668:	dec00304 	addi	sp,sp,12
   2a66c:	002a8441 	jmpi	2a844 <_kill_r>
   2a670:	00800584 	movi	r2,22
   2a674:	88800015 	stw	r2,0(r17)
   2a678:	00800044 	movi	r2,1
   2a67c:	003fed06 	br	2a634 <raise+0x58>
   2a680:	00800584 	movi	r2,22
   2a684:	88800015 	stw	r2,0(r17)
   2a688:	00bfffc4 	movi	r2,-1
   2a68c:	003fe906 	br	2a634 <raise+0x58>

0002a690 <signal>:
   2a690:	defffc04 	addi	sp,sp,-16
   2a694:	dc800215 	stw	r18,8(sp)
   2a698:	00c000f4 	movhi	r3,3
   2a69c:	dfc00315 	stw	ra,12(sp)
   2a6a0:	dc400115 	stw	r17,4(sp)
   2a6a4:	dc000015 	stw	r16,0(sp)
   2a6a8:	20800830 	cmpltui	r2,r4,32
   2a6ac:	1c8a3b17 	ldw	r18,10476(r3)
   2a6b0:	10000e26 	beq	r2,zero,2a6ec <signal+0x5c>
   2a6b4:	2021883a 	mov	r16,r4
   2a6b8:	9100b717 	ldw	r4,732(r18)
   2a6bc:	2823883a 	mov	r17,r5
   2a6c0:	20000e26 	beq	r4,zero,2a6fc <signal+0x6c>
   2a6c4:	802090ba 	slli	r16,r16,2
   2a6c8:	2409883a 	add	r4,r4,r16
   2a6cc:	20800017 	ldw	r2,0(r4)
   2a6d0:	24400015 	stw	r17,0(r4)
   2a6d4:	dfc00317 	ldw	ra,12(sp)
   2a6d8:	dc800217 	ldw	r18,8(sp)
   2a6dc:	dc400117 	ldw	r17,4(sp)
   2a6e0:	dc000017 	ldw	r16,0(sp)
   2a6e4:	dec00404 	addi	sp,sp,16
   2a6e8:	f800283a 	ret
   2a6ec:	00800584 	movi	r2,22
   2a6f0:	90800015 	stw	r2,0(r18)
   2a6f4:	00bfffc4 	movi	r2,-1
   2a6f8:	003ff606 	br	2a6d4 <signal+0x44>
   2a6fc:	9009883a 	mov	r4,r18
   2a700:	01402004 	movi	r5,128
   2a704:	0025e980 	call	25e98 <_malloc_r>
   2a708:	9080b715 	stw	r2,732(r18)
   2a70c:	1009883a 	mov	r4,r2
   2a710:	103ff826 	beq	r2,zero,2a6f4 <signal+0x64>
   2a714:	01802004 	movi	r6,128
   2a718:	000b883a 	mov	r5,zero
   2a71c:	00269440 	call	26944 <memset>
   2a720:	1009883a 	mov	r4,r2
   2a724:	003fe706 	br	2a6c4 <signal+0x34>

0002a728 <_init_signal>:
   2a728:	defffe04 	addi	sp,sp,-8
   2a72c:	008000f4 	movhi	r2,3
   2a730:	dc000015 	stw	r16,0(sp)
   2a734:	140a3b17 	ldw	r16,10476(r2)
   2a738:	dfc00115 	stw	ra,4(sp)
   2a73c:	8080b717 	ldw	r2,732(r16)
   2a740:	10000526 	beq	r2,zero,2a758 <_init_signal+0x30>
   2a744:	0005883a 	mov	r2,zero
   2a748:	dfc00117 	ldw	ra,4(sp)
   2a74c:	dc000017 	ldw	r16,0(sp)
   2a750:	dec00204 	addi	sp,sp,8
   2a754:	f800283a 	ret
   2a758:	8009883a 	mov	r4,r16
   2a75c:	01402004 	movi	r5,128
   2a760:	0025e980 	call	25e98 <_malloc_r>
   2a764:	8080b715 	stw	r2,732(r16)
   2a768:	1009883a 	mov	r4,r2
   2a76c:	10000426 	beq	r2,zero,2a780 <_init_signal+0x58>
   2a770:	01802004 	movi	r6,128
   2a774:	000b883a 	mov	r5,zero
   2a778:	00269440 	call	26944 <memset>
   2a77c:	003ff106 	br	2a744 <_init_signal+0x1c>
   2a780:	00bfffc4 	movi	r2,-1
   2a784:	003ff006 	br	2a748 <_init_signal+0x20>

0002a788 <__sigtramp>:
   2a788:	defffd04 	addi	sp,sp,-12
   2a78c:	dc400115 	stw	r17,4(sp)
   2a790:	00c000f4 	movhi	r3,3
   2a794:	dfc00215 	stw	ra,8(sp)
   2a798:	dc000015 	stw	r16,0(sp)
   2a79c:	20800830 	cmpltui	r2,r4,32
   2a7a0:	1c4a3b17 	ldw	r17,10476(r3)
   2a7a4:	10002526 	beq	r2,zero,2a83c <__sigtramp+0xb4>
   2a7a8:	88c0b717 	ldw	r3,732(r17)
   2a7ac:	2021883a 	mov	r16,r4
   2a7b0:	18001726 	beq	r3,zero,2a810 <__sigtramp+0x88>
   2a7b4:	800490ba 	slli	r2,r16,2
   2a7b8:	1887883a 	add	r3,r3,r2
   2a7bc:	18800017 	ldw	r2,0(r3)
   2a7c0:	10000d26 	beq	r2,zero,2a7f8 <__sigtramp+0x70>
   2a7c4:	113fffe0 	cmpeqi	r4,r2,-1
   2a7c8:	20000f1e 	bne	r4,zero,2a808 <__sigtramp+0x80>
   2a7cc:	11000060 	cmpeqi	r4,r2,1
   2a7d0:	20000b1e 	bne	r4,zero,2a800 <__sigtramp+0x78>
   2a7d4:	18000015 	stw	zero,0(r3)
   2a7d8:	8009883a 	mov	r4,r16
   2a7dc:	103ee83a 	callr	r2
   2a7e0:	0005883a 	mov	r2,zero
   2a7e4:	dfc00217 	ldw	ra,8(sp)
   2a7e8:	dc400117 	ldw	r17,4(sp)
   2a7ec:	dc000017 	ldw	r16,0(sp)
   2a7f0:	dec00304 	addi	sp,sp,12
   2a7f4:	f800283a 	ret
   2a7f8:	00800044 	movi	r2,1
   2a7fc:	003ff906 	br	2a7e4 <__sigtramp+0x5c>
   2a800:	008000c4 	movi	r2,3
   2a804:	003ff706 	br	2a7e4 <__sigtramp+0x5c>
   2a808:	00800084 	movi	r2,2
   2a80c:	003ff506 	br	2a7e4 <__sigtramp+0x5c>
   2a810:	01402004 	movi	r5,128
   2a814:	8809883a 	mov	r4,r17
   2a818:	0025e980 	call	25e98 <_malloc_r>
   2a81c:	8880b715 	stw	r2,732(r17)
   2a820:	10000626 	beq	r2,zero,2a83c <__sigtramp+0xb4>
   2a824:	01802004 	movi	r6,128
   2a828:	000b883a 	mov	r5,zero
   2a82c:	1009883a 	mov	r4,r2
   2a830:	00269440 	call	26944 <memset>
   2a834:	1007883a 	mov	r3,r2
   2a838:	003fde06 	br	2a7b4 <__sigtramp+0x2c>
   2a83c:	00bfffc4 	movi	r2,-1
   2a840:	003fe806 	br	2a7e4 <__sigtramp+0x5c>

0002a844 <_kill_r>:
   2a844:	2807883a 	mov	r3,r5
   2a848:	defffe04 	addi	sp,sp,-8
   2a84c:	dc000015 	stw	r16,0(sp)
   2a850:	008000f4 	movhi	r2,3
   2a854:	300b883a 	mov	r5,r6
   2a858:	2021883a 	mov	r16,r4
   2a85c:	1809883a 	mov	r4,r3
   2a860:	dfc00115 	stw	ra,4(sp)
   2a864:	10115915 	stw	zero,17764(r2)
   2a868:	002dd580 	call	2dd58 <kill>
   2a86c:	10ffffd8 	cmpnei	r3,r2,-1
   2a870:	18000426 	beq	r3,zero,2a884 <_kill_r+0x40>
   2a874:	dfc00117 	ldw	ra,4(sp)
   2a878:	dc000017 	ldw	r16,0(sp)
   2a87c:	dec00204 	addi	sp,sp,8
   2a880:	f800283a 	ret
   2a884:	00c000f4 	movhi	r3,3
   2a888:	18d15917 	ldw	r3,17764(r3)
   2a88c:	183ff926 	beq	r3,zero,2a874 <_kill_r+0x30>
   2a890:	80c00015 	stw	r3,0(r16)
   2a894:	dfc00117 	ldw	ra,4(sp)
   2a898:	dc000017 	ldw	r16,0(sp)
   2a89c:	dec00204 	addi	sp,sp,8
   2a8a0:	f800283a 	ret

0002a8a4 <_getpid_r>:
   2a8a4:	002dc1c1 	jmpi	2dc1c <getpid>

0002a8a8 <__udivdi3>:
   2a8a8:	defff504 	addi	sp,sp,-44
   2a8ac:	dc800315 	stw	r18,12(sp)
   2a8b0:	dc000115 	stw	r16,4(sp)
   2a8b4:	dfc00a15 	stw	ra,40(sp)
   2a8b8:	df000915 	stw	fp,36(sp)
   2a8bc:	ddc00815 	stw	r23,32(sp)
   2a8c0:	dd800715 	stw	r22,28(sp)
   2a8c4:	dd400615 	stw	r21,24(sp)
   2a8c8:	dd000515 	stw	r20,20(sp)
   2a8cc:	dcc00415 	stw	r19,16(sp)
   2a8d0:	dc400215 	stw	r17,8(sp)
   2a8d4:	2025883a 	mov	r18,r4
   2a8d8:	2821883a 	mov	r16,r5
   2a8dc:	3800401e 	bne	r7,zero,2a9e0 <__udivdi3+0x138>
   2a8e0:	3023883a 	mov	r17,r6
   2a8e4:	2027883a 	mov	r19,r4
   2a8e8:	29805d2e 	bgeu	r5,r6,2aa60 <__udivdi3+0x1b8>
   2a8ec:	00bfffd4 	movui	r2,65535
   2a8f0:	282d883a 	mov	r22,r5
   2a8f4:	1180982e 	bgeu	r2,r6,2ab58 <__udivdi3+0x2b0>
   2a8f8:	00804034 	movhi	r2,256
   2a8fc:	30812536 	bltu	r6,r2,2ad94 <__udivdi3+0x4ec>
   2a900:	00c00604 	movi	r3,24
   2a904:	30cad83a 	srl	r5,r6,r3
   2a908:	008000f4 	movhi	r2,3
   2a90c:	01000804 	movi	r4,32
   2a910:	2885883a 	add	r2,r5,r2
   2a914:	1082e503 	ldbu	r2,2964(r2)
   2a918:	10c5883a 	add	r2,r2,r3
   2a91c:	2087c83a 	sub	r3,r4,r2
   2a920:	20800526 	beq	r4,r2,2a938 <__udivdi3+0x90>
   2a924:	80ec983a 	sll	r22,r16,r3
   2a928:	9084d83a 	srl	r2,r18,r2
   2a92c:	30e2983a 	sll	r17,r6,r3
   2a930:	90e6983a 	sll	r19,r18,r3
   2a934:	15acb03a 	or	r22,r2,r22
   2a938:	882ad43a 	srli	r21,r17,16
   2a93c:	b009883a 	mov	r4,r22
   2a940:	8d3fffcc 	andi	r20,r17,65535
   2a944:	a80b883a 	mov	r5,r21
   2a948:	00209e00 	call	209e0 <__umodsi3>
   2a94c:	b009883a 	mov	r4,r22
   2a950:	a80b883a 	mov	r5,r21
   2a954:	1025883a 	mov	r18,r2
   2a958:	002097c0 	call	2097c <__udivsi3>
   2a95c:	9008943a 	slli	r4,r18,16
   2a960:	9806d43a 	srli	r3,r19,16
   2a964:	1021883a 	mov	r16,r2
   2a968:	a085383a 	mul	r2,r20,r2
   2a96c:	20c8b03a 	or	r4,r4,r3
   2a970:	2080052e 	bgeu	r4,r2,2a988 <__udivdi3+0xe0>
   2a974:	2449883a 	add	r4,r4,r17
   2a978:	80ffffc4 	addi	r3,r16,-1
   2a97c:	24400136 	bltu	r4,r17,2a984 <__udivdi3+0xdc>
   2a980:	20811a36 	bltu	r4,r2,2adec <__udivdi3+0x544>
   2a984:	1821883a 	mov	r16,r3
   2a988:	20a5c83a 	sub	r18,r4,r2
   2a98c:	9009883a 	mov	r4,r18
   2a990:	a80b883a 	mov	r5,r21
   2a994:	00209e00 	call	209e0 <__umodsi3>
   2a998:	9009883a 	mov	r4,r18
   2a99c:	a80b883a 	mov	r5,r21
   2a9a0:	1025883a 	mov	r18,r2
   2a9a4:	002097c0 	call	2097c <__udivsi3>
   2a9a8:	9006943a 	slli	r3,r18,16
   2a9ac:	a0a9383a 	mul	r20,r20,r2
   2a9b0:	9cffffcc 	andi	r19,r19,65535
   2a9b4:	1cc6b03a 	or	r3,r3,r19
   2a9b8:	1d00052e 	bgeu	r3,r20,2a9d0 <__udivdi3+0x128>
   2a9bc:	88c7883a 	add	r3,r17,r3
   2a9c0:	113fffc4 	addi	r4,r2,-1
   2a9c4:	1c400136 	bltu	r3,r17,2a9cc <__udivdi3+0x124>
   2a9c8:	1d010136 	bltu	r3,r20,2add0 <__udivdi3+0x528>
   2a9cc:	2005883a 	mov	r2,r4
   2a9d0:	800c943a 	slli	r6,r16,16
   2a9d4:	0007883a 	mov	r3,zero
   2a9d8:	3084b03a 	or	r2,r6,r2
   2a9dc:	00000306 	br	2a9ec <__udivdi3+0x144>
   2a9e0:	29c00e2e 	bgeu	r5,r7,2aa1c <__udivdi3+0x174>
   2a9e4:	0007883a 	mov	r3,zero
   2a9e8:	0005883a 	mov	r2,zero
   2a9ec:	dfc00a17 	ldw	ra,40(sp)
   2a9f0:	df000917 	ldw	fp,36(sp)
   2a9f4:	ddc00817 	ldw	r23,32(sp)
   2a9f8:	dd800717 	ldw	r22,28(sp)
   2a9fc:	dd400617 	ldw	r21,24(sp)
   2aa00:	dd000517 	ldw	r20,20(sp)
   2aa04:	dcc00417 	ldw	r19,16(sp)
   2aa08:	dc800317 	ldw	r18,12(sp)
   2aa0c:	dc400217 	ldw	r17,8(sp)
   2aa10:	dc000117 	ldw	r16,4(sp)
   2aa14:	dec00b04 	addi	sp,sp,44
   2aa18:	f800283a 	ret
   2aa1c:	00bfffd4 	movui	r2,65535
   2aa20:	11c0562e 	bgeu	r2,r7,2ab7c <__udivdi3+0x2d4>
   2aa24:	00804034 	movhi	r2,256
   2aa28:	3880d836 	bltu	r7,r2,2ad8c <__udivdi3+0x4e4>
   2aa2c:	00c00604 	movi	r3,24
   2aa30:	38cad83a 	srl	r5,r7,r3
   2aa34:	008000f4 	movhi	r2,3
   2aa38:	01000804 	movi	r4,32
   2aa3c:	2885883a 	add	r2,r5,r2
   2aa40:	1082e503 	ldbu	r2,2964(r2)
   2aa44:	10c5883a 	add	r2,r2,r3
   2aa48:	20adc83a 	sub	r22,r4,r2
   2aa4c:	2080801e 	bne	r4,r2,2ac50 <__udivdi3+0x3a8>
   2aa50:	3c00d236 	bltu	r7,r16,2ad9c <__udivdi3+0x4f4>
   2aa54:	9185403a 	cmpgeu	r2,r18,r6
   2aa58:	0007883a 	mov	r3,zero
   2aa5c:	003fe306 	br	2a9ec <__udivdi3+0x144>
   2aa60:	3000401e 	bne	r6,zero,2ab64 <__udivdi3+0x2bc>
   2aa64:	000b883a 	mov	r5,zero
   2aa68:	01000044 	movi	r4,1
   2aa6c:	002097c0 	call	2097c <__udivsi3>
   2aa70:	1023883a 	mov	r17,r2
   2aa74:	88804028 	cmpgeui	r2,r17,256
   2aa78:	100490fa 	slli	r2,r2,3
   2aa7c:	888ad83a 	srl	r5,r17,r2
   2aa80:	00c000f4 	movhi	r3,3
   2aa84:	01000804 	movi	r4,32
   2aa88:	28c7883a 	add	r3,r5,r3
   2aa8c:	18c2e503 	ldbu	r3,2964(r3)
   2aa90:	1887883a 	add	r3,r3,r2
   2aa94:	20cdc83a 	sub	r6,r4,r3
   2aa98:	20c03b1e 	bne	r4,r3,2ab88 <__udivdi3+0x2e0>
   2aa9c:	8828d43a 	srli	r20,r17,16
   2aaa0:	8461c83a 	sub	r16,r16,r17
   2aaa4:	8d7fffcc 	andi	r21,r17,65535
   2aaa8:	00c00044 	movi	r3,1
   2aaac:	8009883a 	mov	r4,r16
   2aab0:	a00b883a 	mov	r5,r20
   2aab4:	d8c00015 	stw	r3,0(sp)
   2aab8:	00209e00 	call	209e0 <__umodsi3>
   2aabc:	8009883a 	mov	r4,r16
   2aac0:	a00b883a 	mov	r5,r20
   2aac4:	1025883a 	mov	r18,r2
   2aac8:	002097c0 	call	2097c <__udivsi3>
   2aacc:	9008943a 	slli	r4,r18,16
   2aad0:	980ad43a 	srli	r5,r19,16
   2aad4:	1021883a 	mov	r16,r2
   2aad8:	1545383a 	mul	r2,r2,r21
   2aadc:	2148b03a 	or	r4,r4,r5
   2aae0:	d8c00017 	ldw	r3,0(sp)
   2aae4:	2080052e 	bgeu	r4,r2,2aafc <__udivdi3+0x254>
   2aae8:	2449883a 	add	r4,r4,r17
   2aaec:	817fffc4 	addi	r5,r16,-1
   2aaf0:	24400136 	bltu	r4,r17,2aaf8 <__udivdi3+0x250>
   2aaf4:	2080b836 	bltu	r4,r2,2add8 <__udivdi3+0x530>
   2aaf8:	2821883a 	mov	r16,r5
   2aafc:	20a5c83a 	sub	r18,r4,r2
   2ab00:	9009883a 	mov	r4,r18
   2ab04:	a00b883a 	mov	r5,r20
   2ab08:	d8c00015 	stw	r3,0(sp)
   2ab0c:	00209e00 	call	209e0 <__umodsi3>
   2ab10:	9009883a 	mov	r4,r18
   2ab14:	a00b883a 	mov	r5,r20
   2ab18:	1025883a 	mov	r18,r2
   2ab1c:	002097c0 	call	2097c <__udivsi3>
   2ab20:	9008943a 	slli	r4,r18,16
   2ab24:	156b383a 	mul	r21,r2,r21
   2ab28:	9cffffcc 	andi	r19,r19,65535
   2ab2c:	24c8b03a 	or	r4,r4,r19
   2ab30:	d8c00017 	ldw	r3,0(sp)
   2ab34:	2540052e 	bgeu	r4,r21,2ab4c <__udivdi3+0x2a4>
   2ab38:	8909883a 	add	r4,r17,r4
   2ab3c:	117fffc4 	addi	r5,r2,-1
   2ab40:	24400136 	bltu	r4,r17,2ab48 <__udivdi3+0x2a0>
   2ab44:	2540a036 	bltu	r4,r21,2adc8 <__udivdi3+0x520>
   2ab48:	2805883a 	mov	r2,r5
   2ab4c:	800c943a 	slli	r6,r16,16
   2ab50:	3084b03a 	or	r2,r6,r2
   2ab54:	003fa506 	br	2a9ec <__udivdi3+0x144>
   2ab58:	30c04028 	cmpgeui	r3,r6,256
   2ab5c:	180690fa 	slli	r3,r3,3
   2ab60:	003f6806 	br	2a904 <__udivdi3+0x5c>
   2ab64:	00bfffd4 	movui	r2,65535
   2ab68:	11bfc22e 	bgeu	r2,r6,2aa74 <__udivdi3+0x1cc>
   2ab6c:	00804034 	movhi	r2,256
   2ab70:	30809c2e 	bgeu	r6,r2,2ade4 <__udivdi3+0x53c>
   2ab74:	00800404 	movi	r2,16
   2ab78:	003fc006 	br	2aa7c <__udivdi3+0x1d4>
   2ab7c:	38c04028 	cmpgeui	r3,r7,256
   2ab80:	180690fa 	slli	r3,r3,3
   2ab84:	003faa06 	br	2aa30 <__udivdi3+0x188>
   2ab88:	89a2983a 	sll	r17,r17,r6
   2ab8c:	80ead83a 	srl	r21,r16,r3
   2ab90:	81a0983a 	sll	r16,r16,r6
   2ab94:	8828d43a 	srli	r20,r17,16
   2ab98:	90c6d83a 	srl	r3,r18,r3
   2ab9c:	a809883a 	mov	r4,r21
   2aba0:	a00b883a 	mov	r5,r20
   2aba4:	1c2cb03a 	or	r22,r3,r16
   2aba8:	91a6983a 	sll	r19,r18,r6
   2abac:	00209e00 	call	209e0 <__umodsi3>
   2abb0:	a809883a 	mov	r4,r21
   2abb4:	a00b883a 	mov	r5,r20
   2abb8:	1021883a 	mov	r16,r2
   2abbc:	002097c0 	call	2097c <__udivsi3>
   2abc0:	8008943a 	slli	r4,r16,16
   2abc4:	b00ad43a 	srli	r5,r22,16
   2abc8:	8d7fffcc 	andi	r21,r17,65535
   2abcc:	1025883a 	mov	r18,r2
   2abd0:	a885383a 	mul	r2,r21,r2
   2abd4:	2148b03a 	or	r4,r4,r5
   2abd8:	2080062e 	bgeu	r4,r2,2abf4 <__udivdi3+0x34c>
   2abdc:	2449883a 	add	r4,r4,r17
   2abe0:	90ffffc4 	addi	r3,r18,-1
   2abe4:	24407636 	bltu	r4,r17,2adc0 <__udivdi3+0x518>
   2abe8:	2080752e 	bgeu	r4,r2,2adc0 <__udivdi3+0x518>
   2abec:	94bfff84 	addi	r18,r18,-2
   2abf0:	2449883a 	add	r4,r4,r17
   2abf4:	20a1c83a 	sub	r16,r4,r2
   2abf8:	8009883a 	mov	r4,r16
   2abfc:	a00b883a 	mov	r5,r20
   2ac00:	00209e00 	call	209e0 <__umodsi3>
   2ac04:	8009883a 	mov	r4,r16
   2ac08:	a00b883a 	mov	r5,r20
   2ac0c:	1021883a 	mov	r16,r2
   2ac10:	8020943a 	slli	r16,r16,16
   2ac14:	002097c0 	call	2097c <__udivsi3>
   2ac18:	a889383a 	mul	r4,r21,r2
   2ac1c:	b5bfffcc 	andi	r22,r22,65535
   2ac20:	85a0b03a 	or	r16,r16,r22
   2ac24:	8100062e 	bgeu	r16,r4,2ac40 <__udivdi3+0x398>
   2ac28:	8461883a 	add	r16,r16,r17
   2ac2c:	10ffffc4 	addi	r3,r2,-1
   2ac30:	84405f36 	bltu	r16,r17,2adb0 <__udivdi3+0x508>
   2ac34:	81005e2e 	bgeu	r16,r4,2adb0 <__udivdi3+0x508>
   2ac38:	10bfff84 	addi	r2,r2,-2
   2ac3c:	8461883a 	add	r16,r16,r17
   2ac40:	9006943a 	slli	r3,r18,16
   2ac44:	8121c83a 	sub	r16,r16,r4
   2ac48:	1886b03a 	or	r3,r3,r2
   2ac4c:	003f9706 	br	2aaac <__udivdi3+0x204>
   2ac50:	30aed83a 	srl	r23,r6,r2
   2ac54:	3d8e983a 	sll	r7,r7,r22
   2ac58:	80a8d83a 	srl	r20,r16,r2
   2ac5c:	90a2d83a 	srl	r17,r18,r2
   2ac60:	b9eeb03a 	or	r23,r23,r7
   2ac64:	b826d43a 	srli	r19,r23,16
   2ac68:	8584983a 	sll	r2,r16,r22
   2ac6c:	a009883a 	mov	r4,r20
   2ac70:	980b883a 	mov	r5,r19
   2ac74:	35aa983a 	sll	r21,r6,r22
   2ac78:	88a2b03a 	or	r17,r17,r2
   2ac7c:	00209e00 	call	209e0 <__umodsi3>
   2ac80:	a009883a 	mov	r4,r20
   2ac84:	980b883a 	mov	r5,r19
   2ac88:	1029883a 	mov	r20,r2
   2ac8c:	002097c0 	call	2097c <__udivsi3>
   2ac90:	a008943a 	slli	r4,r20,16
   2ac94:	8806d43a 	srli	r3,r17,16
   2ac98:	bf3fffcc 	andi	fp,r23,65535
   2ac9c:	1021883a 	mov	r16,r2
   2aca0:	e085383a 	mul	r2,fp,r2
   2aca4:	20c8b03a 	or	r4,r4,r3
   2aca8:	2080062e 	bgeu	r4,r2,2acc4 <__udivdi3+0x41c>
   2acac:	25c9883a 	add	r4,r4,r23
   2acb0:	80ffffc4 	addi	r3,r16,-1
   2acb4:	25c04036 	bltu	r4,r23,2adb8 <__udivdi3+0x510>
   2acb8:	20803f2e 	bgeu	r4,r2,2adb8 <__udivdi3+0x510>
   2acbc:	843fff84 	addi	r16,r16,-2
   2acc0:	25c9883a 	add	r4,r4,r23
   2acc4:	20a9c83a 	sub	r20,r4,r2
   2acc8:	980b883a 	mov	r5,r19
   2accc:	a009883a 	mov	r4,r20
   2acd0:	00209e00 	call	209e0 <__umodsi3>
   2acd4:	980b883a 	mov	r5,r19
   2acd8:	a009883a 	mov	r4,r20
   2acdc:	1027883a 	mov	r19,r2
   2ace0:	002097c0 	call	2097c <__udivsi3>
   2ace4:	9806943a 	slli	r3,r19,16
   2ace8:	e0b9383a 	mul	fp,fp,r2
   2acec:	8c7fffcc 	andi	r17,r17,65535
   2acf0:	1c46b03a 	or	r3,r3,r17
   2acf4:	1009883a 	mov	r4,r2
   2acf8:	1f00062e 	bgeu	r3,fp,2ad14 <__udivdi3+0x46c>
   2acfc:	1dc7883a 	add	r3,r3,r23
   2ad00:	10bfffc4 	addi	r2,r2,-1
   2ad04:	1dc02836 	bltu	r3,r23,2ada8 <__udivdi3+0x500>
   2ad08:	1f00272e 	bgeu	r3,fp,2ada8 <__udivdi3+0x500>
   2ad0c:	213fff84 	addi	r4,r4,-2
   2ad10:	1dc7883a 	add	r3,r3,r23
   2ad14:	8004943a 	slli	r2,r16,16
   2ad18:	a80ed43a 	srli	r7,r21,16
   2ad1c:	217fffcc 	andi	r5,r4,65535
   2ad20:	1104b03a 	or	r2,r2,r4
   2ad24:	1008d43a 	srli	r4,r2,16
   2ad28:	ad7fffcc 	andi	r21,r21,65535
   2ad2c:	2d51383a 	mul	r8,r5,r21
   2ad30:	256b383a 	mul	r21,r4,r21
   2ad34:	29cb383a 	mul	r5,r5,r7
   2ad38:	400cd43a 	srli	r6,r8,16
   2ad3c:	21c9383a 	mul	r4,r4,r7
   2ad40:	2d4b883a 	add	r5,r5,r21
   2ad44:	314b883a 	add	r5,r6,r5
   2ad48:	1f07c83a 	sub	r3,r3,fp
   2ad4c:	2d40022e 	bgeu	r5,r21,2ad58 <__udivdi3+0x4b0>
   2ad50:	01800074 	movhi	r6,1
   2ad54:	2189883a 	add	r4,r4,r6
   2ad58:	280cd43a 	srli	r6,r5,16
   2ad5c:	3109883a 	add	r4,r6,r4
   2ad60:	19000836 	bltu	r3,r4,2ad84 <__udivdi3+0x4dc>
   2ad64:	19000226 	beq	r3,r4,2ad70 <__udivdi3+0x4c8>
   2ad68:	0007883a 	mov	r3,zero
   2ad6c:	003f1f06 	br	2a9ec <__udivdi3+0x144>
   2ad70:	280a943a 	slli	r5,r5,16
   2ad74:	9588983a 	sll	r4,r18,r22
   2ad78:	423fffcc 	andi	r8,r8,65535
   2ad7c:	2a0b883a 	add	r5,r5,r8
   2ad80:	217ff92e 	bgeu	r4,r5,2ad68 <__udivdi3+0x4c0>
   2ad84:	10bfffc4 	addi	r2,r2,-1
   2ad88:	003ff706 	br	2ad68 <__udivdi3+0x4c0>
   2ad8c:	00c00404 	movi	r3,16
   2ad90:	003f2706 	br	2aa30 <__udivdi3+0x188>
   2ad94:	00c00404 	movi	r3,16
   2ad98:	003eda06 	br	2a904 <__udivdi3+0x5c>
   2ad9c:	0007883a 	mov	r3,zero
   2ada0:	00800044 	movi	r2,1
   2ada4:	003f1106 	br	2a9ec <__udivdi3+0x144>
   2ada8:	1009883a 	mov	r4,r2
   2adac:	003fd906 	br	2ad14 <__udivdi3+0x46c>
   2adb0:	1805883a 	mov	r2,r3
   2adb4:	003fa206 	br	2ac40 <__udivdi3+0x398>
   2adb8:	1821883a 	mov	r16,r3
   2adbc:	003fc106 	br	2acc4 <__udivdi3+0x41c>
   2adc0:	1825883a 	mov	r18,r3
   2adc4:	003f8b06 	br	2abf4 <__udivdi3+0x34c>
   2adc8:	10bfff84 	addi	r2,r2,-2
   2adcc:	003f5f06 	br	2ab4c <__udivdi3+0x2a4>
   2add0:	10bfff84 	addi	r2,r2,-2
   2add4:	003efe06 	br	2a9d0 <__udivdi3+0x128>
   2add8:	843fff84 	addi	r16,r16,-2
   2addc:	2449883a 	add	r4,r4,r17
   2ade0:	003f4606 	br	2aafc <__udivdi3+0x254>
   2ade4:	00800604 	movi	r2,24
   2ade8:	003f2406 	br	2aa7c <__udivdi3+0x1d4>
   2adec:	843fff84 	addi	r16,r16,-2
   2adf0:	2449883a 	add	r4,r4,r17
   2adf4:	003ee406 	br	2a988 <__udivdi3+0xe0>

0002adf8 <__umoddi3>:
   2adf8:	defff504 	addi	sp,sp,-44
   2adfc:	dcc00415 	stw	r19,16(sp)
   2ae00:	dc000115 	stw	r16,4(sp)
   2ae04:	dfc00a15 	stw	ra,40(sp)
   2ae08:	df000915 	stw	fp,36(sp)
   2ae0c:	ddc00815 	stw	r23,32(sp)
   2ae10:	dd800715 	stw	r22,28(sp)
   2ae14:	dd400615 	stw	r21,24(sp)
   2ae18:	dd000515 	stw	r20,20(sp)
   2ae1c:	dc800315 	stw	r18,12(sp)
   2ae20:	dc400215 	stw	r17,8(sp)
   2ae24:	2827883a 	mov	r19,r5
   2ae28:	2021883a 	mov	r16,r4
   2ae2c:	38003b1e 	bne	r7,zero,2af1c <__umoddi3+0x124>
   2ae30:	3029883a 	mov	r20,r6
   2ae34:	2025883a 	mov	r18,r4
   2ae38:	29805d2e 	bgeu	r5,r6,2afb0 <__umoddi3+0x1b8>
   2ae3c:	00bfffd4 	movui	r2,65535
   2ae40:	282f883a 	mov	r23,r5
   2ae44:	11808e2e 	bgeu	r2,r6,2b080 <__umoddi3+0x288>
   2ae48:	00804034 	movhi	r2,256
   2ae4c:	30811e36 	bltu	r6,r2,2b2c8 <__umoddi3+0x4d0>
   2ae50:	00c00604 	movi	r3,24
   2ae54:	30cad83a 	srl	r5,r6,r3
   2ae58:	008000f4 	movhi	r2,3
   2ae5c:	01000804 	movi	r4,32
   2ae60:	2885883a 	add	r2,r5,r2
   2ae64:	1082e503 	ldbu	r2,2964(r2)
   2ae68:	10c5883a 	add	r2,r2,r3
   2ae6c:	20a3c83a 	sub	r17,r4,r2
   2ae70:	20800526 	beq	r4,r2,2ae88 <__umoddi3+0x90>
   2ae74:	9c6e983a 	sll	r23,r19,r17
   2ae78:	8084d83a 	srl	r2,r16,r2
   2ae7c:	3468983a 	sll	r20,r6,r17
   2ae80:	8464983a 	sll	r18,r16,r17
   2ae84:	15eeb03a 	or	r23,r2,r23
   2ae88:	a02cd43a 	srli	r22,r20,16
   2ae8c:	b809883a 	mov	r4,r23
   2ae90:	a57fffcc 	andi	r21,r20,65535
   2ae94:	b00b883a 	mov	r5,r22
   2ae98:	00209e00 	call	209e0 <__umodsi3>
   2ae9c:	b809883a 	mov	r4,r23
   2aea0:	b00b883a 	mov	r5,r22
   2aea4:	1021883a 	mov	r16,r2
   2aea8:	002097c0 	call	2097c <__udivsi3>
   2aeac:	8008943a 	slli	r4,r16,16
   2aeb0:	9006d43a 	srli	r3,r18,16
   2aeb4:	a885383a 	mul	r2,r21,r2
   2aeb8:	20c8b03a 	or	r4,r4,r3
   2aebc:	2080032e 	bgeu	r4,r2,2aecc <__umoddi3+0xd4>
   2aec0:	2509883a 	add	r4,r4,r20
   2aec4:	25000136 	bltu	r4,r20,2aecc <__umoddi3+0xd4>
   2aec8:	20810d36 	bltu	r4,r2,2b300 <__umoddi3+0x508>
   2aecc:	20a7c83a 	sub	r19,r4,r2
   2aed0:	b00b883a 	mov	r5,r22
   2aed4:	9809883a 	mov	r4,r19
   2aed8:	00209e00 	call	209e0 <__umodsi3>
   2aedc:	1021883a 	mov	r16,r2
   2aee0:	b00b883a 	mov	r5,r22
   2aee4:	9809883a 	mov	r4,r19
   2aee8:	8020943a 	slli	r16,r16,16
   2aeec:	002097c0 	call	2097c <__udivsi3>
   2aef0:	a8ab383a 	mul	r21,r21,r2
   2aef4:	94bfffcc 	andi	r18,r18,65535
   2aef8:	84a0b03a 	or	r16,r16,r18
   2aefc:	8540032e 	bgeu	r16,r21,2af0c <__umoddi3+0x114>
   2af00:	8521883a 	add	r16,r16,r20
   2af04:	85000136 	bltu	r16,r20,2af0c <__umoddi3+0x114>
   2af08:	8540f736 	bltu	r16,r21,2b2e8 <__umoddi3+0x4f0>
   2af0c:	8561c83a 	sub	r16,r16,r21
   2af10:	8444d83a 	srl	r2,r16,r17
   2af14:	0007883a 	mov	r3,zero
   2af18:	00000406 	br	2af2c <__umoddi3+0x134>
   2af1c:	2807883a 	mov	r3,r5
   2af20:	200b883a 	mov	r5,r4
   2af24:	99c00d2e 	bgeu	r19,r7,2af5c <__umoddi3+0x164>
   2af28:	2005883a 	mov	r2,r4
   2af2c:	dfc00a17 	ldw	ra,40(sp)
   2af30:	df000917 	ldw	fp,36(sp)
   2af34:	ddc00817 	ldw	r23,32(sp)
   2af38:	dd800717 	ldw	r22,28(sp)
   2af3c:	dd400617 	ldw	r21,24(sp)
   2af40:	dd000517 	ldw	r20,20(sp)
   2af44:	dcc00417 	ldw	r19,16(sp)
   2af48:	dc800317 	ldw	r18,12(sp)
   2af4c:	dc400217 	ldw	r17,8(sp)
   2af50:	dc000117 	ldw	r16,4(sp)
   2af54:	dec00b04 	addi	sp,sp,44
   2af58:	f800283a 	ret
   2af5c:	00bfffd4 	movui	r2,65535
   2af60:	11c0502e 	bgeu	r2,r7,2b0a4 <__umoddi3+0x2ac>
   2af64:	00804034 	movhi	r2,256
   2af68:	3880d936 	bltu	r7,r2,2b2d0 <__umoddi3+0x4d8>
   2af6c:	01000604 	movi	r4,24
   2af70:	3912d83a 	srl	r9,r7,r4
   2af74:	008000f4 	movhi	r2,3
   2af78:	02000804 	movi	r8,32
   2af7c:	4885883a 	add	r2,r9,r2
   2af80:	1502e503 	ldbu	r20,2964(r2)
   2af84:	a129883a 	add	r20,r20,r4
   2af88:	4525c83a 	sub	r18,r8,r20
   2af8c:	4500731e 	bne	r8,r20,2b15c <__umoddi3+0x364>
   2af90:	3cc00136 	bltu	r7,r19,2af98 <__umoddi3+0x1a0>
   2af94:	81800436 	bltu	r16,r6,2afa8 <__umoddi3+0x1b0>
   2af98:	818bc83a 	sub	r5,r16,r6
   2af9c:	99cfc83a 	sub	r7,r19,r7
   2afa0:	8147803a 	cmpltu	r3,r16,r5
   2afa4:	38c7c83a 	sub	r3,r7,r3
   2afa8:	2805883a 	mov	r2,r5
   2afac:	003fdf06 	br	2af2c <__umoddi3+0x134>
   2afb0:	3000361e 	bne	r6,zero,2b08c <__umoddi3+0x294>
   2afb4:	000b883a 	mov	r5,zero
   2afb8:	01000044 	movi	r4,1
   2afbc:	002097c0 	call	2097c <__udivsi3>
   2afc0:	1029883a 	mov	r20,r2
   2afc4:	a0804028 	cmpgeui	r2,r20,256
   2afc8:	100490fa 	slli	r2,r2,3
   2afcc:	a08ad83a 	srl	r5,r20,r2
   2afd0:	00c000f4 	movhi	r3,3
   2afd4:	01000804 	movi	r4,32
   2afd8:	28c7883a 	add	r3,r5,r3
   2afdc:	1dc2e503 	ldbu	r23,2964(r3)
   2afe0:	b8af883a 	add	r23,r23,r2
   2afe4:	25e3c83a 	sub	r17,r4,r23
   2afe8:	25c0311e 	bne	r4,r23,2b0b0 <__umoddi3+0x2b8>
   2afec:	a02ad43a 	srli	r21,r20,16
   2aff0:	9d27c83a 	sub	r19,r19,r20
   2aff4:	a5bfffcc 	andi	r22,r20,65535
   2aff8:	a80b883a 	mov	r5,r21
   2affc:	9809883a 	mov	r4,r19
   2b000:	00209e00 	call	209e0 <__umodsi3>
   2b004:	9809883a 	mov	r4,r19
   2b008:	a80b883a 	mov	r5,r21
   2b00c:	1021883a 	mov	r16,r2
   2b010:	002097c0 	call	2097c <__udivsi3>
   2b014:	8008943a 	slli	r4,r16,16
   2b018:	9006d43a 	srli	r3,r18,16
   2b01c:	1585383a 	mul	r2,r2,r22
   2b020:	20c8b03a 	or	r4,r4,r3
   2b024:	2080032e 	bgeu	r4,r2,2b034 <__umoddi3+0x23c>
   2b028:	2509883a 	add	r4,r4,r20
   2b02c:	25000136 	bltu	r4,r20,2b034 <__umoddi3+0x23c>
   2b030:	2080af36 	bltu	r4,r2,2b2f0 <__umoddi3+0x4f8>
   2b034:	20a7c83a 	sub	r19,r4,r2
   2b038:	a80b883a 	mov	r5,r21
   2b03c:	9809883a 	mov	r4,r19
   2b040:	00209e00 	call	209e0 <__umodsi3>
   2b044:	1021883a 	mov	r16,r2
   2b048:	a80b883a 	mov	r5,r21
   2b04c:	9809883a 	mov	r4,r19
   2b050:	8020943a 	slli	r16,r16,16
   2b054:	002097c0 	call	2097c <__udivsi3>
   2b058:	1585383a 	mul	r2,r2,r22
   2b05c:	94bfffcc 	andi	r18,r18,65535
   2b060:	84a0b03a 	or	r16,r16,r18
   2b064:	8080042e 	bgeu	r16,r2,2b078 <__umoddi3+0x280>
   2b068:	8521883a 	add	r16,r16,r20
   2b06c:	85000236 	bltu	r16,r20,2b078 <__umoddi3+0x280>
   2b070:	8080012e 	bgeu	r16,r2,2b078 <__umoddi3+0x280>
   2b074:	8521883a 	add	r16,r16,r20
   2b078:	80a1c83a 	sub	r16,r16,r2
   2b07c:	003fa406 	br	2af10 <__umoddi3+0x118>
   2b080:	30c04028 	cmpgeui	r3,r6,256
   2b084:	180690fa 	slli	r3,r3,3
   2b088:	003f7206 	br	2ae54 <__umoddi3+0x5c>
   2b08c:	00bfffd4 	movui	r2,65535
   2b090:	11bfcc2e 	bgeu	r2,r6,2afc4 <__umoddi3+0x1cc>
   2b094:	00804034 	movhi	r2,256
   2b098:	3080972e 	bgeu	r6,r2,2b2f8 <__umoddi3+0x500>
   2b09c:	00800404 	movi	r2,16
   2b0a0:	003fca06 	br	2afcc <__umoddi3+0x1d4>
   2b0a4:	39004028 	cmpgeui	r4,r7,256
   2b0a8:	200890fa 	slli	r4,r4,3
   2b0ac:	003fb006 	br	2af70 <__umoddi3+0x178>
   2b0b0:	a468983a 	sll	r20,r20,r17
   2b0b4:	9decd83a 	srl	r22,r19,r23
   2b0b8:	85eed83a 	srl	r23,r16,r23
   2b0bc:	a02ad43a 	srli	r21,r20,16
   2b0c0:	b009883a 	mov	r4,r22
   2b0c4:	9c66983a 	sll	r19,r19,r17
   2b0c8:	a80b883a 	mov	r5,r21
   2b0cc:	00209e00 	call	209e0 <__umodsi3>
   2b0d0:	b009883a 	mov	r4,r22
   2b0d4:	a80b883a 	mov	r5,r21
   2b0d8:	1025883a 	mov	r18,r2
   2b0dc:	bceeb03a 	or	r23,r23,r19
   2b0e0:	002097c0 	call	2097c <__udivsi3>
   2b0e4:	9008943a 	slli	r4,r18,16
   2b0e8:	b806d43a 	srli	r3,r23,16
   2b0ec:	a5bfffcc 	andi	r22,r20,65535
   2b0f0:	b085383a 	mul	r2,r22,r2
   2b0f4:	20c8b03a 	or	r4,r4,r3
   2b0f8:	8464983a 	sll	r18,r16,r17
   2b0fc:	2080042e 	bgeu	r4,r2,2b110 <__umoddi3+0x318>
   2b100:	2509883a 	add	r4,r4,r20
   2b104:	25000236 	bltu	r4,r20,2b110 <__umoddi3+0x318>
   2b108:	2080012e 	bgeu	r4,r2,2b110 <__umoddi3+0x318>
   2b10c:	2509883a 	add	r4,r4,r20
   2b110:	20a1c83a 	sub	r16,r4,r2
   2b114:	a80b883a 	mov	r5,r21
   2b118:	8009883a 	mov	r4,r16
   2b11c:	00209e00 	call	209e0 <__umodsi3>
   2b120:	1027883a 	mov	r19,r2
   2b124:	a80b883a 	mov	r5,r21
   2b128:	8009883a 	mov	r4,r16
   2b12c:	9826943a 	slli	r19,r19,16
   2b130:	002097c0 	call	2097c <__udivsi3>
   2b134:	b085383a 	mul	r2,r22,r2
   2b138:	bdffffcc 	andi	r23,r23,65535
   2b13c:	9de6b03a 	or	r19,r19,r23
   2b140:	9880042e 	bgeu	r19,r2,2b154 <__umoddi3+0x35c>
   2b144:	9d27883a 	add	r19,r19,r20
   2b148:	9d000236 	bltu	r19,r20,2b154 <__umoddi3+0x35c>
   2b14c:	9880012e 	bgeu	r19,r2,2b154 <__umoddi3+0x35c>
   2b150:	9d27883a 	add	r19,r19,r20
   2b154:	98a7c83a 	sub	r19,r19,r2
   2b158:	003fa706 	br	2aff8 <__umoddi3+0x200>
   2b15c:	352cd83a 	srl	r22,r6,r20
   2b160:	3c8e983a 	sll	r7,r7,r18
   2b164:	9d2ed83a 	srl	r23,r19,r20
   2b168:	8504d83a 	srl	r2,r16,r20
   2b16c:	b1ecb03a 	or	r22,r22,r7
   2b170:	b02ad43a 	srli	r21,r22,16
   2b174:	9ca6983a 	sll	r19,r19,r18
   2b178:	b809883a 	mov	r4,r23
   2b17c:	a80b883a 	mov	r5,r21
   2b180:	34a2983a 	sll	r17,r6,r18
   2b184:	14e6b03a 	or	r19,r2,r19
   2b188:	00209e00 	call	209e0 <__umodsi3>
   2b18c:	b809883a 	mov	r4,r23
   2b190:	a80b883a 	mov	r5,r21
   2b194:	102f883a 	mov	r23,r2
   2b198:	002097c0 	call	2097c <__udivsi3>
   2b19c:	b808943a 	slli	r4,r23,16
   2b1a0:	9806d43a 	srli	r3,r19,16
   2b1a4:	b1bfffcc 	andi	r6,r22,65535
   2b1a8:	1039883a 	mov	fp,r2
   2b1ac:	3085383a 	mul	r2,r6,r2
   2b1b0:	20c8b03a 	or	r4,r4,r3
   2b1b4:	84ae983a 	sll	r23,r16,r18
   2b1b8:	2080062e 	bgeu	r4,r2,2b1d4 <__umoddi3+0x3dc>
   2b1bc:	2589883a 	add	r4,r4,r22
   2b1c0:	e0ffffc4 	addi	r3,fp,-1
   2b1c4:	25804636 	bltu	r4,r22,2b2e0 <__umoddi3+0x4e8>
   2b1c8:	2080452e 	bgeu	r4,r2,2b2e0 <__umoddi3+0x4e8>
   2b1cc:	e73fff84 	addi	fp,fp,-2
   2b1d0:	2589883a 	add	r4,r4,r22
   2b1d4:	20a1c83a 	sub	r16,r4,r2
   2b1d8:	8009883a 	mov	r4,r16
   2b1dc:	a80b883a 	mov	r5,r21
   2b1e0:	d9800015 	stw	r6,0(sp)
   2b1e4:	00209e00 	call	209e0 <__umodsi3>
   2b1e8:	a80b883a 	mov	r5,r21
   2b1ec:	8009883a 	mov	r4,r16
   2b1f0:	1021883a 	mov	r16,r2
   2b1f4:	002097c0 	call	2097c <__udivsi3>
   2b1f8:	d9800017 	ldw	r6,0(sp)
   2b1fc:	8006943a 	slli	r3,r16,16
   2b200:	9cffffcc 	andi	r19,r19,65535
   2b204:	308b383a 	mul	r5,r6,r2
   2b208:	1cc6b03a 	or	r3,r3,r19
   2b20c:	1940062e 	bgeu	r3,r5,2b228 <__umoddi3+0x430>
   2b210:	1d87883a 	add	r3,r3,r22
   2b214:	113fffc4 	addi	r4,r2,-1
   2b218:	1d802f36 	bltu	r3,r22,2b2d8 <__umoddi3+0x4e0>
   2b21c:	19402e2e 	bgeu	r3,r5,2b2d8 <__umoddi3+0x4e0>
   2b220:	10bfff84 	addi	r2,r2,-2
   2b224:	1d87883a 	add	r3,r3,r22
   2b228:	e038943a 	slli	fp,fp,16
   2b22c:	113fffcc 	andi	r4,r2,65535
   2b230:	8810d43a 	srli	r8,r17,16
   2b234:	e0b8b03a 	or	fp,fp,r2
   2b238:	e038d43a 	srli	fp,fp,16
   2b23c:	89bfffcc 	andi	r6,r17,65535
   2b240:	218f383a 	mul	r7,r4,r6
   2b244:	e18d383a 	mul	r6,fp,r6
   2b248:	2209383a 	mul	r4,r4,r8
   2b24c:	3804d43a 	srli	r2,r7,16
   2b250:	e239383a 	mul	fp,fp,r8
   2b254:	2189883a 	add	r4,r4,r6
   2b258:	1105883a 	add	r2,r2,r4
   2b25c:	1947c83a 	sub	r3,r3,r5
   2b260:	1180022e 	bgeu	r2,r6,2b26c <__umoddi3+0x474>
   2b264:	01000074 	movhi	r4,1
   2b268:	e139883a 	add	fp,fp,r4
   2b26c:	1008d43a 	srli	r4,r2,16
   2b270:	1004943a 	slli	r2,r2,16
   2b274:	39ffffcc 	andi	r7,r7,65535
   2b278:	2709883a 	add	r4,r4,fp
   2b27c:	11c5883a 	add	r2,r2,r7
   2b280:	19000b36 	bltu	r3,r4,2b2b0 <__umoddi3+0x4b8>
   2b284:	19000926 	beq	r3,r4,2b2ac <__umoddi3+0x4b4>
   2b288:	b885c83a 	sub	r2,r23,r2
   2b28c:	b8af803a 	cmpltu	r23,r23,r2
   2b290:	1907c83a 	sub	r3,r3,r4
   2b294:	1dc7c83a 	sub	r3,r3,r23
   2b298:	1d28983a 	sll	r20,r3,r20
   2b29c:	1484d83a 	srl	r2,r2,r18
   2b2a0:	1c86d83a 	srl	r3,r3,r18
   2b2a4:	a084b03a 	or	r2,r20,r2
   2b2a8:	003f2006 	br	2af2c <__umoddi3+0x134>
   2b2ac:	b8bff62e 	bgeu	r23,r2,2b288 <__umoddi3+0x490>
   2b2b0:	1463c83a 	sub	r17,r2,r17
   2b2b4:	1445803a 	cmpltu	r2,r2,r17
   2b2b8:	1585883a 	add	r2,r2,r22
   2b2bc:	2089c83a 	sub	r4,r4,r2
   2b2c0:	8805883a 	mov	r2,r17
   2b2c4:	003ff006 	br	2b288 <__umoddi3+0x490>
   2b2c8:	00c00404 	movi	r3,16
   2b2cc:	003ee106 	br	2ae54 <__umoddi3+0x5c>
   2b2d0:	01000404 	movi	r4,16
   2b2d4:	003f2606 	br	2af70 <__umoddi3+0x178>
   2b2d8:	2005883a 	mov	r2,r4
   2b2dc:	003fd206 	br	2b228 <__umoddi3+0x430>
   2b2e0:	1839883a 	mov	fp,r3
   2b2e4:	003fbb06 	br	2b1d4 <__umoddi3+0x3dc>
   2b2e8:	8521883a 	add	r16,r16,r20
   2b2ec:	003f0706 	br	2af0c <__umoddi3+0x114>
   2b2f0:	2509883a 	add	r4,r4,r20
   2b2f4:	003f4f06 	br	2b034 <__umoddi3+0x23c>
   2b2f8:	00800604 	movi	r2,24
   2b2fc:	003f3306 	br	2afcc <__umoddi3+0x1d4>
   2b300:	2509883a 	add	r4,r4,r20
   2b304:	003ef106 	br	2aecc <__umoddi3+0xd4>

0002b308 <__adddf3>:
   2b308:	00c00434 	movhi	r3,16
   2b30c:	18ffffc4 	addi	r3,r3,-1
   2b310:	defffa04 	addi	sp,sp,-24
   2b314:	2810d7fa 	srli	r8,r5,31
   2b318:	3804d53a 	srli	r2,r7,20
   2b31c:	28d4703a 	and	r10,r5,r3
   2b320:	38d2703a 	and	r9,r7,r3
   2b324:	280ad53a 	srli	r5,r5,20
   2b328:	501490fa 	slli	r10,r10,3
   2b32c:	481290fa 	slli	r9,r9,3
   2b330:	3016d77a 	srli	r11,r6,29
   2b334:	dc400115 	stw	r17,4(sp)
   2b338:	380ed7fa 	srli	r7,r7,31
   2b33c:	2022d77a 	srli	r17,r4,29
   2b340:	dd000415 	stw	r20,16(sp)
   2b344:	dcc00315 	stw	r19,12(sp)
   2b348:	dc000015 	stw	r16,0(sp)
   2b34c:	1081ffcc 	andi	r2,r2,2047
   2b350:	2c01ffcc 	andi	r16,r5,2047
   2b354:	dfc00515 	stw	ra,20(sp)
   2b358:	dc800215 	stw	r18,8(sp)
   2b35c:	201890fa 	slli	r12,r4,3
   2b360:	301a90fa 	slli	r13,r6,3
   2b364:	4027883a 	mov	r19,r8
   2b368:	45003fcc 	andi	r20,r8,255
   2b36c:	8aa2b03a 	or	r17,r17,r10
   2b370:	5a56b03a 	or	r11,r11,r9
   2b374:	808bc83a 	sub	r5,r16,r2
   2b378:	41c07526 	beq	r8,r7,2b550 <__adddf3+0x248>
   2b37c:	0140540e 	bge	zero,r5,2b4d0 <__adddf3+0x1c8>
   2b380:	10008b26 	beq	r2,zero,2b5b0 <__adddf3+0x2a8>
   2b384:	8081ffe0 	cmpeqi	r2,r16,2047
   2b388:	10010d1e 	bne	r2,zero,2b7c0 <__adddf3+0x4b8>
   2b38c:	28800e48 	cmpgei	r2,r5,57
   2b390:	1000c11e 	bne	r2,zero,2b698 <__adddf3+0x390>
   2b394:	5ac02034 	orhi	r11,r11,128
   2b398:	28800808 	cmpgei	r2,r5,32
   2b39c:	1001461e 	bne	r2,zero,2b8b8 <__adddf3+0x5b0>
   2b3a0:	00800804 	movi	r2,32
   2b3a4:	1145c83a 	sub	r2,r2,r5
   2b3a8:	58a4983a 	sll	r18,r11,r2
   2b3ac:	6946d83a 	srl	r3,r13,r5
   2b3b0:	6884983a 	sll	r2,r13,r2
   2b3b4:	594ad83a 	srl	r5,r11,r5
   2b3b8:	90e4b03a 	or	r18,r18,r3
   2b3bc:	1004c03a 	cmpne	r2,r2,zero
   2b3c0:	90a4b03a 	or	r18,r18,r2
   2b3c4:	8963c83a 	sub	r17,r17,r5
   2b3c8:	64a5c83a 	sub	r18,r12,r18
   2b3cc:	6485803a 	cmpltu	r2,r12,r18
   2b3d0:	88a3c83a 	sub	r17,r17,r2
   2b3d4:	8880202c 	andhi	r2,r17,128
   2b3d8:	1000b826 	beq	r2,zero,2b6bc <__adddf3+0x3b4>
   2b3dc:	00802034 	movhi	r2,128
   2b3e0:	10bfffc4 	addi	r2,r2,-1
   2b3e4:	88a2703a 	and	r17,r17,r2
   2b3e8:	8800d026 	beq	r17,zero,2b72c <__adddf3+0x424>
   2b3ec:	8809883a 	mov	r4,r17
   2b3f0:	002d96c0 	call	2d96c <__clzsi2>
   2b3f4:	113ffe04 	addi	r4,r2,-8
   2b3f8:	00c00804 	movi	r3,32
   2b3fc:	1905c83a 	sub	r2,r3,r4
   2b400:	9084d83a 	srl	r2,r18,r2
   2b404:	8922983a 	sll	r17,r17,r4
   2b408:	9124983a 	sll	r18,r18,r4
   2b40c:	1444b03a 	or	r2,r2,r17
   2b410:	2400ff16 	blt	r4,r16,2b810 <__adddf3+0x508>
   2b414:	2409c83a 	sub	r4,r4,r16
   2b418:	21000044 	addi	r4,r4,1
   2b41c:	1907c83a 	sub	r3,r3,r4
   2b420:	90ca983a 	sll	r5,r18,r3
   2b424:	9122d83a 	srl	r17,r18,r4
   2b428:	280ac03a 	cmpne	r5,r5,zero
   2b42c:	10c6983a 	sll	r3,r2,r3
   2b430:	894ab03a 	or	r5,r17,r5
   2b434:	1122d83a 	srl	r17,r2,r4
   2b438:	0021883a 	mov	r16,zero
   2b43c:	1964b03a 	or	r18,r3,r5
   2b440:	908001cc 	andi	r2,r18,7
   2b444:	10000726 	beq	r2,zero,2b464 <__adddf3+0x15c>
   2b448:	908003cc 	andi	r2,r18,15
   2b44c:	10800120 	cmpeqi	r2,r2,4
   2b450:	1000041e 	bne	r2,zero,2b464 <__adddf3+0x15c>
   2b454:	90800104 	addi	r2,r18,4
   2b458:	14a5803a 	cmpltu	r18,r2,r18
   2b45c:	8ca3883a 	add	r17,r17,r18
   2b460:	1025883a 	mov	r18,r2
   2b464:	8880202c 	andhi	r2,r17,128
   2b468:	1000c926 	beq	r2,zero,2b790 <__adddf3+0x488>
   2b46c:	8081ffa0 	cmpeqi	r2,r16,2046
   2b470:	84000044 	addi	r16,r16,1
   2b474:	1000841e 	bne	r2,zero,2b688 <__adddf3+0x380>
   2b478:	013fe034 	movhi	r4,65408
   2b47c:	213fffc4 	addi	r4,r4,-1
   2b480:	8908703a 	and	r4,r17,r4
   2b484:	2004977a 	slli	r2,r4,29
   2b488:	2008927a 	slli	r4,r4,9
   2b48c:	9024d0fa 	srli	r18,r18,3
   2b490:	80c1ffcc 	andi	r3,r16,2047
   2b494:	2008d33a 	srli	r4,r4,12
   2b498:	1484b03a 	or	r2,r2,r18
   2b49c:	a027883a 	mov	r19,r20
   2b4a0:	1806953a 	slli	r3,r3,20
   2b4a4:	982697fa 	slli	r19,r19,31
   2b4a8:	1906b03a 	or	r3,r3,r4
   2b4ac:	1cc6b03a 	or	r3,r3,r19
   2b4b0:	dfc00517 	ldw	ra,20(sp)
   2b4b4:	dd000417 	ldw	r20,16(sp)
   2b4b8:	dcc00317 	ldw	r19,12(sp)
   2b4bc:	dc800217 	ldw	r18,8(sp)
   2b4c0:	dc400117 	ldw	r17,4(sp)
   2b4c4:	dc000017 	ldw	r16,0(sp)
   2b4c8:	dec00604 	addi	sp,sp,24
   2b4cc:	f800283a 	ret
   2b4d0:	3a803fcc 	andi	r10,r7,255
   2b4d4:	28004026 	beq	r5,zero,2b5d8 <__adddf3+0x2d0>
   2b4d8:	140bc83a 	sub	r5,r2,r16
   2b4dc:	8000e61e 	bne	r16,zero,2b878 <__adddf3+0x570>
   2b4e0:	8b06b03a 	or	r3,r17,r12
   2b4e4:	1800c426 	beq	r3,zero,2b7f8 <__adddf3+0x4f0>
   2b4e8:	28ffffc4 	addi	r3,r5,-1
   2b4ec:	18017a26 	beq	r3,zero,2bad8 <__adddf3+0x7d0>
   2b4f0:	2941ffe0 	cmpeqi	r5,r5,2047
   2b4f4:	28019a1e 	bne	r5,zero,2bb60 <__adddf3+0x858>
   2b4f8:	19000e48 	cmpgei	r4,r3,57
   2b4fc:	20010c1e 	bne	r4,zero,2b930 <__adddf3+0x628>
   2b500:	180b883a 	mov	r5,r3
   2b504:	28c00808 	cmpgei	r3,r5,32
   2b508:	1801521e 	bne	r3,zero,2ba54 <__adddf3+0x74c>
   2b50c:	00c00804 	movi	r3,32
   2b510:	1947c83a 	sub	r3,r3,r5
   2b514:	88e4983a 	sll	r18,r17,r3
   2b518:	6148d83a 	srl	r4,r12,r5
   2b51c:	60c6983a 	sll	r3,r12,r3
   2b520:	894ad83a 	srl	r5,r17,r5
   2b524:	9124b03a 	or	r18,r18,r4
   2b528:	1806c03a 	cmpne	r3,r3,zero
   2b52c:	90e4b03a 	or	r18,r18,r3
   2b530:	5957c83a 	sub	r11,r11,r5
   2b534:	6ca5c83a 	sub	r18,r13,r18
   2b538:	6c9b803a 	cmpltu	r13,r13,r18
   2b53c:	5b63c83a 	sub	r17,r11,r13
   2b540:	3827883a 	mov	r19,r7
   2b544:	1021883a 	mov	r16,r2
   2b548:	5029883a 	mov	r20,r10
   2b54c:	003fa106 	br	2b3d4 <__adddf3+0xcc>
   2b550:	01405d0e 	bge	zero,r5,2b6c8 <__adddf3+0x3c0>
   2b554:	1000351e 	bne	r2,zero,2b62c <__adddf3+0x324>
   2b558:	5b44b03a 	or	r2,r11,r13
   2b55c:	1000a926 	beq	r2,zero,2b804 <__adddf3+0x4fc>
   2b560:	28bfffc4 	addi	r2,r5,-1
   2b564:	10004e26 	beq	r2,zero,2b6a0 <__adddf3+0x398>
   2b568:	2941ffe0 	cmpeqi	r5,r5,2047
   2b56c:	2801121e 	bne	r5,zero,2b9b8 <__adddf3+0x6b0>
   2b570:	10c00e48 	cmpgei	r3,r2,57
   2b574:	1800311e 	bne	r3,zero,2b63c <__adddf3+0x334>
   2b578:	100b883a 	mov	r5,r2
   2b57c:	28800808 	cmpgei	r2,r5,32
   2b580:	1001181e 	bne	r2,zero,2b9e4 <__adddf3+0x6dc>
   2b584:	00800804 	movi	r2,32
   2b588:	1145c83a 	sub	r2,r2,r5
   2b58c:	58a4983a 	sll	r18,r11,r2
   2b590:	6946d83a 	srl	r3,r13,r5
   2b594:	6884983a 	sll	r2,r13,r2
   2b598:	594ad83a 	srl	r5,r11,r5
   2b59c:	90e4b03a 	or	r18,r18,r3
   2b5a0:	1004c03a 	cmpne	r2,r2,zero
   2b5a4:	90a4b03a 	or	r18,r18,r2
   2b5a8:	8963883a 	add	r17,r17,r5
   2b5ac:	00002406 	br	2b640 <__adddf3+0x338>
   2b5b0:	5b44b03a 	or	r2,r11,r13
   2b5b4:	10009326 	beq	r2,zero,2b804 <__adddf3+0x4fc>
   2b5b8:	28bfffc4 	addi	r2,r5,-1
   2b5bc:	1000f826 	beq	r2,zero,2b9a0 <__adddf3+0x698>
   2b5c0:	2941ffe0 	cmpeqi	r5,r5,2047
   2b5c4:	2800fc1e 	bne	r5,zero,2b9b8 <__adddf3+0x6b0>
   2b5c8:	10c00e48 	cmpgei	r3,r2,57
   2b5cc:	1800321e 	bne	r3,zero,2b698 <__adddf3+0x390>
   2b5d0:	100b883a 	mov	r5,r2
   2b5d4:	003f7006 	br	2b398 <__adddf3+0x90>
   2b5d8:	80800044 	addi	r2,r16,1
   2b5dc:	1081ff8c 	andi	r2,r2,2046
   2b5e0:	1000ab1e 	bne	r2,zero,2b890 <__adddf3+0x588>
   2b5e4:	8b0ab03a 	or	r5,r17,r12
   2b5e8:	5b44b03a 	or	r2,r11,r13
   2b5ec:	8000e71e 	bne	r16,zero,2b98c <__adddf3+0x684>
   2b5f0:	28014126 	beq	r5,zero,2baf8 <__adddf3+0x7f0>
   2b5f4:	10010626 	beq	r2,zero,2ba10 <__adddf3+0x708>
   2b5f8:	6365c83a 	sub	r18,r12,r13
   2b5fc:	6485803a 	cmpltu	r2,r12,r18
   2b600:	8ac7c83a 	sub	r3,r17,r11
   2b604:	1887c83a 	sub	r3,r3,r2
   2b608:	1880202c 	andhi	r2,r3,128
   2b60c:	10017326 	beq	r2,zero,2bbdc <__adddf3+0x8d4>
   2b610:	6b25c83a 	sub	r18,r13,r12
   2b614:	5c57c83a 	sub	r11,r11,r17
   2b618:	6c9b803a 	cmpltu	r13,r13,r18
   2b61c:	5b63c83a 	sub	r17,r11,r13
   2b620:	3827883a 	mov	r19,r7
   2b624:	5029883a 	mov	r20,r10
   2b628:	003f8506 	br	2b440 <__adddf3+0x138>
   2b62c:	8081ffe0 	cmpeqi	r2,r16,2047
   2b630:	1000631e 	bne	r2,zero,2b7c0 <__adddf3+0x4b8>
   2b634:	28800e48 	cmpgei	r2,r5,57
   2b638:	1000aa26 	beq	r2,zero,2b8e4 <__adddf3+0x5dc>
   2b63c:	04800044 	movi	r18,1
   2b640:	9325883a 	add	r18,r18,r12
   2b644:	9305803a 	cmpltu	r2,r18,r12
   2b648:	88a3883a 	add	r17,r17,r2
   2b64c:	8880202c 	andhi	r2,r17,128
   2b650:	10001a26 	beq	r2,zero,2b6bc <__adddf3+0x3b4>
   2b654:	84000044 	addi	r16,r16,1
   2b658:	8081ffe0 	cmpeqi	r2,r16,2047
   2b65c:	10000a1e 	bne	r2,zero,2b688 <__adddf3+0x380>
   2b660:	00bfe034 	movhi	r2,65408
   2b664:	10bfffc4 	addi	r2,r2,-1
   2b668:	9006d07a 	srli	r3,r18,1
   2b66c:	8884703a 	and	r2,r17,r2
   2b670:	100897fa 	slli	r4,r2,31
   2b674:	9480004c 	andi	r18,r18,1
   2b678:	1c86b03a 	or	r3,r3,r18
   2b67c:	1022d07a 	srli	r17,r2,1
   2b680:	20e4b03a 	or	r18,r4,r3
   2b684:	003f6e06 	br	2b440 <__adddf3+0x138>
   2b688:	00c1ffc4 	movi	r3,2047
   2b68c:	0009883a 	mov	r4,zero
   2b690:	0005883a 	mov	r2,zero
   2b694:	003f8206 	br	2b4a0 <__adddf3+0x198>
   2b698:	04800044 	movi	r18,1
   2b69c:	003f4a06 	br	2b3c8 <__adddf3+0xc0>
   2b6a0:	6365883a 	add	r18,r12,r13
   2b6a4:	8ad7883a 	add	r11,r17,r11
   2b6a8:	9305803a 	cmpltu	r2,r18,r12
   2b6ac:	58a3883a 	add	r17,r11,r2
   2b6b0:	8880202c 	andhi	r2,r17,128
   2b6b4:	1001061e 	bne	r2,zero,2bad0 <__adddf3+0x7c8>
   2b6b8:	04000044 	movi	r16,1
   2b6bc:	908001cc 	andi	r2,r18,7
   2b6c0:	103f611e 	bne	r2,zero,2b448 <__adddf3+0x140>
   2b6c4:	00006906 	br	2b86c <__adddf3+0x564>
   2b6c8:	28005626 	beq	r5,zero,2b824 <__adddf3+0x51c>
   2b6cc:	140bc83a 	sub	r5,r2,r16
   2b6d0:	80008626 	beq	r16,zero,2b8ec <__adddf3+0x5e4>
   2b6d4:	10c1ffe0 	cmpeqi	r3,r2,2047
   2b6d8:	1801101e 	bne	r3,zero,2bb1c <__adddf3+0x814>
   2b6dc:	28c00e48 	cmpgei	r3,r5,57
   2b6e0:	1800da1e 	bne	r3,zero,2ba4c <__adddf3+0x744>
   2b6e4:	8c402034 	orhi	r17,r17,128
   2b6e8:	28c00808 	cmpgei	r3,r5,32
   2b6ec:	1801241e 	bne	r3,zero,2bb80 <__adddf3+0x878>
   2b6f0:	00c00804 	movi	r3,32
   2b6f4:	1947c83a 	sub	r3,r3,r5
   2b6f8:	88e4983a 	sll	r18,r17,r3
   2b6fc:	6148d83a 	srl	r4,r12,r5
   2b700:	60c6983a 	sll	r3,r12,r3
   2b704:	894ad83a 	srl	r5,r17,r5
   2b708:	9124b03a 	or	r18,r18,r4
   2b70c:	1806c03a 	cmpne	r3,r3,zero
   2b710:	90e4b03a 	or	r18,r18,r3
   2b714:	5957883a 	add	r11,r11,r5
   2b718:	9365883a 	add	r18,r18,r13
   2b71c:	935b803a 	cmpltu	r13,r18,r13
   2b720:	6ae3883a 	add	r17,r13,r11
   2b724:	1021883a 	mov	r16,r2
   2b728:	003fc806 	br	2b64c <__adddf3+0x344>
   2b72c:	9009883a 	mov	r4,r18
   2b730:	002d96c0 	call	2d96c <__clzsi2>
   2b734:	11000604 	addi	r4,r2,24
   2b738:	20c00808 	cmpgei	r3,r4,32
   2b73c:	183f2e26 	beq	r3,zero,2b3f8 <__adddf3+0xf0>
   2b740:	10bffe04 	addi	r2,r2,-8
   2b744:	9084983a 	sll	r2,r18,r2
   2b748:	24007216 	blt	r4,r16,2b914 <__adddf3+0x60c>
   2b74c:	2425c83a 	sub	r18,r4,r16
   2b750:	91000044 	addi	r4,r18,1
   2b754:	20c00808 	cmpgei	r3,r4,32
   2b758:	18012426 	beq	r3,zero,2bbec <__adddf3+0x8e4>
   2b75c:	94bff844 	addi	r18,r18,-31
   2b760:	20c00820 	cmpeqi	r3,r4,32
   2b764:	14a4d83a 	srl	r18,r2,r18
   2b768:	1800051e 	bne	r3,zero,2b780 <__adddf3+0x478>
   2b76c:	00c01004 	movi	r3,64
   2b770:	1907c83a 	sub	r3,r3,r4
   2b774:	10c4983a 	sll	r2,r2,r3
   2b778:	1004c03a 	cmpne	r2,r2,zero
   2b77c:	90a4b03a 	or	r18,r18,r2
   2b780:	908001cc 	andi	r2,r18,7
   2b784:	0021883a 	mov	r16,zero
   2b788:	103f2f1e 	bne	r2,zero,2b448 <__adddf3+0x140>
   2b78c:	00003706 	br	2b86c <__adddf3+0x564>
   2b790:	9004d0fa 	srli	r2,r18,3
   2b794:	880a977a 	slli	r5,r17,29
   2b798:	8101ffe0 	cmpeqi	r4,r16,2047
   2b79c:	8806d0fa 	srli	r3,r17,3
   2b7a0:	2884b03a 	or	r2,r5,r2
   2b7a4:	20000c1e 	bne	r4,zero,2b7d8 <__adddf3+0x4d0>
   2b7a8:	01000434 	movhi	r4,16
   2b7ac:	213fffc4 	addi	r4,r4,-1
   2b7b0:	1908703a 	and	r4,r3,r4
   2b7b4:	80c1ffcc 	andi	r3,r16,2047
   2b7b8:	003f3906 	br	2b4a0 <__adddf3+0x198>
   2b7bc:	1000b31e 	bne	r2,zero,2ba8c <__adddf3+0x784>
   2b7c0:	880a977a 	slli	r5,r17,29
   2b7c4:	00880034 	movhi	r2,8192
   2b7c8:	10bfffc4 	addi	r2,r2,-1
   2b7cc:	8806d0fa 	srli	r3,r17,3
   2b7d0:	2084703a 	and	r2,r4,r2
   2b7d4:	1144b03a 	or	r2,r2,r5
   2b7d8:	10c8b03a 	or	r4,r2,r3
   2b7dc:	20010726 	beq	r4,zero,2bbfc <__adddf3+0x8f4>
   2b7e0:	01400434 	movhi	r5,16
   2b7e4:	19000234 	orhi	r4,r3,8
   2b7e8:	297fffc4 	addi	r5,r5,-1
   2b7ec:	2148703a 	and	r4,r4,r5
   2b7f0:	00c1ffc4 	movi	r3,2047
   2b7f4:	003f2a06 	br	2b4a0 <__adddf3+0x198>
   2b7f8:	6819883a 	mov	r12,r13
   2b7fc:	5823883a 	mov	r17,r11
   2b800:	3827883a 	mov	r19,r7
   2b804:	6004d0fa 	srli	r2,r12,3
   2b808:	2821883a 	mov	r16,r5
   2b80c:	003fe106 	br	2b794 <__adddf3+0x48c>
   2b810:	047fe034 	movhi	r17,65408
   2b814:	8c7fffc4 	addi	r17,r17,-1
   2b818:	8121c83a 	sub	r16,r16,r4
   2b81c:	1462703a 	and	r17,r2,r17
   2b820:	003f0706 	br	2b440 <__adddf3+0x138>
   2b824:	80c00044 	addi	r3,r16,1
   2b828:	1881ff8c 	andi	r2,r3,2046
   2b82c:	1000421e 	bne	r2,zero,2b938 <__adddf3+0x630>
   2b830:	8b04b03a 	or	r2,r17,r12
   2b834:	8000921e 	bne	r16,zero,2ba80 <__adddf3+0x778>
   2b838:	1000c226 	beq	r2,zero,2bb44 <__adddf3+0x83c>
   2b83c:	5b44b03a 	or	r2,r11,r13
   2b840:	10007326 	beq	r2,zero,2ba10 <__adddf3+0x708>
   2b844:	6365883a 	add	r18,r12,r13
   2b848:	9305803a 	cmpltu	r2,r18,r12
   2b84c:	8ad7883a 	add	r11,r17,r11
   2b850:	58a3883a 	add	r17,r11,r2
   2b854:	8880202c 	andhi	r2,r17,128
   2b858:	10000426 	beq	r2,zero,2b86c <__adddf3+0x564>
   2b85c:	00bfe034 	movhi	r2,65408
   2b860:	10bfffc4 	addi	r2,r2,-1
   2b864:	88a2703a 	and	r17,r17,r2
   2b868:	04000044 	movi	r16,1
   2b86c:	800b883a 	mov	r5,r16
   2b870:	9019883a 	mov	r12,r18
   2b874:	003fe306 	br	2b804 <__adddf3+0x4fc>
   2b878:	10c1ffe0 	cmpeqi	r3,r2,2047
   2b87c:	18006b1e 	bne	r3,zero,2ba2c <__adddf3+0x724>
   2b880:	28c00e48 	cmpgei	r3,r5,57
   2b884:	18002a1e 	bne	r3,zero,2b930 <__adddf3+0x628>
   2b888:	8c402034 	orhi	r17,r17,128
   2b88c:	003f1d06 	br	2b504 <__adddf3+0x1fc>
   2b890:	6365c83a 	sub	r18,r12,r13
   2b894:	6485803a 	cmpltu	r2,r12,r18
   2b898:	8ac7c83a 	sub	r3,r17,r11
   2b89c:	1887c83a 	sub	r3,r3,r2
   2b8a0:	1880202c 	andhi	r2,r3,128
   2b8a4:	1000321e 	bne	r2,zero,2b970 <__adddf3+0x668>
   2b8a8:	90c4b03a 	or	r2,r18,r3
   2b8ac:	10004926 	beq	r2,zero,2b9d4 <__adddf3+0x6cc>
   2b8b0:	1823883a 	mov	r17,r3
   2b8b4:	003ecc06 	br	2b3e8 <__adddf3+0xe0>
   2b8b8:	28bff804 	addi	r2,r5,-32
   2b8bc:	28c00820 	cmpeqi	r3,r5,32
   2b8c0:	5884d83a 	srl	r2,r11,r2
   2b8c4:	1800041e 	bne	r3,zero,2b8d8 <__adddf3+0x5d0>
   2b8c8:	00c01004 	movi	r3,64
   2b8cc:	1947c83a 	sub	r3,r3,r5
   2b8d0:	58c6983a 	sll	r3,r11,r3
   2b8d4:	68dab03a 	or	r13,r13,r3
   2b8d8:	6824c03a 	cmpne	r18,r13,zero
   2b8dc:	90a4b03a 	or	r18,r18,r2
   2b8e0:	003eb906 	br	2b3c8 <__adddf3+0xc0>
   2b8e4:	5ac02034 	orhi	r11,r11,128
   2b8e8:	003f2406 	br	2b57c <__adddf3+0x274>
   2b8ec:	8b06b03a 	or	r3,r17,r12
   2b8f0:	18009126 	beq	r3,zero,2bb38 <__adddf3+0x830>
   2b8f4:	28ffffc4 	addi	r3,r5,-1
   2b8f8:	1800ac26 	beq	r3,zero,2bbac <__adddf3+0x8a4>
   2b8fc:	2941ffe0 	cmpeqi	r5,r5,2047
   2b900:	2800861e 	bne	r5,zero,2bb1c <__adddf3+0x814>
   2b904:	19000e48 	cmpgei	r4,r3,57
   2b908:	2000501e 	bne	r4,zero,2ba4c <__adddf3+0x744>
   2b90c:	180b883a 	mov	r5,r3
   2b910:	003f7506 	br	2b6e8 <__adddf3+0x3e0>
   2b914:	00ffe034 	movhi	r3,65408
   2b918:	18ffffc4 	addi	r3,r3,-1
   2b91c:	10c6703a 	and	r3,r2,r3
   2b920:	1804977a 	slli	r2,r3,29
   2b924:	8121c83a 	sub	r16,r16,r4
   2b928:	1806d0fa 	srli	r3,r3,3
   2b92c:	003f9e06 	br	2b7a8 <__adddf3+0x4a0>
   2b930:	04800044 	movi	r18,1
   2b934:	003eff06 	br	2b534 <__adddf3+0x22c>
   2b938:	1881ffe0 	cmpeqi	r2,r3,2047
   2b93c:	103f521e 	bne	r2,zero,2b688 <__adddf3+0x380>
   2b940:	6349883a 	add	r4,r12,r13
   2b944:	8ad7883a 	add	r11,r17,r11
   2b948:	2305803a 	cmpltu	r2,r4,r12
   2b94c:	5885883a 	add	r2,r11,r2
   2b950:	2008d07a 	srli	r4,r4,1
   2b954:	102497fa 	slli	r18,r2,31
   2b958:	1022d07a 	srli	r17,r2,1
   2b95c:	208001cc 	andi	r2,r4,7
   2b960:	9124b03a 	or	r18,r18,r4
   2b964:	1821883a 	mov	r16,r3
   2b968:	103eb71e 	bne	r2,zero,2b448 <__adddf3+0x140>
   2b96c:	003fbf06 	br	2b86c <__adddf3+0x564>
   2b970:	6b25c83a 	sub	r18,r13,r12
   2b974:	5c57c83a 	sub	r11,r11,r17
   2b978:	6c9b803a 	cmpltu	r13,r13,r18
   2b97c:	5b63c83a 	sub	r17,r11,r13
   2b980:	3827883a 	mov	r19,r7
   2b984:	5029883a 	mov	r20,r10
   2b988:	003e9706 	br	2b3e8 <__adddf3+0xe0>
   2b98c:	283f8b1e 	bne	r5,zero,2b7bc <__adddf3+0x4b4>
   2b990:	1000261e 	bne	r2,zero,2ba2c <__adddf3+0x724>
   2b994:	00bfffc4 	movi	r2,-1
   2b998:	0027883a 	mov	r19,zero
   2b99c:	003f9006 	br	2b7e0 <__adddf3+0x4d8>
   2b9a0:	6365c83a 	sub	r18,r12,r13
   2b9a4:	8ad7c83a 	sub	r11,r17,r11
   2b9a8:	6485803a 	cmpltu	r2,r12,r18
   2b9ac:	58a3c83a 	sub	r17,r11,r2
   2b9b0:	04000044 	movi	r16,1
   2b9b4:	003e8706 	br	2b3d4 <__adddf3+0xcc>
   2b9b8:	8804977a 	slli	r2,r17,29
   2b9bc:	00c80034 	movhi	r3,8192
   2b9c0:	18ffffc4 	addi	r3,r3,-1
   2b9c4:	20c8703a 	and	r4,r4,r3
   2b9c8:	2084b03a 	or	r2,r4,r2
   2b9cc:	8806d0fa 	srli	r3,r17,3
   2b9d0:	003f8106 	br	2b7d8 <__adddf3+0x4d0>
   2b9d4:	0027883a 	mov	r19,zero
   2b9d8:	0007883a 	mov	r3,zero
   2b9dc:	0009883a 	mov	r4,zero
   2b9e0:	003eaf06 	br	2b4a0 <__adddf3+0x198>
   2b9e4:	28bff804 	addi	r2,r5,-32
   2b9e8:	28c00820 	cmpeqi	r3,r5,32
   2b9ec:	5884d83a 	srl	r2,r11,r2
   2b9f0:	1800041e 	bne	r3,zero,2ba04 <__adddf3+0x6fc>
   2b9f4:	00c01004 	movi	r3,64
   2b9f8:	1947c83a 	sub	r3,r3,r5
   2b9fc:	58c6983a 	sll	r3,r11,r3
   2ba00:	68dab03a 	or	r13,r13,r3
   2ba04:	6824c03a 	cmpne	r18,r13,zero
   2ba08:	90a4b03a 	or	r18,r18,r2
   2ba0c:	003f0c06 	br	2b640 <__adddf3+0x338>
   2ba10:	880a977a 	slli	r5,r17,29
   2ba14:	00880034 	movhi	r2,8192
   2ba18:	10bfffc4 	addi	r2,r2,-1
   2ba1c:	2084703a 	and	r2,r4,r2
   2ba20:	8806d0fa 	srli	r3,r17,3
   2ba24:	1144b03a 	or	r2,r2,r5
   2ba28:	003f5f06 	br	2b7a8 <__adddf3+0x4a0>
   2ba2c:	5804977a 	slli	r2,r11,29
   2ba30:	00c80034 	movhi	r3,8192
   2ba34:	18ffffc4 	addi	r3,r3,-1
   2ba38:	30c8703a 	and	r4,r6,r3
   2ba3c:	1104b03a 	or	r2,r2,r4
   2ba40:	5806d0fa 	srli	r3,r11,3
   2ba44:	3827883a 	mov	r19,r7
   2ba48:	003f6306 	br	2b7d8 <__adddf3+0x4d0>
   2ba4c:	04800044 	movi	r18,1
   2ba50:	003f3106 	br	2b718 <__adddf3+0x410>
   2ba54:	28fff804 	addi	r3,r5,-32
   2ba58:	29000820 	cmpeqi	r4,r5,32
   2ba5c:	88c6d83a 	srl	r3,r17,r3
   2ba60:	2000041e 	bne	r4,zero,2ba74 <__adddf3+0x76c>
   2ba64:	01001004 	movi	r4,64
   2ba68:	2149c83a 	sub	r4,r4,r5
   2ba6c:	8908983a 	sll	r4,r17,r4
   2ba70:	6118b03a 	or	r12,r12,r4
   2ba74:	6024c03a 	cmpne	r18,r12,zero
   2ba78:	90e4b03a 	or	r18,r18,r3
   2ba7c:	003ead06 	br	2b534 <__adddf3+0x22c>
   2ba80:	10004f26 	beq	r2,zero,2bbc0 <__adddf3+0x8b8>
   2ba84:	5b5ab03a 	or	r13,r11,r13
   2ba88:	683f4d26 	beq	r13,zero,2b7c0 <__adddf3+0x4b8>
   2ba8c:	8806d0fa 	srli	r3,r17,3
   2ba90:	01480034 	movhi	r5,8192
   2ba94:	8822977a 	slli	r17,r17,29
   2ba98:	297fffc4 	addi	r5,r5,-1
   2ba9c:	2144703a 	and	r2,r4,r5
   2baa0:	1900022c 	andhi	r4,r3,8
   2baa4:	1444b03a 	or	r2,r2,r17
   2baa8:	203f4b26 	beq	r4,zero,2b7d8 <__adddf3+0x4d0>
   2baac:	5808d0fa 	srli	r4,r11,3
   2bab0:	2200022c 	andhi	r8,r4,8
   2bab4:	403f481e 	bne	r8,zero,2b7d8 <__adddf3+0x4d0>
   2bab8:	5804977a 	slli	r2,r11,29
   2babc:	314a703a 	and	r5,r6,r5
   2bac0:	3827883a 	mov	r19,r7
   2bac4:	2884b03a 	or	r2,r5,r2
   2bac8:	2007883a 	mov	r3,r4
   2bacc:	003f4206 	br	2b7d8 <__adddf3+0x4d0>
   2bad0:	04000084 	movi	r16,2
   2bad4:	003ee206 	br	2b660 <__adddf3+0x358>
   2bad8:	6b25c83a 	sub	r18,r13,r12
   2badc:	5c57c83a 	sub	r11,r11,r17
   2bae0:	6c9b803a 	cmpltu	r13,r13,r18
   2bae4:	5b63c83a 	sub	r17,r11,r13
   2bae8:	3827883a 	mov	r19,r7
   2baec:	5029883a 	mov	r20,r10
   2baf0:	04000044 	movi	r16,1
   2baf4:	003e3706 	br	2b3d4 <__adddf3+0xcc>
   2baf8:	103fb626 	beq	r2,zero,2b9d4 <__adddf3+0x6cc>
   2bafc:	5808977a 	slli	r4,r11,29
   2bb00:	00880034 	movhi	r2,8192
   2bb04:	10bfffc4 	addi	r2,r2,-1
   2bb08:	3084703a 	and	r2,r6,r2
   2bb0c:	5806d0fa 	srli	r3,r11,3
   2bb10:	1104b03a 	or	r2,r2,r4
   2bb14:	3827883a 	mov	r19,r7
   2bb18:	003f2306 	br	2b7a8 <__adddf3+0x4a0>
   2bb1c:	5808977a 	slli	r4,r11,29
   2bb20:	00880034 	movhi	r2,8192
   2bb24:	10bfffc4 	addi	r2,r2,-1
   2bb28:	3084703a 	and	r2,r6,r2
   2bb2c:	5806d0fa 	srli	r3,r11,3
   2bb30:	1104b03a 	or	r2,r2,r4
   2bb34:	003f2806 	br	2b7d8 <__adddf3+0x4d0>
   2bb38:	6819883a 	mov	r12,r13
   2bb3c:	5823883a 	mov	r17,r11
   2bb40:	003f3006 	br	2b804 <__adddf3+0x4fc>
   2bb44:	5808977a 	slli	r4,r11,29
   2bb48:	00880034 	movhi	r2,8192
   2bb4c:	10bfffc4 	addi	r2,r2,-1
   2bb50:	3084703a 	and	r2,r6,r2
   2bb54:	5806d0fa 	srli	r3,r11,3
   2bb58:	1104b03a 	or	r2,r2,r4
   2bb5c:	003f1206 	br	2b7a8 <__adddf3+0x4a0>
   2bb60:	5808977a 	slli	r4,r11,29
   2bb64:	00880034 	movhi	r2,8192
   2bb68:	10bfffc4 	addi	r2,r2,-1
   2bb6c:	3084703a 	and	r2,r6,r2
   2bb70:	5806d0fa 	srli	r3,r11,3
   2bb74:	1104b03a 	or	r2,r2,r4
   2bb78:	3827883a 	mov	r19,r7
   2bb7c:	003f1606 	br	2b7d8 <__adddf3+0x4d0>
   2bb80:	28fff804 	addi	r3,r5,-32
   2bb84:	29000820 	cmpeqi	r4,r5,32
   2bb88:	88c6d83a 	srl	r3,r17,r3
   2bb8c:	2000041e 	bne	r4,zero,2bba0 <__adddf3+0x898>
   2bb90:	01001004 	movi	r4,64
   2bb94:	2149c83a 	sub	r4,r4,r5
   2bb98:	8908983a 	sll	r4,r17,r4
   2bb9c:	6118b03a 	or	r12,r12,r4
   2bba0:	6024c03a 	cmpne	r18,r12,zero
   2bba4:	90e4b03a 	or	r18,r18,r3
   2bba8:	003edb06 	br	2b718 <__adddf3+0x410>
   2bbac:	6365883a 	add	r18,r12,r13
   2bbb0:	8ad7883a 	add	r11,r17,r11
   2bbb4:	935b803a 	cmpltu	r13,r18,r13
   2bbb8:	5b63883a 	add	r17,r11,r13
   2bbbc:	003ebc06 	br	2b6b0 <__adddf3+0x3a8>
   2bbc0:	5804977a 	slli	r2,r11,29
   2bbc4:	00c80034 	movhi	r3,8192
   2bbc8:	18ffffc4 	addi	r3,r3,-1
   2bbcc:	30cc703a 	and	r6,r6,r3
   2bbd0:	1184b03a 	or	r2,r2,r6
   2bbd4:	5806d0fa 	srli	r3,r11,3
   2bbd8:	003eff06 	br	2b7d8 <__adddf3+0x4d0>
   2bbdc:	90c4b03a 	or	r2,r18,r3
   2bbe0:	103f7c26 	beq	r2,zero,2b9d4 <__adddf3+0x6cc>
   2bbe4:	1823883a 	mov	r17,r3
   2bbe8:	003f2006 	br	2b86c <__adddf3+0x564>
   2bbec:	00c00804 	movi	r3,32
   2bbf0:	1907c83a 	sub	r3,r3,r4
   2bbf4:	000b883a 	mov	r5,zero
   2bbf8:	003e0c06 	br	2b42c <__adddf3+0x124>
   2bbfc:	0005883a 	mov	r2,zero
   2bc00:	00c1ffc4 	movi	r3,2047
   2bc04:	0009883a 	mov	r4,zero
   2bc08:	003e2506 	br	2b4a0 <__adddf3+0x198>

0002bc0c <__divdf3>:
   2bc0c:	2806d53a 	srli	r3,r5,20
   2bc10:	defff304 	addi	sp,sp,-52
   2bc14:	00800434 	movhi	r2,16
   2bc18:	dd800915 	stw	r22,36(sp)
   2bc1c:	dd400815 	stw	r21,32(sp)
   2bc20:	dd000715 	stw	r20,28(sp)
   2bc24:	dc400415 	stw	r17,16(sp)
   2bc28:	dc000315 	stw	r16,12(sp)
   2bc2c:	10bfffc4 	addi	r2,r2,-1
   2bc30:	dfc00c15 	stw	ra,48(sp)
   2bc34:	df000b15 	stw	fp,44(sp)
   2bc38:	ddc00a15 	stw	r23,40(sp)
   2bc3c:	dcc00615 	stw	r19,24(sp)
   2bc40:	dc800515 	stw	r18,20(sp)
   2bc44:	18c1ffcc 	andi	r3,r3,2047
   2bc48:	282cd7fa 	srli	r22,r5,31
   2bc4c:	302b883a 	mov	r21,r6
   2bc50:	3821883a 	mov	r16,r7
   2bc54:	2029883a 	mov	r20,r4
   2bc58:	28a2703a 	and	r17,r5,r2
   2bc5c:	18010d26 	beq	r3,zero,2c094 <__divdf3+0x488>
   2bc60:	1881ffe0 	cmpeqi	r2,r3,2047
   2bc64:	10011e1e 	bne	r2,zero,2c0e0 <__divdf3+0x4d4>
   2bc68:	880a90fa 	slli	r5,r17,3
   2bc6c:	2008d77a 	srli	r4,r4,29
   2bc70:	a02890fa 	slli	r20,r20,3
   2bc74:	1cff0044 	addi	r19,r3,-1023
   2bc78:	2148b03a 	or	r4,r4,r5
   2bc7c:	24802034 	orhi	r18,r4,128
   2bc80:	0023883a 	mov	r17,zero
   2bc84:	0039883a 	mov	fp,zero
   2bc88:	8006d53a 	srli	r3,r16,20
   2bc8c:	00800434 	movhi	r2,16
   2bc90:	10bfffc4 	addi	r2,r2,-1
   2bc94:	18c1ffcc 	andi	r3,r3,2047
   2bc98:	802ed7fa 	srli	r23,r16,31
   2bc9c:	80a0703a 	and	r16,r16,r2
   2bca0:	1800eb26 	beq	r3,zero,2c050 <__divdf3+0x444>
   2bca4:	1881ffe0 	cmpeqi	r2,r3,2047
   2bca8:	1001141e 	bne	r2,zero,2c0fc <__divdf3+0x4f0>
   2bcac:	802090fa 	slli	r16,r16,3
   2bcb0:	a804d77a 	srli	r2,r21,29
   2bcb4:	a80e90fa 	slli	r7,r21,3
   2bcb8:	18ff0044 	addi	r3,r3,-1023
   2bcbc:	1420b03a 	or	r16,r2,r16
   2bcc0:	98e7c83a 	sub	r19,r19,r3
   2bcc4:	84002034 	orhi	r16,r16,128
   2bcc8:	0007883a 	mov	r3,zero
   2bccc:	88800428 	cmpgeui	r2,r17,16
   2bcd0:	b5eaf03a 	xor	r21,r22,r23
   2bcd4:	1000391e 	bne	r2,zero,2bdbc <__divdf3+0x1b0>
   2bcd8:	882290ba 	slli	r17,r17,2
   2bcdc:	008000f4 	movhi	r2,3
   2bce0:	8885883a 	add	r2,r17,r2
   2bce4:	10af3b17 	ldw	r2,-17172(r2)
   2bce8:	1000683a 	jmp	r2
   2bcec:	0002bdbc 	xorhi	zero,zero,2806
   2bcf0:	0002bda4 	muli	zero,zero,2806
   2bcf4:	0002bd54 	movui	zero,2805
   2bcf8:	0002bdb4 	movhi	zero,2806
   2bcfc:	0002bd54 	movui	zero,2805
   2bd00:	0002c160 	cmpeqi	zero,zero,2821
   2bd04:	0002bd54 	movui	zero,2805
   2bd08:	0002bdb4 	movhi	zero,2806
   2bd0c:	0002bda4 	muli	zero,zero,2806
   2bd10:	0002bda4 	muli	zero,zero,2806
   2bd14:	0002c160 	cmpeqi	zero,zero,2821
   2bd18:	0002bdb4 	movhi	zero,2806
   2bd1c:	0002bd2c 	andhi	zero,zero,2804
   2bd20:	0002bd2c 	andhi	zero,zero,2804
   2bd24:	0002bd2c 	andhi	zero,zero,2804
   2bd28:	0002c1f0 	cmpltui	zero,zero,2823
   2bd2c:	b02b883a 	mov	r21,r22
   2bd30:	9021883a 	mov	r16,r18
   2bd34:	a00f883a 	mov	r7,r20
   2bd38:	e007883a 	mov	r3,fp
   2bd3c:	188000a0 	cmpeqi	r2,r3,2
   2bd40:	1000181e 	bne	r2,zero,2bda4 <__divdf3+0x198>
   2bd44:	188000e0 	cmpeqi	r2,r3,3
   2bd48:	1001b61e 	bne	r2,zero,2c424 <__divdf3+0x818>
   2bd4c:	18c00060 	cmpeqi	r3,r3,1
   2bd50:	1800ac26 	beq	r3,zero,2c004 <__divdf3+0x3f8>
   2bd54:	000b883a 	mov	r5,zero
   2bd58:	0009883a 	mov	r4,zero
   2bd5c:	0029883a 	mov	r20,zero
   2bd60:	2806953a 	slli	r3,r5,20
   2bd64:	a82a97fa 	slli	r21,r21,31
   2bd68:	a005883a 	mov	r2,r20
   2bd6c:	1906b03a 	or	r3,r3,r4
   2bd70:	1d46b03a 	or	r3,r3,r21
   2bd74:	dfc00c17 	ldw	ra,48(sp)
   2bd78:	df000b17 	ldw	fp,44(sp)
   2bd7c:	ddc00a17 	ldw	r23,40(sp)
   2bd80:	dd800917 	ldw	r22,36(sp)
   2bd84:	dd400817 	ldw	r21,32(sp)
   2bd88:	dd000717 	ldw	r20,28(sp)
   2bd8c:	dcc00617 	ldw	r19,24(sp)
   2bd90:	dc800517 	ldw	r18,20(sp)
   2bd94:	dc400417 	ldw	r17,16(sp)
   2bd98:	dc000317 	ldw	r16,12(sp)
   2bd9c:	dec00d04 	addi	sp,sp,52
   2bda0:	f800283a 	ret
   2bda4:	0141ffc4 	movi	r5,2047
   2bda8:	0009883a 	mov	r4,zero
   2bdac:	0029883a 	mov	r20,zero
   2bdb0:	003feb06 	br	2bd60 <__divdf3+0x154>
   2bdb4:	b82b883a 	mov	r21,r23
   2bdb8:	003fe006 	br	2bd3c <__divdf3+0x130>
   2bdbc:	84812636 	bltu	r16,r18,2c258 <__divdf3+0x64c>
   2bdc0:	84812426 	beq	r16,r18,2c254 <__divdf3+0x648>
   2bdc4:	9cffffc4 	addi	r19,r19,-1
   2bdc8:	a023883a 	mov	r17,r20
   2bdcc:	0007883a 	mov	r3,zero
   2bdd0:	8020923a 	slli	r16,r16,8
   2bdd4:	3828d63a 	srli	r20,r7,24
   2bdd8:	9009883a 	mov	r4,r18
   2bddc:	802cd43a 	srli	r22,r16,16
   2bde0:	d8c00015 	stw	r3,0(sp)
   2bde4:	382e923a 	slli	r23,r7,8
   2bde8:	b00b883a 	mov	r5,r22
   2bdec:	002097c0 	call	2097c <__udivsi3>
   2bdf0:	9009883a 	mov	r4,r18
   2bdf4:	b00b883a 	mov	r5,r22
   2bdf8:	a428b03a 	or	r20,r20,r16
   2bdfc:	1021883a 	mov	r16,r2
   2be00:	00209e00 	call	209e0 <__umodsi3>
   2be04:	1004943a 	slli	r2,r2,16
   2be08:	8808d43a 	srli	r4,r17,16
   2be0c:	a4bfffcc 	andi	r18,r20,65535
   2be10:	940b383a 	mul	r5,r18,r16
   2be14:	2088b03a 	or	r4,r4,r2
   2be18:	d8c00017 	ldw	r3,0(sp)
   2be1c:	2140042e 	bgeu	r4,r5,2be30 <__divdf3+0x224>
   2be20:	2509883a 	add	r4,r4,r20
   2be24:	80bfffc4 	addi	r2,r16,-1
   2be28:	25013b2e 	bgeu	r4,r20,2c318 <__divdf3+0x70c>
   2be2c:	1021883a 	mov	r16,r2
   2be30:	2179c83a 	sub	fp,r4,r5
   2be34:	e009883a 	mov	r4,fp
   2be38:	b00b883a 	mov	r5,r22
   2be3c:	d8c00015 	stw	r3,0(sp)
   2be40:	002097c0 	call	2097c <__udivsi3>
   2be44:	e009883a 	mov	r4,fp
   2be48:	b00b883a 	mov	r5,r22
   2be4c:	1039883a 	mov	fp,r2
   2be50:	00209e00 	call	209e0 <__umodsi3>
   2be54:	1004943a 	slli	r2,r2,16
   2be58:	9715383a 	mul	r10,r18,fp
   2be5c:	893fffcc 	andi	r4,r17,65535
   2be60:	2088b03a 	or	r4,r4,r2
   2be64:	d8c00017 	ldw	r3,0(sp)
   2be68:	2280042e 	bgeu	r4,r10,2be7c <__divdf3+0x270>
   2be6c:	2509883a 	add	r4,r4,r20
   2be70:	e0bfffc4 	addi	r2,fp,-1
   2be74:	2501242e 	bgeu	r4,r20,2c308 <__divdf3+0x6fc>
   2be78:	1039883a 	mov	fp,r2
   2be7c:	8020943a 	slli	r16,r16,16
   2be80:	b80cd43a 	srli	r6,r23,16
   2be84:	ba3fffcc 	andi	r8,r23,65535
   2be88:	8720b03a 	or	r16,r16,fp
   2be8c:	80bfffcc 	andi	r2,r16,65535
   2be90:	800ed43a 	srli	r7,r16,16
   2be94:	1213383a 	mul	r9,r2,r8
   2be98:	308b383a 	mul	r5,r6,r2
   2be9c:	3a17383a 	mul	r11,r7,r8
   2bea0:	4804d43a 	srli	r2,r9,16
   2bea4:	398f383a 	mul	r7,r7,r6
   2bea8:	2acb883a 	add	r5,r5,r11
   2beac:	1145883a 	add	r2,r2,r5
   2beb0:	2289c83a 	sub	r4,r4,r10
   2beb4:	12c0022e 	bgeu	r2,r11,2bec0 <__divdf3+0x2b4>
   2beb8:	01400074 	movhi	r5,1
   2bebc:	394f883a 	add	r7,r7,r5
   2bec0:	100ad43a 	srli	r5,r2,16
   2bec4:	1038943a 	slli	fp,r2,16
   2bec8:	4a7fffcc 	andi	r9,r9,65535
   2becc:	29c5883a 	add	r2,r5,r7
   2bed0:	e279883a 	add	fp,fp,r9
   2bed4:	20800236 	bltu	r4,r2,2bee0 <__divdf3+0x2d4>
   2bed8:	20800a1e 	bne	r4,r2,2bf04 <__divdf3+0x2f8>
   2bedc:	1f00092e 	bgeu	r3,fp,2bf04 <__divdf3+0x2f8>
   2bee0:	1dc7883a 	add	r3,r3,r23
   2bee4:	1dcb803a 	cmpltu	r5,r3,r23
   2bee8:	2d0b883a 	add	r5,r5,r20
   2beec:	2149883a 	add	r4,r4,r5
   2bef0:	817fffc4 	addi	r5,r16,-1
   2bef4:	a101012e 	bgeu	r20,r4,2c2fc <__divdf3+0x6f0>
   2bef8:	20813236 	bltu	r4,r2,2c3c4 <__divdf3+0x7b8>
   2befc:	11013026 	beq	r2,r4,2c3c0 <__divdf3+0x7b4>
   2bf00:	2821883a 	mov	r16,r5
   2bf04:	1f39c83a 	sub	fp,r3,fp
   2bf08:	2089c83a 	sub	r4,r4,r2
   2bf0c:	1f07803a 	cmpltu	r3,r3,fp
   2bf10:	da000115 	stw	r8,4(sp)
   2bf14:	d9800015 	stw	r6,0(sp)
   2bf18:	20e3c83a 	sub	r17,r4,r3
   2bf1c:	a4411726 	beq	r20,r17,2c37c <__divdf3+0x770>
   2bf20:	b00b883a 	mov	r5,r22
   2bf24:	8809883a 	mov	r4,r17
   2bf28:	002097c0 	call	2097c <__udivsi3>
   2bf2c:	8809883a 	mov	r4,r17
   2bf30:	b00b883a 	mov	r5,r22
   2bf34:	d8800215 	stw	r2,8(sp)
   2bf38:	00209e00 	call	209e0 <__umodsi3>
   2bf3c:	d9c00217 	ldw	r7,8(sp)
   2bf40:	1004943a 	slli	r2,r2,16
   2bf44:	e008d43a 	srli	r4,fp,16
   2bf48:	91c7383a 	mul	r3,r18,r7
   2bf4c:	d9800017 	ldw	r6,0(sp)
   2bf50:	2088b03a 	or	r4,r4,r2
   2bf54:	da000117 	ldw	r8,4(sp)
   2bf58:	20c0e136 	bltu	r4,r3,2c2e0 <__divdf3+0x6d4>
   2bf5c:	20e3c83a 	sub	r17,r4,r3
   2bf60:	8809883a 	mov	r4,r17
   2bf64:	b00b883a 	mov	r5,r22
   2bf68:	da000215 	stw	r8,8(sp)
   2bf6c:	d9c00115 	stw	r7,4(sp)
   2bf70:	d9800015 	stw	r6,0(sp)
   2bf74:	002097c0 	call	2097c <__udivsi3>
   2bf78:	8809883a 	mov	r4,r17
   2bf7c:	b00b883a 	mov	r5,r22
   2bf80:	1023883a 	mov	r17,r2
   2bf84:	00209e00 	call	209e0 <__umodsi3>
   2bf88:	1004943a 	slli	r2,r2,16
   2bf8c:	9465383a 	mul	r18,r18,r17
   2bf90:	e73fffcc 	andi	fp,fp,65535
   2bf94:	e0b8b03a 	or	fp,fp,r2
   2bf98:	d9800017 	ldw	r6,0(sp)
   2bf9c:	d9c00117 	ldw	r7,4(sp)
   2bfa0:	da000217 	ldw	r8,8(sp)
   2bfa4:	e480c736 	bltu	fp,r18,2c2c4 <__divdf3+0x6b8>
   2bfa8:	380e943a 	slli	r7,r7,16
   2bfac:	e4b9c83a 	sub	fp,fp,r18
   2bfb0:	3c4eb03a 	or	r7,r7,r17
   2bfb4:	38bfffcc 	andi	r2,r7,65535
   2bfb8:	380ad43a 	srli	r5,r7,16
   2bfbc:	4089383a 	mul	r4,r8,r2
   2bfc0:	3087383a 	mul	r3,r6,r2
   2bfc4:	2a11383a 	mul	r8,r5,r8
   2bfc8:	2004d43a 	srli	r2,r4,16
   2bfcc:	314d383a 	mul	r6,r6,r5
   2bfd0:	1a07883a 	add	r3,r3,r8
   2bfd4:	10c5883a 	add	r2,r2,r3
   2bfd8:	1200022e 	bgeu	r2,r8,2bfe4 <__divdf3+0x3d8>
   2bfdc:	00c00074 	movhi	r3,1
   2bfe0:	30cd883a 	add	r6,r6,r3
   2bfe4:	1006d43a 	srli	r3,r2,16
   2bfe8:	1004943a 	slli	r2,r2,16
   2bfec:	213fffcc 	andi	r4,r4,65535
   2bff0:	1987883a 	add	r3,r3,r6
   2bff4:	1105883a 	add	r2,r2,r4
   2bff8:	e0c08f36 	bltu	fp,r3,2c238 <__divdf3+0x62c>
   2bffc:	e0c08d26 	beq	fp,r3,2c234 <__divdf3+0x628>
   2c000:	39c00054 	ori	r7,r7,1
   2c004:	9940ffc4 	addi	r5,r19,1023
   2c008:	01405c0e 	bge	zero,r5,2c17c <__divdf3+0x570>
   2c00c:	388001cc 	andi	r2,r7,7
   2c010:	1000e21e 	bne	r2,zero,2c39c <__divdf3+0x790>
   2c014:	8080402c 	andhi	r2,r16,256
   2c018:	10000426 	beq	r2,zero,2c02c <__divdf3+0x420>
   2c01c:	00bfc034 	movhi	r2,65280
   2c020:	10bfffc4 	addi	r2,r2,-1
   2c024:	80a0703a 	and	r16,r16,r2
   2c028:	99410004 	addi	r5,r19,1024
   2c02c:	2881ffc8 	cmpgei	r2,r5,2047
   2c030:	103f5c1e 	bne	r2,zero,2bda4 <__divdf3+0x198>
   2c034:	380ed0fa 	srli	r7,r7,3
   2c038:	8028977a 	slli	r20,r16,29
   2c03c:	8008927a 	slli	r4,r16,9
   2c040:	2941ffcc 	andi	r5,r5,2047
   2c044:	a1e8b03a 	or	r20,r20,r7
   2c048:	2008d33a 	srli	r4,r4,12
   2c04c:	003f4406 	br	2bd60 <__divdf3+0x154>
   2c050:	854eb03a 	or	r7,r16,r21
   2c054:	38003e26 	beq	r7,zero,2c150 <__divdf3+0x544>
   2c058:	80008f26 	beq	r16,zero,2c298 <__divdf3+0x68c>
   2c05c:	8009883a 	mov	r4,r16
   2c060:	002d96c0 	call	2d96c <__clzsi2>
   2c064:	113ffd44 	addi	r4,r2,-11
   2c068:	00c00744 	movi	r3,29
   2c06c:	11fffe04 	addi	r7,r2,-8
   2c070:	1907c83a 	sub	r3,r3,r4
   2c074:	81e0983a 	sll	r16,r16,r7
   2c078:	a8c6d83a 	srl	r3,r21,r3
   2c07c:	a9ce983a 	sll	r7,r21,r7
   2c080:	1c20b03a 	or	r16,r3,r16
   2c084:	14c5883a 	add	r2,r2,r19
   2c088:	14c0fcc4 	addi	r19,r2,1011
   2c08c:	0007883a 	mov	r3,zero
   2c090:	003f0e06 	br	2bccc <__divdf3+0xc0>
   2c094:	2464b03a 	or	r18,r4,r17
   2c098:	2027883a 	mov	r19,r4
   2c09c:	90002726 	beq	r18,zero,2c13c <__divdf3+0x530>
   2c0a0:	88007326 	beq	r17,zero,2c270 <__divdf3+0x664>
   2c0a4:	8809883a 	mov	r4,r17
   2c0a8:	002d96c0 	call	2d96c <__clzsi2>
   2c0ac:	10fffd44 	addi	r3,r2,-11
   2c0b0:	01000744 	movi	r4,29
   2c0b4:	153ffe04 	addi	r20,r2,-8
   2c0b8:	20c9c83a 	sub	r4,r4,r3
   2c0bc:	8d0a983a 	sll	r5,r17,r20
   2c0c0:	9908d83a 	srl	r4,r19,r4
   2c0c4:	9d28983a 	sll	r20,r19,r20
   2c0c8:	2164b03a 	or	r18,r4,r5
   2c0cc:	00ff0344 	movi	r3,-1011
   2c0d0:	18a7c83a 	sub	r19,r3,r2
   2c0d4:	0023883a 	mov	r17,zero
   2c0d8:	0039883a 	mov	fp,zero
   2c0dc:	003eea06 	br	2bc88 <__divdf3+0x7c>
   2c0e0:	2464b03a 	or	r18,r4,r17
   2c0e4:	9000101e 	bne	r18,zero,2c128 <__divdf3+0x51c>
   2c0e8:	0029883a 	mov	r20,zero
   2c0ec:	04400204 	movi	r17,8
   2c0f0:	04c1ffc4 	movi	r19,2047
   2c0f4:	07000084 	movi	fp,2
   2c0f8:	003ee306 	br	2bc88 <__divdf3+0x7c>
   2c0fc:	854eb03a 	or	r7,r16,r21
   2c100:	9cfe0044 	addi	r19,r19,-2047
   2c104:	3800041e 	bne	r7,zero,2c118 <__divdf3+0x50c>
   2c108:	8c400094 	ori	r17,r17,2
   2c10c:	0021883a 	mov	r16,zero
   2c110:	00c00084 	movi	r3,2
   2c114:	003eed06 	br	2bccc <__divdf3+0xc0>
   2c118:	8c4000d4 	ori	r17,r17,3
   2c11c:	a80f883a 	mov	r7,r21
   2c120:	00c000c4 	movi	r3,3
   2c124:	003ee906 	br	2bccc <__divdf3+0xc0>
   2c128:	8825883a 	mov	r18,r17
   2c12c:	04c1ffc4 	movi	r19,2047
   2c130:	04400304 	movi	r17,12
   2c134:	070000c4 	movi	fp,3
   2c138:	003ed306 	br	2bc88 <__divdf3+0x7c>
   2c13c:	0029883a 	mov	r20,zero
   2c140:	04400104 	movi	r17,4
   2c144:	0027883a 	mov	r19,zero
   2c148:	07000044 	movi	fp,1
   2c14c:	003ece06 	br	2bc88 <__divdf3+0x7c>
   2c150:	8c400054 	ori	r17,r17,1
   2c154:	0021883a 	mov	r16,zero
   2c158:	00c00044 	movi	r3,1
   2c15c:	003edb06 	br	2bccc <__divdf3+0xc0>
   2c160:	01000434 	movhi	r4,16
   2c164:	002b883a 	mov	r21,zero
   2c168:	213fffc4 	addi	r4,r4,-1
   2c16c:	053fffc4 	movi	r20,-1
   2c170:	0141ffc4 	movi	r5,2047
   2c174:	003efa06 	br	2bd60 <__divdf3+0x154>
   2c178:	01ffffc4 	movi	r7,-1
   2c17c:	00800044 	movi	r2,1
   2c180:	1145c83a 	sub	r2,r2,r5
   2c184:	10c00e48 	cmpgei	r3,r2,57
   2c188:	183ef21e 	bne	r3,zero,2bd54 <__divdf3+0x148>
   2c18c:	10c00808 	cmpgei	r3,r2,32
   2c190:	1800651e 	bne	r3,zero,2c328 <__divdf3+0x71c>
   2c194:	98c10784 	addi	r3,r19,1054
   2c198:	80e8983a 	sll	r20,r16,r3
   2c19c:	3888d83a 	srl	r4,r7,r2
   2c1a0:	38c6983a 	sll	r3,r7,r3
   2c1a4:	80a0d83a 	srl	r16,r16,r2
   2c1a8:	a128b03a 	or	r20,r20,r4
   2c1ac:	1806c03a 	cmpne	r3,r3,zero
   2c1b0:	a0e8b03a 	or	r20,r20,r3
   2c1b4:	a08001cc 	andi	r2,r20,7
   2c1b8:	10000726 	beq	r2,zero,2c1d8 <__divdf3+0x5cc>
   2c1bc:	a08003cc 	andi	r2,r20,15
   2c1c0:	10800120 	cmpeqi	r2,r2,4
   2c1c4:	1000041e 	bne	r2,zero,2c1d8 <__divdf3+0x5cc>
   2c1c8:	a0800104 	addi	r2,r20,4
   2c1cc:	1529803a 	cmpltu	r20,r2,r20
   2c1d0:	8521883a 	add	r16,r16,r20
   2c1d4:	1029883a 	mov	r20,r2
   2c1d8:	8080202c 	andhi	r2,r16,128
   2c1dc:	10008d26 	beq	r2,zero,2c414 <__divdf3+0x808>
   2c1e0:	01400044 	movi	r5,1
   2c1e4:	0009883a 	mov	r4,zero
   2c1e8:	0029883a 	mov	r20,zero
   2c1ec:	003edc06 	br	2bd60 <__divdf3+0x154>
   2c1f0:	9080022c 	andhi	r2,r18,8
   2c1f4:	10000926 	beq	r2,zero,2c21c <__divdf3+0x610>
   2c1f8:	8080022c 	andhi	r2,r16,8
   2c1fc:	1000071e 	bne	r2,zero,2c21c <__divdf3+0x610>
   2c200:	00800434 	movhi	r2,16
   2c204:	81000234 	orhi	r4,r16,8
   2c208:	10bfffc4 	addi	r2,r2,-1
   2c20c:	2088703a 	and	r4,r4,r2
   2c210:	b82b883a 	mov	r21,r23
   2c214:	3829883a 	mov	r20,r7
   2c218:	003fd506 	br	2c170 <__divdf3+0x564>
   2c21c:	00800434 	movhi	r2,16
   2c220:	91000234 	orhi	r4,r18,8
   2c224:	10bfffc4 	addi	r2,r2,-1
   2c228:	2088703a 	and	r4,r4,r2
   2c22c:	b02b883a 	mov	r21,r22
   2c230:	003fcf06 	br	2c170 <__divdf3+0x564>
   2c234:	103f7326 	beq	r2,zero,2c004 <__divdf3+0x3f8>
   2c238:	a739883a 	add	fp,r20,fp
   2c23c:	393fffc4 	addi	r4,r7,-1
   2c240:	e5004a36 	bltu	fp,r20,2c36c <__divdf3+0x760>
   2c244:	e0c06536 	bltu	fp,r3,2c3dc <__divdf3+0x7d0>
   2c248:	e0c07c26 	beq	fp,r3,2c43c <__divdf3+0x830>
   2c24c:	200f883a 	mov	r7,r4
   2c250:	003f6b06 	br	2c000 <__divdf3+0x3f4>
   2c254:	a1fedb36 	bltu	r20,r7,2bdc4 <__divdf3+0x1b8>
   2c258:	902297fa 	slli	r17,r18,31
   2c25c:	a004d07a 	srli	r2,r20,1
   2c260:	9024d07a 	srli	r18,r18,1
   2c264:	a00697fa 	slli	r3,r20,31
   2c268:	88a2b03a 	or	r17,r17,r2
   2c26c:	003ed806 	br	2bdd0 <__divdf3+0x1c4>
   2c270:	002d96c0 	call	2d96c <__clzsi2>
   2c274:	10c00544 	addi	r3,r2,21
   2c278:	19400748 	cmpgei	r5,r3,29
   2c27c:	1009883a 	mov	r4,r2
   2c280:	10800804 	addi	r2,r2,32
   2c284:	283f8a26 	beq	r5,zero,2c0b0 <__divdf3+0x4a4>
   2c288:	213ffe04 	addi	r4,r4,-8
   2c28c:	a124983a 	sll	r18,r20,r4
   2c290:	0029883a 	mov	r20,zero
   2c294:	003f8d06 	br	2c0cc <__divdf3+0x4c0>
   2c298:	a809883a 	mov	r4,r21
   2c29c:	002d96c0 	call	2d96c <__clzsi2>
   2c2a0:	11000544 	addi	r4,r2,21
   2c2a4:	21400748 	cmpgei	r5,r4,29
   2c2a8:	1007883a 	mov	r3,r2
   2c2ac:	10800804 	addi	r2,r2,32
   2c2b0:	283f6d26 	beq	r5,zero,2c068 <__divdf3+0x45c>
   2c2b4:	18fffe04 	addi	r3,r3,-8
   2c2b8:	a8e0983a 	sll	r16,r21,r3
   2c2bc:	000f883a 	mov	r7,zero
   2c2c0:	003f7006 	br	2c084 <__divdf3+0x478>
   2c2c4:	e539883a 	add	fp,fp,r20
   2c2c8:	88bfffc4 	addi	r2,r17,-1
   2c2cc:	e5003a36 	bltu	fp,r20,2c3b8 <__divdf3+0x7ac>
   2c2d0:	e480392e 	bgeu	fp,r18,2c3b8 <__divdf3+0x7ac>
   2c2d4:	8c7fff84 	addi	r17,r17,-2
   2c2d8:	e539883a 	add	fp,fp,r20
   2c2dc:	003f3206 	br	2bfa8 <__divdf3+0x39c>
   2c2e0:	2509883a 	add	r4,r4,r20
   2c2e4:	38bfffc4 	addi	r2,r7,-1
   2c2e8:	25003136 	bltu	r4,r20,2c3b0 <__divdf3+0x7a4>
   2c2ec:	20c0302e 	bgeu	r4,r3,2c3b0 <__divdf3+0x7a4>
   2c2f0:	39ffff84 	addi	r7,r7,-2
   2c2f4:	2509883a 	add	r4,r4,r20
   2c2f8:	003f1806 	br	2bf5c <__divdf3+0x350>
   2c2fc:	a13f001e 	bne	r20,r4,2bf00 <__divdf3+0x2f4>
   2c300:	1dfeff36 	bltu	r3,r23,2bf00 <__divdf3+0x2f4>
   2c304:	003efc06 	br	2bef8 <__divdf3+0x2ec>
   2c308:	22bedb2e 	bgeu	r4,r10,2be78 <__divdf3+0x26c>
   2c30c:	e73fff84 	addi	fp,fp,-2
   2c310:	2509883a 	add	r4,r4,r20
   2c314:	003ed906 	br	2be7c <__divdf3+0x270>
   2c318:	217ec42e 	bgeu	r4,r5,2be2c <__divdf3+0x220>
   2c31c:	843fff84 	addi	r16,r16,-2
   2c320:	2509883a 	add	r4,r4,r20
   2c324:	003ec206 	br	2be30 <__divdf3+0x224>
   2c328:	013ff844 	movi	r4,-31
   2c32c:	2149c83a 	sub	r4,r4,r5
   2c330:	10800820 	cmpeqi	r2,r2,32
   2c334:	8108d83a 	srl	r4,r16,r4
   2c338:	1000031e 	bne	r2,zero,2c348 <__divdf3+0x73c>
   2c33c:	98c10f84 	addi	r3,r19,1086
   2c340:	80c6983a 	sll	r3,r16,r3
   2c344:	38ceb03a 	or	r7,r7,r3
   2c348:	3828c03a 	cmpne	r20,r7,zero
   2c34c:	a128b03a 	or	r20,r20,r4
   2c350:	a40001cc 	andi	r16,r20,7
   2c354:	8000291e 	bne	r16,zero,2c3fc <__divdf3+0x7f0>
   2c358:	0009883a 	mov	r4,zero
   2c35c:	a028d0fa 	srli	r20,r20,3
   2c360:	000b883a 	mov	r5,zero
   2c364:	a428b03a 	or	r20,r20,r16
   2c368:	003e7d06 	br	2bd60 <__divdf3+0x154>
   2c36c:	200f883a 	mov	r7,r4
   2c370:	e0ff231e 	bne	fp,r3,2c000 <__divdf3+0x3f4>
   2c374:	15ff221e 	bne	r2,r23,2c000 <__divdf3+0x3f4>
   2c378:	003f2206 	br	2c004 <__divdf3+0x3f8>
   2c37c:	98bf0088 	cmpgei	r2,r19,-1022
   2c380:	9940ffc4 	addi	r5,r19,1023
   2c384:	103f7c26 	beq	r2,zero,2c178 <__divdf3+0x56c>
   2c388:	00bfffc4 	movi	r2,-1
   2c38c:	11c00104 	addi	r7,r2,4
   2c390:	3885803a 	cmpltu	r2,r7,r2
   2c394:	80a1883a 	add	r16,r16,r2
   2c398:	003f1e06 	br	2c014 <__divdf3+0x408>
   2c39c:	388003cc 	andi	r2,r7,15
   2c3a0:	10800120 	cmpeqi	r2,r2,4
   2c3a4:	103f1b1e 	bne	r2,zero,2c014 <__divdf3+0x408>
   2c3a8:	3805883a 	mov	r2,r7
   2c3ac:	003ff706 	br	2c38c <__divdf3+0x780>
   2c3b0:	100f883a 	mov	r7,r2
   2c3b4:	003ee906 	br	2bf5c <__divdf3+0x350>
   2c3b8:	1023883a 	mov	r17,r2
   2c3bc:	003efa06 	br	2bfa8 <__divdf3+0x39c>
   2c3c0:	1f3ecf2e 	bgeu	r3,fp,2bf00 <__divdf3+0x2f4>
   2c3c4:	1dc7883a 	add	r3,r3,r23
   2c3c8:	1dcb803a 	cmpltu	r5,r3,r23
   2c3cc:	2d0b883a 	add	r5,r5,r20
   2c3d0:	843fff84 	addi	r16,r16,-2
   2c3d4:	2149883a 	add	r4,r4,r5
   2c3d8:	003eca06 	br	2bf04 <__divdf3+0x2f8>
   2c3dc:	bdc9883a 	add	r4,r23,r23
   2c3e0:	25ef803a 	cmpltu	r23,r4,r23
   2c3e4:	bd2f883a 	add	r23,r23,r20
   2c3e8:	e5f9883a 	add	fp,fp,r23
   2c3ec:	39ffff84 	addi	r7,r7,-2
   2c3f0:	202f883a 	mov	r23,r4
   2c3f4:	e0ffdf26 	beq	fp,r3,2c374 <__divdf3+0x768>
   2c3f8:	003f0106 	br	2c000 <__divdf3+0x3f4>
   2c3fc:	a08003cc 	andi	r2,r20,15
   2c400:	10800120 	cmpeqi	r2,r2,4
   2c404:	1000111e 	bne	r2,zero,2c44c <__divdf3+0x840>
   2c408:	a0800104 	addi	r2,r20,4
   2c40c:	1521803a 	cmpltu	r16,r2,r20
   2c410:	1029883a 	mov	r20,r2
   2c414:	8008927a 	slli	r4,r16,9
   2c418:	8020977a 	slli	r16,r16,29
   2c41c:	2008d33a 	srli	r4,r4,12
   2c420:	003fce06 	br	2c35c <__divdf3+0x750>
   2c424:	00800434 	movhi	r2,16
   2c428:	81000234 	orhi	r4,r16,8
   2c42c:	10bfffc4 	addi	r2,r2,-1
   2c430:	2088703a 	and	r4,r4,r2
   2c434:	3829883a 	mov	r20,r7
   2c438:	003f4d06 	br	2c170 <__divdf3+0x564>
   2c43c:	b8bfe736 	bltu	r23,r2,2c3dc <__divdf3+0x7d0>
   2c440:	200f883a 	mov	r7,r4
   2c444:	15feee1e 	bne	r2,r23,2c000 <__divdf3+0x3f4>
   2c448:	003eee06 	br	2c004 <__divdf3+0x3f8>
   2c44c:	0021883a 	mov	r16,zero
   2c450:	003ff006 	br	2c414 <__divdf3+0x808>

0002c454 <__eqdf2>:
   2c454:	2810d53a 	srli	r8,r5,20
   2c458:	3804d53a 	srli	r2,r7,20
   2c45c:	00c00434 	movhi	r3,16
   2c460:	4201ffcc 	andi	r8,r8,2047
   2c464:	18ffffc4 	addi	r3,r3,-1
   2c468:	4241ffe0 	cmpeqi	r9,r8,2047
   2c46c:	2816d7fa 	srli	r11,r5,31
   2c470:	3814d7fa 	srli	r10,r7,31
   2c474:	28ca703a 	and	r5,r5,r3
   2c478:	38ce703a 	and	r7,r7,r3
   2c47c:	1081ffcc 	andi	r2,r2,2047
   2c480:	4800061e 	bne	r9,zero,2c49c <__eqdf2+0x48>
   2c484:	10c1ffe0 	cmpeqi	r3,r2,2047
   2c488:	1800061e 	bne	r3,zero,2c4a4 <__eqdf2+0x50>
   2c48c:	4080051e 	bne	r8,r2,2c4a4 <__eqdf2+0x50>
   2c490:	00800044 	movi	r2,1
   2c494:	29c00b26 	beq	r5,r7,2c4c4 <__eqdf2+0x70>
   2c498:	f800283a 	ret
   2c49c:	1081ffd8 	cmpnei	r2,r2,2047
   2c4a0:	10000226 	beq	r2,zero,2c4ac <__eqdf2+0x58>
   2c4a4:	00800044 	movi	r2,1
   2c4a8:	f800283a 	ret
   2c4ac:	29cab03a 	or	r5,r5,r7
   2c4b0:	2984b03a 	or	r2,r5,r6
   2c4b4:	1104b03a 	or	r2,r2,r4
   2c4b8:	103ffa1e 	bne	r2,zero,2c4a4 <__eqdf2+0x50>
   2c4bc:	5a84c03a 	cmpne	r2,r11,r10
   2c4c0:	f800283a 	ret
   2c4c4:	21800126 	beq	r4,r6,2c4cc <__eqdf2+0x78>
   2c4c8:	f800283a 	ret
   2c4cc:	5a800426 	beq	r11,r10,2c4e0 <__eqdf2+0x8c>
   2c4d0:	403ffd1e 	bne	r8,zero,2c4c8 <__eqdf2+0x74>
   2c4d4:	290ab03a 	or	r5,r5,r4
   2c4d8:	2804c03a 	cmpne	r2,r5,zero
   2c4dc:	f800283a 	ret
   2c4e0:	0005883a 	mov	r2,zero
   2c4e4:	003ff806 	br	2c4c8 <__eqdf2+0x74>

0002c4e8 <__gedf2>:
   2c4e8:	2810d53a 	srli	r8,r5,20
   2c4ec:	3812d53a 	srli	r9,r7,20
   2c4f0:	00c00434 	movhi	r3,16
   2c4f4:	4201ffcc 	andi	r8,r8,2047
   2c4f8:	18ffffc4 	addi	r3,r3,-1
   2c4fc:	4281ffd8 	cmpnei	r10,r8,2047
   2c500:	2816d7fa 	srli	r11,r5,31
   2c504:	3804d7fa 	srli	r2,r7,31
   2c508:	28ca703a 	and	r5,r5,r3
   2c50c:	38ce703a 	and	r7,r7,r3
   2c510:	48c1ffcc 	andi	r3,r9,2047
   2c514:	50001426 	beq	r10,zero,2c568 <__gedf2+0x80>
   2c518:	1a41ffd8 	cmpnei	r9,r3,2047
   2c51c:	48000926 	beq	r9,zero,2c544 <__gedf2+0x5c>
   2c520:	40001b1e 	bne	r8,zero,2c590 <__gedf2+0xa8>
   2c524:	2910b03a 	or	r8,r5,r4
   2c528:	1800161e 	bne	r3,zero,2c584 <__gedf2+0x9c>
   2c52c:	3986b03a 	or	r3,r7,r6
   2c530:	18002126 	beq	r3,zero,2c5b8 <__gedf2+0xd0>
   2c534:	4000291e 	bne	r8,zero,2c5dc <__gedf2+0xf4>
   2c538:	1000111e 	bne	r2,zero,2c580 <__gedf2+0x98>
   2c53c:	00bfffc4 	movi	r2,-1
   2c540:	f800283a 	ret
   2c544:	398eb03a 	or	r7,r7,r6
   2c548:	3800221e 	bne	r7,zero,2c5d4 <__gedf2+0xec>
   2c54c:	4000021e 	bne	r8,zero,2c558 <__gedf2+0x70>
   2c550:	2908b03a 	or	r4,r5,r4
   2c554:	203ff826 	beq	r4,zero,2c538 <__gedf2+0x50>
   2c558:	5880071e 	bne	r11,r2,2c578 <__gedf2+0x90>
   2c55c:	583ff726 	beq	r11,zero,2c53c <__gedf2+0x54>
   2c560:	5805883a 	mov	r2,r11
   2c564:	f800283a 	ret
   2c568:	290ab03a 	or	r5,r5,r4
   2c56c:	2800191e 	bne	r5,zero,2c5d4 <__gedf2+0xec>
   2c570:	1901ffe0 	cmpeqi	r4,r3,2047
   2c574:	2000131e 	bne	r4,zero,2c5c4 <__gedf2+0xdc>
   2c578:	00800044 	movi	r2,1
   2c57c:	583fef1e 	bne	r11,zero,2c53c <__gedf2+0x54>
   2c580:	f800283a 	ret
   2c584:	403ff41e 	bne	r8,zero,2c558 <__gedf2+0x70>
   2c588:	103ffd1e 	bne	r2,zero,2c580 <__gedf2+0x98>
   2c58c:	003feb06 	br	2c53c <__gedf2+0x54>
   2c590:	183ff926 	beq	r3,zero,2c578 <__gedf2+0x90>
   2c594:	58bff81e 	bne	r11,r2,2c578 <__gedf2+0x90>
   2c598:	1a3ff716 	blt	r3,r8,2c578 <__gedf2+0x90>
   2c59c:	40ffef16 	blt	r8,r3,2c55c <__gedf2+0x74>
   2c5a0:	397ff536 	bltu	r7,r5,2c578 <__gedf2+0x90>
   2c5a4:	29ffed1e 	bne	r5,r7,2c55c <__gedf2+0x74>
   2c5a8:	313ff336 	bltu	r6,r4,2c578 <__gedf2+0x90>
   2c5ac:	21bfeb36 	bltu	r4,r6,2c55c <__gedf2+0x74>
   2c5b0:	0005883a 	mov	r2,zero
   2c5b4:	f800283a 	ret
   2c5b8:	0005883a 	mov	r2,zero
   2c5bc:	403fee1e 	bne	r8,zero,2c578 <__gedf2+0x90>
   2c5c0:	f800283a 	ret
   2c5c4:	398eb03a 	or	r7,r7,r6
   2c5c8:	3800021e 	bne	r7,zero,2c5d4 <__gedf2+0xec>
   2c5cc:	58bff826 	beq	r11,r2,2c5b0 <__gedf2+0xc8>
   2c5d0:	003fe906 	br	2c578 <__gedf2+0x90>
   2c5d4:	00bfff84 	movi	r2,-2
   2c5d8:	f800283a 	ret
   2c5dc:	58bff026 	beq	r11,r2,2c5a0 <__gedf2+0xb8>
   2c5e0:	003fe506 	br	2c578 <__gedf2+0x90>

0002c5e4 <__ledf2>:
   2c5e4:	2810d53a 	srli	r8,r5,20
   2c5e8:	3812d53a 	srli	r9,r7,20
   2c5ec:	00c00434 	movhi	r3,16
   2c5f0:	4201ffcc 	andi	r8,r8,2047
   2c5f4:	18ffffc4 	addi	r3,r3,-1
   2c5f8:	4281ffd8 	cmpnei	r10,r8,2047
   2c5fc:	2816d7fa 	srli	r11,r5,31
   2c600:	3804d7fa 	srli	r2,r7,31
   2c604:	28ca703a 	and	r5,r5,r3
   2c608:	38ce703a 	and	r7,r7,r3
   2c60c:	48c1ffcc 	andi	r3,r9,2047
   2c610:	50001426 	beq	r10,zero,2c664 <__ledf2+0x80>
   2c614:	1a41ffd8 	cmpnei	r9,r3,2047
   2c618:	48000926 	beq	r9,zero,2c640 <__ledf2+0x5c>
   2c61c:	4000191e 	bne	r8,zero,2c684 <__ledf2+0xa0>
   2c620:	2910b03a 	or	r8,r5,r4
   2c624:	1800221e 	bne	r3,zero,2c6b0 <__ledf2+0xcc>
   2c628:	3986b03a 	or	r3,r7,r6
   2c62c:	18002326 	beq	r3,zero,2c6bc <__ledf2+0xd8>
   2c630:	4000281e 	bne	r8,zero,2c6d4 <__ledf2+0xf0>
   2c634:	10000a1e 	bne	r2,zero,2c660 <__ledf2+0x7c>
   2c638:	00bfffc4 	movi	r2,-1
   2c63c:	f800283a 	ret
   2c640:	398eb03a 	or	r7,r7,r6
   2c644:	38000d1e 	bne	r7,zero,2c67c <__ledf2+0x98>
   2c648:	4000021e 	bne	r8,zero,2c654 <__ledf2+0x70>
   2c64c:	290ab03a 	or	r5,r5,r4
   2c650:	283ff826 	beq	r5,zero,2c634 <__ledf2+0x50>
   2c654:	58801326 	beq	r11,r2,2c6a4 <__ledf2+0xc0>
   2c658:	00800044 	movi	r2,1
   2c65c:	583ff61e 	bne	r11,zero,2c638 <__ledf2+0x54>
   2c660:	f800283a 	ret
   2c664:	290ab03a 	or	r5,r5,r4
   2c668:	2800041e 	bne	r5,zero,2c67c <__ledf2+0x98>
   2c66c:	1901ffe0 	cmpeqi	r4,r3,2047
   2c670:	203ff926 	beq	r4,zero,2c658 <__ledf2+0x74>
   2c674:	398eb03a 	or	r7,r7,r6
   2c678:	38001326 	beq	r7,zero,2c6c8 <__ledf2+0xe4>
   2c67c:	00800084 	movi	r2,2
   2c680:	f800283a 	ret
   2c684:	183ff426 	beq	r3,zero,2c658 <__ledf2+0x74>
   2c688:	58bff31e 	bne	r11,r2,2c658 <__ledf2+0x74>
   2c68c:	1a3ff216 	blt	r3,r8,2c658 <__ledf2+0x74>
   2c690:	40c00416 	blt	r8,r3,2c6a4 <__ledf2+0xc0>
   2c694:	397ff036 	bltu	r7,r5,2c658 <__ledf2+0x74>
   2c698:	29c0021e 	bne	r5,r7,2c6a4 <__ledf2+0xc0>
   2c69c:	313fee36 	bltu	r6,r4,2c658 <__ledf2+0x74>
   2c6a0:	21800a2e 	bgeu	r4,r6,2c6cc <__ledf2+0xe8>
   2c6a4:	583fe426 	beq	r11,zero,2c638 <__ledf2+0x54>
   2c6a8:	5805883a 	mov	r2,r11
   2c6ac:	f800283a 	ret
   2c6b0:	403fe81e 	bne	r8,zero,2c654 <__ledf2+0x70>
   2c6b4:	103fea1e 	bne	r2,zero,2c660 <__ledf2+0x7c>
   2c6b8:	003fdf06 	br	2c638 <__ledf2+0x54>
   2c6bc:	0005883a 	mov	r2,zero
   2c6c0:	403fe726 	beq	r8,zero,2c660 <__ledf2+0x7c>
   2c6c4:	003fe406 	br	2c658 <__ledf2+0x74>
   2c6c8:	58bfe31e 	bne	r11,r2,2c658 <__ledf2+0x74>
   2c6cc:	0005883a 	mov	r2,zero
   2c6d0:	f800283a 	ret
   2c6d4:	58bfef26 	beq	r11,r2,2c694 <__ledf2+0xb0>
   2c6d8:	003fdf06 	br	2c658 <__ledf2+0x74>

0002c6dc <__muldf3>:
   2c6dc:	defff304 	addi	sp,sp,-52
   2c6e0:	2804d53a 	srli	r2,r5,20
   2c6e4:	df000b15 	stw	fp,44(sp)
   2c6e8:	2838d7fa 	srli	fp,r5,31
   2c6ec:	00c00434 	movhi	r3,16
   2c6f0:	ddc00a15 	stw	r23,40(sp)
   2c6f4:	dd400815 	stw	r21,32(sp)
   2c6f8:	dc400415 	stw	r17,16(sp)
   2c6fc:	dc000315 	stw	r16,12(sp)
   2c700:	18ffffc4 	addi	r3,r3,-1
   2c704:	dfc00c15 	stw	ra,48(sp)
   2c708:	dd800915 	stw	r22,36(sp)
   2c70c:	dd000715 	stw	r20,28(sp)
   2c710:	dcc00615 	stw	r19,24(sp)
   2c714:	dc800515 	stw	r18,20(sp)
   2c718:	1081ffcc 	andi	r2,r2,2047
   2c71c:	2021883a 	mov	r16,r4
   2c720:	382f883a 	mov	r23,r7
   2c724:	28e2703a 	and	r17,r5,r3
   2c728:	e02b883a 	mov	r21,fp
   2c72c:	10009126 	beq	r2,zero,2c974 <__muldf3+0x298>
   2c730:	10c1ffe0 	cmpeqi	r3,r2,2047
   2c734:	1800a41e 	bne	r3,zero,2c9c8 <__muldf3+0x2ec>
   2c738:	882290fa 	slli	r17,r17,3
   2c73c:	2006d77a 	srli	r3,r4,29
   2c740:	202890fa 	slli	r20,r4,3
   2c744:	14ff0044 	addi	r19,r2,-1023
   2c748:	1c62b03a 	or	r17,r3,r17
   2c74c:	8c402034 	orhi	r17,r17,128
   2c750:	0025883a 	mov	r18,zero
   2c754:	000f883a 	mov	r7,zero
   2c758:	b804d53a 	srli	r2,r23,20
   2c75c:	04000434 	movhi	r16,16
   2c760:	843fffc4 	addi	r16,r16,-1
   2c764:	1081ffcc 	andi	r2,r2,2047
   2c768:	b80ad7fa 	srli	r5,r23,31
   2c76c:	302d883a 	mov	r22,r6
   2c770:	bc20703a 	and	r16,r23,r16
   2c774:	10006526 	beq	r2,zero,2c90c <__muldf3+0x230>
   2c778:	10c1ffe0 	cmpeqi	r3,r2,2047
   2c77c:	1800291e 	bne	r3,zero,2c824 <__muldf3+0x148>
   2c780:	3006d77a 	srli	r3,r6,29
   2c784:	800890fa 	slli	r4,r16,3
   2c788:	10bf0044 	addi	r2,r2,-1023
   2c78c:	14c5883a 	add	r2,r2,r19
   2c790:	1920b03a 	or	r16,r3,r4
   2c794:	90c002c8 	cmpgei	r3,r18,11
   2c798:	302c90fa 	slli	r22,r6,3
   2c79c:	84002034 	orhi	r16,r16,128
   2c7a0:	0009883a 	mov	r4,zero
   2c7a4:	14c00044 	addi	r19,r2,1
   2c7a8:	18002c1e 	bne	r3,zero,2c85c <__muldf3+0x180>
   2c7ac:	2f2af03a 	xor	r21,r5,fp
   2c7b0:	90c000c8 	cmpgei	r3,r18,3
   2c7b4:	1800251e 	bne	r3,zero,2c84c <__muldf3+0x170>
   2c7b8:	94bfffc4 	addi	r18,r18,-1
   2c7bc:	948000a8 	cmpgeui	r18,r18,2
   2c7c0:	9000cb1e 	bne	r18,zero,2caf0 <__muldf3+0x414>
   2c7c4:	208000a0 	cmpeqi	r2,r4,2
   2c7c8:	1000861e 	bne	r2,zero,2c9e4 <__muldf3+0x308>
   2c7cc:	21000060 	cmpeqi	r4,r4,1
   2c7d0:	20002b26 	beq	r4,zero,2c880 <__muldf3+0x1a4>
   2c7d4:	0009883a 	mov	r4,zero
   2c7d8:	0021883a 	mov	r16,zero
   2c7dc:	0029883a 	mov	r20,zero
   2c7e0:	2006953a 	slli	r3,r4,20
   2c7e4:	a82a97fa 	slli	r21,r21,31
   2c7e8:	a005883a 	mov	r2,r20
   2c7ec:	1c06b03a 	or	r3,r3,r16
   2c7f0:	1d46b03a 	or	r3,r3,r21
   2c7f4:	dfc00c17 	ldw	ra,48(sp)
   2c7f8:	df000b17 	ldw	fp,44(sp)
   2c7fc:	ddc00a17 	ldw	r23,40(sp)
   2c800:	dd800917 	ldw	r22,36(sp)
   2c804:	dd400817 	ldw	r21,32(sp)
   2c808:	dd000717 	ldw	r20,28(sp)
   2c80c:	dcc00617 	ldw	r19,24(sp)
   2c810:	dc800517 	ldw	r18,20(sp)
   2c814:	dc400417 	ldw	r17,16(sp)
   2c818:	dc000317 	ldw	r16,12(sp)
   2c81c:	dec00d04 	addi	sp,sp,52
   2c820:	f800283a 	ret
   2c824:	8186b03a 	or	r3,r16,r6
   2c828:	9881ffc4 	addi	r2,r19,2047
   2c82c:	18007726 	beq	r3,zero,2ca0c <__muldf3+0x330>
   2c830:	948000d4 	ori	r18,r18,3
   2c834:	90c002c8 	cmpgei	r3,r18,11
   2c838:	2f38f03a 	xor	fp,r5,fp
   2c83c:	9cc20004 	addi	r19,r19,2048
   2c840:	1801501e 	bne	r3,zero,2cd84 <__muldf3+0x6a8>
   2c844:	e02b883a 	mov	r21,fp
   2c848:	010000c4 	movi	r4,3
   2c84c:	00c00044 	movi	r3,1
   2c850:	1c86983a 	sll	r3,r3,r18
   2c854:	19814c0c 	andi	r6,r3,1328
   2c858:	30002326 	beq	r6,zero,2c8e8 <__muldf3+0x20c>
   2c85c:	388000a0 	cmpeqi	r2,r7,2
   2c860:	1000601e 	bne	r2,zero,2c9e4 <__muldf3+0x308>
   2c864:	388000e0 	cmpeqi	r2,r7,3
   2c868:	10010b1e 	bne	r2,zero,2cc98 <__muldf3+0x5bc>
   2c86c:	3809883a 	mov	r4,r7
   2c870:	21000060 	cmpeqi	r4,r4,1
   2c874:	8821883a 	mov	r16,r17
   2c878:	a02d883a 	mov	r22,r20
   2c87c:	203fd51e 	bne	r4,zero,2c7d4 <__muldf3+0xf8>
   2c880:	98c0ffc4 	addi	r3,r19,1023
   2c884:	00c07d0e 	bge	zero,r3,2ca7c <__muldf3+0x3a0>
   2c888:	b08001cc 	andi	r2,r22,7
   2c88c:	10000726 	beq	r2,zero,2c8ac <__muldf3+0x1d0>
   2c890:	b08003cc 	andi	r2,r22,15
   2c894:	10800120 	cmpeqi	r2,r2,4
   2c898:	1000041e 	bne	r2,zero,2c8ac <__muldf3+0x1d0>
   2c89c:	b0800104 	addi	r2,r22,4
   2c8a0:	15ad803a 	cmpltu	r22,r2,r22
   2c8a4:	85a1883a 	add	r16,r16,r22
   2c8a8:	102d883a 	mov	r22,r2
   2c8ac:	8080402c 	andhi	r2,r16,256
   2c8b0:	10000426 	beq	r2,zero,2c8c4 <__muldf3+0x1e8>
   2c8b4:	00bfc034 	movhi	r2,65280
   2c8b8:	10bfffc4 	addi	r2,r2,-1
   2c8bc:	80a0703a 	and	r16,r16,r2
   2c8c0:	98c10004 	addi	r3,r19,1024
   2c8c4:	1881ffc8 	cmpgei	r2,r3,2047
   2c8c8:	1000461e 	bne	r2,zero,2c9e4 <__muldf3+0x308>
   2c8cc:	8028977a 	slli	r20,r16,29
   2c8d0:	b02cd0fa 	srli	r22,r22,3
   2c8d4:	8020927a 	slli	r16,r16,9
   2c8d8:	1901ffcc 	andi	r4,r3,2047
   2c8dc:	a5a8b03a 	or	r20,r20,r22
   2c8e0:	8020d33a 	srli	r16,r16,12
   2c8e4:	003fbe06 	br	2c7e0 <__muldf3+0x104>
   2c8e8:	1980900c 	andi	r6,r3,576
   2c8ec:	3000411e 	bne	r6,zero,2c9f4 <__muldf3+0x318>
   2c8f0:	18c0220c 	andi	r3,r3,136
   2c8f4:	18007e26 	beq	r3,zero,2caf0 <__muldf3+0x414>
   2c8f8:	282b883a 	mov	r21,r5
   2c8fc:	8023883a 	mov	r17,r16
   2c900:	b029883a 	mov	r20,r22
   2c904:	200f883a 	mov	r7,r4
   2c908:	003fd406 	br	2c85c <__muldf3+0x180>
   2c90c:	8184b03a 	or	r2,r16,r6
   2c910:	10005126 	beq	r2,zero,2ca58 <__muldf3+0x37c>
   2c914:	d9800215 	stw	r6,8(sp)
   2c918:	d9400115 	stw	r5,4(sp)
   2c91c:	d9c00015 	stw	r7,0(sp)
   2c920:	8000ec26 	beq	r16,zero,2ccd4 <__muldf3+0x5f8>
   2c924:	8009883a 	mov	r4,r16
   2c928:	002d96c0 	call	2d96c <__clzsi2>
   2c92c:	d9c00017 	ldw	r7,0(sp)
   2c930:	d9400117 	ldw	r5,4(sp)
   2c934:	d9800217 	ldw	r6,8(sp)
   2c938:	113ffd44 	addi	r4,r2,-11
   2c93c:	00c00744 	movi	r3,29
   2c940:	15bffe04 	addi	r22,r2,-8
   2c944:	1907c83a 	sub	r3,r3,r4
   2c948:	85a0983a 	sll	r16,r16,r22
   2c94c:	30c6d83a 	srl	r3,r6,r3
   2c950:	35ac983a 	sll	r22,r6,r22
   2c954:	1c20b03a 	or	r16,r3,r16
   2c958:	9885c83a 	sub	r2,r19,r2
   2c95c:	10bf0344 	addi	r2,r2,-1011
   2c960:	90c002c8 	cmpgei	r3,r18,11
   2c964:	0009883a 	mov	r4,zero
   2c968:	14c00044 	addi	r19,r2,1
   2c96c:	183f8f26 	beq	r3,zero,2c7ac <__muldf3+0xd0>
   2c970:	003fba06 	br	2c85c <__muldf3+0x180>
   2c974:	2468b03a 	or	r20,r4,r17
   2c978:	a0003226 	beq	r20,zero,2ca44 <__muldf3+0x368>
   2c97c:	d9800015 	stw	r6,0(sp)
   2c980:	8800ca26 	beq	r17,zero,2ccac <__muldf3+0x5d0>
   2c984:	8809883a 	mov	r4,r17
   2c988:	002d96c0 	call	2d96c <__clzsi2>
   2c98c:	d9800017 	ldw	r6,0(sp)
   2c990:	1009883a 	mov	r4,r2
   2c994:	117ffd44 	addi	r5,r2,-11
   2c998:	00c00744 	movi	r3,29
   2c99c:	253ffe04 	addi	r20,r4,-8
   2c9a0:	1947c83a 	sub	r3,r3,r5
   2c9a4:	8d22983a 	sll	r17,r17,r20
   2c9a8:	80c6d83a 	srl	r3,r16,r3
   2c9ac:	8528983a 	sll	r20,r16,r20
   2c9b0:	1c62b03a 	or	r17,r3,r17
   2c9b4:	00bf0344 	movi	r2,-1011
   2c9b8:	1127c83a 	sub	r19,r2,r4
   2c9bc:	0025883a 	mov	r18,zero
   2c9c0:	000f883a 	mov	r7,zero
   2c9c4:	003f6406 	br	2c758 <__muldf3+0x7c>
   2c9c8:	2468b03a 	or	r20,r4,r17
   2c9cc:	a000181e 	bne	r20,zero,2ca30 <__muldf3+0x354>
   2c9d0:	0023883a 	mov	r17,zero
   2c9d4:	04800204 	movi	r18,8
   2c9d8:	04c1ffc4 	movi	r19,2047
   2c9dc:	01c00084 	movi	r7,2
   2c9e0:	003f5d06 	br	2c758 <__muldf3+0x7c>
   2c9e4:	0101ffc4 	movi	r4,2047
   2c9e8:	0021883a 	mov	r16,zero
   2c9ec:	0029883a 	mov	r20,zero
   2c9f0:	003f7b06 	br	2c7e0 <__muldf3+0x104>
   2c9f4:	04000434 	movhi	r16,16
   2c9f8:	002b883a 	mov	r21,zero
   2c9fc:	843fffc4 	addi	r16,r16,-1
   2ca00:	053fffc4 	movi	r20,-1
   2ca04:	0101ffc4 	movi	r4,2047
   2ca08:	003f7506 	br	2c7e0 <__muldf3+0x104>
   2ca0c:	94800094 	ori	r18,r18,2
   2ca10:	90c002c8 	cmpgei	r3,r18,11
   2ca14:	9cc20004 	addi	r19,r19,2048
   2ca18:	183f901e 	bne	r3,zero,2c85c <__muldf3+0x180>
   2ca1c:	2f2af03a 	xor	r21,r5,fp
   2ca20:	002d883a 	mov	r22,zero
   2ca24:	0021883a 	mov	r16,zero
   2ca28:	01000084 	movi	r4,2
   2ca2c:	003f6006 	br	2c7b0 <__muldf3+0xd4>
   2ca30:	2029883a 	mov	r20,r4
   2ca34:	04800304 	movi	r18,12
   2ca38:	04c1ffc4 	movi	r19,2047
   2ca3c:	01c000c4 	movi	r7,3
   2ca40:	003f4506 	br	2c758 <__muldf3+0x7c>
   2ca44:	0023883a 	mov	r17,zero
   2ca48:	04800104 	movi	r18,4
   2ca4c:	0027883a 	mov	r19,zero
   2ca50:	01c00044 	movi	r7,1
   2ca54:	003f4006 	br	2c758 <__muldf3+0x7c>
   2ca58:	94800054 	ori	r18,r18,1
   2ca5c:	9805883a 	mov	r2,r19
   2ca60:	90c002c8 	cmpgei	r3,r18,11
   2ca64:	0021883a 	mov	r16,zero
   2ca68:	002d883a 	mov	r22,zero
   2ca6c:	01000044 	movi	r4,1
   2ca70:	14c00044 	addi	r19,r2,1
   2ca74:	183f4d26 	beq	r3,zero,2c7ac <__muldf3+0xd0>
   2ca78:	003f7806 	br	2c85c <__muldf3+0x180>
   2ca7c:	01000044 	movi	r4,1
   2ca80:	20c9c83a 	sub	r4,r4,r3
   2ca84:	20800e48 	cmpgei	r2,r4,57
   2ca88:	103f521e 	bne	r2,zero,2c7d4 <__muldf3+0xf8>
   2ca8c:	20800808 	cmpgei	r2,r4,32
   2ca90:	1000a11e 	bne	r2,zero,2cd18 <__muldf3+0x63c>
   2ca94:	9cc10784 	addi	r19,r19,1054
   2ca98:	b104d83a 	srl	r2,r22,r4
   2ca9c:	84e8983a 	sll	r20,r16,r19
   2caa0:	b4e6983a 	sll	r19,r22,r19
   2caa4:	8108d83a 	srl	r4,r16,r4
   2caa8:	a0a8b03a 	or	r20,r20,r2
   2caac:	9826c03a 	cmpne	r19,r19,zero
   2cab0:	a4e8b03a 	or	r20,r20,r19
   2cab4:	a08001cc 	andi	r2,r20,7
   2cab8:	10000726 	beq	r2,zero,2cad8 <__muldf3+0x3fc>
   2cabc:	a08003cc 	andi	r2,r20,15
   2cac0:	10800120 	cmpeqi	r2,r2,4
   2cac4:	1000041e 	bne	r2,zero,2cad8 <__muldf3+0x3fc>
   2cac8:	a0800104 	addi	r2,r20,4
   2cacc:	1529803a 	cmpltu	r20,r2,r20
   2cad0:	2509883a 	add	r4,r4,r20
   2cad4:	1029883a 	mov	r20,r2
   2cad8:	2080202c 	andhi	r2,r4,128
   2cadc:	1000a526 	beq	r2,zero,2cd74 <__muldf3+0x698>
   2cae0:	01000044 	movi	r4,1
   2cae4:	0021883a 	mov	r16,zero
   2cae8:	0029883a 	mov	r20,zero
   2caec:	003f3c06 	br	2c7e0 <__muldf3+0x104>
   2caf0:	a018d43a 	srli	r12,r20,16
   2caf4:	b010d43a 	srli	r8,r22,16
   2caf8:	a53fffcc 	andi	r20,r20,65535
   2cafc:	b5bfffcc 	andi	r22,r22,65535
   2cb00:	b509383a 	mul	r4,r22,r20
   2cb04:	658d383a 	mul	r6,r12,r22
   2cb08:	450b383a 	mul	r5,r8,r20
   2cb0c:	2006d43a 	srli	r3,r4,16
   2cb10:	620f383a 	mul	r7,r12,r8
   2cb14:	298b883a 	add	r5,r5,r6
   2cb18:	1947883a 	add	r3,r3,r5
   2cb1c:	1980022e 	bgeu	r3,r6,2cb28 <__muldf3+0x44c>
   2cb20:	01400074 	movhi	r5,1
   2cb24:	394f883a 	add	r7,r7,r5
   2cb28:	8014d43a 	srli	r10,r16,16
   2cb2c:	843fffcc 	andi	r16,r16,65535
   2cb30:	8517383a 	mul	r11,r16,r20
   2cb34:	641b383a 	mul	r13,r12,r16
   2cb38:	5529383a 	mul	r20,r10,r20
   2cb3c:	580ad43a 	srli	r5,r11,16
   2cb40:	180c943a 	slli	r6,r3,16
   2cb44:	a369883a 	add	r20,r20,r13
   2cb48:	227fffcc 	andi	r9,r4,65535
   2cb4c:	2d0b883a 	add	r5,r5,r20
   2cb50:	1808d43a 	srli	r4,r3,16
   2cb54:	6299383a 	mul	r12,r12,r10
   2cb58:	324d883a 	add	r6,r6,r9
   2cb5c:	2b40022e 	bgeu	r5,r13,2cb68 <__muldf3+0x48c>
   2cb60:	00c00074 	movhi	r3,1
   2cb64:	60d9883a 	add	r12,r12,r3
   2cb68:	881ad43a 	srli	r13,r17,16
   2cb6c:	8c7fffcc 	andi	r17,r17,65535
   2cb70:	b45f383a 	mul	r15,r22,r17
   2cb74:	445d383a 	mul	r14,r8,r17
   2cb78:	6dad383a 	mul	r22,r13,r22
   2cb7c:	2812943a 	slli	r9,r5,16
   2cb80:	7806d43a 	srli	r3,r15,16
   2cb84:	280ad43a 	srli	r5,r5,16
   2cb88:	5affffcc 	andi	r11,r11,65535
   2cb8c:	759d883a 	add	r14,r14,r22
   2cb90:	4ad3883a 	add	r9,r9,r11
   2cb94:	1b87883a 	add	r3,r3,r14
   2cb98:	4365383a 	mul	r18,r8,r13
   2cb9c:	2b17883a 	add	r11,r5,r12
   2cba0:	2249883a 	add	r4,r4,r9
   2cba4:	1d80022e 	bgeu	r3,r22,2cbb0 <__muldf3+0x4d4>
   2cba8:	01400074 	movhi	r5,1
   2cbac:	9165883a 	add	r18,r18,r5
   2cbb0:	8459383a 	mul	r12,r16,r17
   2cbb4:	5463383a 	mul	r17,r10,r17
   2cbb8:	6c21383a 	mul	r16,r13,r16
   2cbbc:	6010d43a 	srli	r8,r12,16
   2cbc0:	181cd43a 	srli	r14,r3,16
   2cbc4:	180a943a 	slli	r5,r3,16
   2cbc8:	8c23883a 	add	r17,r17,r16
   2cbcc:	78ffffcc 	andi	r3,r15,65535
   2cbd0:	4451883a 	add	r8,r8,r17
   2cbd4:	5355383a 	mul	r10,r10,r13
   2cbd8:	749d883a 	add	r14,r14,r18
   2cbdc:	28cb883a 	add	r5,r5,r3
   2cbe0:	4400022e 	bgeu	r8,r16,2cbec <__muldf3+0x510>
   2cbe4:	00c00074 	movhi	r3,1
   2cbe8:	50d5883a 	add	r10,r10,r3
   2cbec:	4006943a 	slli	r3,r8,16
   2cbf0:	633fffcc 	andi	r12,r12,65535
   2cbf4:	21c9883a 	add	r4,r4,r7
   2cbf8:	1b07883a 	add	r3,r3,r12
   2cbfc:	2253803a 	cmpltu	r9,r4,r9
   2cc00:	1ac7883a 	add	r3,r3,r11
   2cc04:	2149883a 	add	r4,r4,r5
   2cc08:	1a5b883a 	add	r13,r3,r9
   2cc0c:	214b803a 	cmpltu	r5,r4,r5
   2cc10:	6b8f883a 	add	r7,r13,r14
   2cc14:	4010d43a 	srli	r8,r8,16
   2cc18:	3959883a 	add	r12,r7,r5
   2cc1c:	1ae1803a 	cmpltu	r16,r3,r11
   2cc20:	6a5b803a 	cmpltu	r13,r13,r9
   2cc24:	614b803a 	cmpltu	r5,r12,r5
   2cc28:	8360b03a 	or	r16,r16,r13
   2cc2c:	3b8f803a 	cmpltu	r7,r7,r14
   2cc30:	394eb03a 	or	r7,r7,r5
   2cc34:	8221883a 	add	r16,r16,r8
   2cc38:	202c927a 	slli	r22,r4,9
   2cc3c:	81e1883a 	add	r16,r16,r7
   2cc40:	82a1883a 	add	r16,r16,r10
   2cc44:	8020927a 	slli	r16,r16,9
   2cc48:	2008d5fa 	srli	r4,r4,23
   2cc4c:	600ad5fa 	srli	r5,r12,23
   2cc50:	6006927a 	slli	r3,r12,9
   2cc54:	b1acb03a 	or	r22,r22,r6
   2cc58:	b02cc03a 	cmpne	r22,r22,zero
   2cc5c:	b12cb03a 	or	r22,r22,r4
   2cc60:	8100402c 	andhi	r4,r16,256
   2cc64:	b0ecb03a 	or	r22,r22,r3
   2cc68:	8160b03a 	or	r16,r16,r5
   2cc6c:	20002826 	beq	r4,zero,2cd10 <__muldf3+0x634>
   2cc70:	b006d07a 	srli	r3,r22,1
   2cc74:	800497fa 	slli	r2,r16,31
   2cc78:	b580004c 	andi	r22,r22,1
   2cc7c:	1d86b03a 	or	r3,r3,r22
   2cc80:	8020d07a 	srli	r16,r16,1
   2cc84:	18acb03a 	or	r22,r3,r2
   2cc88:	003efd06 	br	2c880 <__muldf3+0x1a4>
   2cc8c:	282b883a 	mov	r21,r5
   2cc90:	8023883a 	mov	r17,r16
   2cc94:	3029883a 	mov	r20,r6
   2cc98:	00800434 	movhi	r2,16
   2cc9c:	8c000234 	orhi	r16,r17,8
   2cca0:	10bfffc4 	addi	r2,r2,-1
   2cca4:	80a0703a 	and	r16,r16,r2
   2cca8:	003f5606 	br	2ca04 <__muldf3+0x328>
   2ccac:	002d96c0 	call	2d96c <__clzsi2>
   2ccb0:	11400544 	addi	r5,r2,21
   2ccb4:	28c00748 	cmpgei	r3,r5,29
   2ccb8:	d9800017 	ldw	r6,0(sp)
   2ccbc:	11000804 	addi	r4,r2,32
   2ccc0:	183f3526 	beq	r3,zero,2c998 <__muldf3+0x2bc>
   2ccc4:	10bffe04 	addi	r2,r2,-8
   2ccc8:	80a2983a 	sll	r17,r16,r2
   2cccc:	0029883a 	mov	r20,zero
   2ccd0:	003f3806 	br	2c9b4 <__muldf3+0x2d8>
   2ccd4:	3009883a 	mov	r4,r6
   2ccd8:	002d96c0 	call	2d96c <__clzsi2>
   2ccdc:	11000544 	addi	r4,r2,21
   2cce0:	22000748 	cmpgei	r8,r4,29
   2cce4:	1007883a 	mov	r3,r2
   2cce8:	d9c00017 	ldw	r7,0(sp)
   2ccec:	d9400117 	ldw	r5,4(sp)
   2ccf0:	d9800217 	ldw	r6,8(sp)
   2ccf4:	10800804 	addi	r2,r2,32
   2ccf8:	403f1026 	beq	r8,zero,2c93c <__muldf3+0x260>
   2ccfc:	18fffe04 	addi	r3,r3,-8
   2cd00:	b0c6983a 	sll	r3,r22,r3
   2cd04:	002d883a 	mov	r22,zero
   2cd08:	1821883a 	mov	r16,r3
   2cd0c:	003f1206 	br	2c958 <__muldf3+0x27c>
   2cd10:	1027883a 	mov	r19,r2
   2cd14:	003eda06 	br	2c880 <__muldf3+0x1a4>
   2cd18:	00bff844 	movi	r2,-31
   2cd1c:	10c7c83a 	sub	r3,r2,r3
   2cd20:	21000820 	cmpeqi	r4,r4,32
   2cd24:	80c6d83a 	srl	r3,r16,r3
   2cd28:	2000031e 	bne	r4,zero,2cd38 <__muldf3+0x65c>
   2cd2c:	9cc10f84 	addi	r19,r19,1086
   2cd30:	84e6983a 	sll	r19,r16,r19
   2cd34:	b4ecb03a 	or	r22,r22,r19
   2cd38:	b028c03a 	cmpne	r20,r22,zero
   2cd3c:	a0e8b03a 	or	r20,r20,r3
   2cd40:	a08001cc 	andi	r2,r20,7
   2cd44:	1000051e 	bne	r2,zero,2cd5c <__muldf3+0x680>
   2cd48:	0021883a 	mov	r16,zero
   2cd4c:	a028d0fa 	srli	r20,r20,3
   2cd50:	0009883a 	mov	r4,zero
   2cd54:	a0a8b03a 	or	r20,r20,r2
   2cd58:	003ea106 	br	2c7e0 <__muldf3+0x104>
   2cd5c:	a08003cc 	andi	r2,r20,15
   2cd60:	10800120 	cmpeqi	r2,r2,4
   2cd64:	1000111e 	bne	r2,zero,2cdac <__muldf3+0x6d0>
   2cd68:	a0800104 	addi	r2,r20,4
   2cd6c:	1509803a 	cmpltu	r4,r2,r20
   2cd70:	1029883a 	mov	r20,r2
   2cd74:	2020927a 	slli	r16,r4,9
   2cd78:	2004977a 	slli	r2,r4,29
   2cd7c:	8020d33a 	srli	r16,r16,12
   2cd80:	003ff206 	br	2cd4c <__muldf3+0x670>
   2cd84:	948003e0 	cmpeqi	r18,r18,15
   2cd88:	903fc026 	beq	r18,zero,2cc8c <__muldf3+0x5b0>
   2cd8c:	8880022c 	andhi	r2,r17,8
   2cd90:	103fc126 	beq	r2,zero,2cc98 <__muldf3+0x5bc>
   2cd94:	b9c0022c 	andhi	r7,r23,8
   2cd98:	383fbf1e 	bne	r7,zero,2cc98 <__muldf3+0x5bc>
   2cd9c:	84000234 	orhi	r16,r16,8
   2cda0:	282b883a 	mov	r21,r5
   2cda4:	3029883a 	mov	r20,r6
   2cda8:	003f1606 	br	2ca04 <__muldf3+0x328>
   2cdac:	0009883a 	mov	r4,zero
   2cdb0:	003ff006 	br	2cd74 <__muldf3+0x698>

0002cdb4 <__subdf3>:
   2cdb4:	00800434 	movhi	r2,16
   2cdb8:	3806d53a 	srli	r3,r7,20
   2cdbc:	10bfffc4 	addi	r2,r2,-1
   2cdc0:	defffa04 	addi	sp,sp,-24
   2cdc4:	2890703a 	and	r8,r5,r2
   2cdc8:	3884703a 	and	r2,r7,r2
   2cdcc:	2812d7fa 	srli	r9,r5,31
   2cdd0:	401090fa 	slli	r8,r8,3
   2cdd4:	280ad53a 	srli	r5,r5,20
   2cdd8:	100490fa 	slli	r2,r2,3
   2cddc:	3016d77a 	srli	r11,r6,29
   2cde0:	dc400115 	stw	r17,4(sp)
   2cde4:	2022d77a 	srli	r17,r4,29
   2cde8:	18c1ffcc 	andi	r3,r3,2047
   2cdec:	dd000415 	stw	r20,16(sp)
   2cdf0:	dcc00315 	stw	r19,12(sp)
   2cdf4:	dc000015 	stw	r16,0(sp)
   2cdf8:	dfc00515 	stw	ra,20(sp)
   2cdfc:	dc800215 	stw	r18,8(sp)
   2ce00:	1a81ffd8 	cmpnei	r10,r3,2047
   2ce04:	2c01ffcc 	andi	r16,r5,2047
   2ce08:	380ed7fa 	srli	r7,r7,31
   2ce0c:	201890fa 	slli	r12,r4,3
   2ce10:	301a90fa 	slli	r13,r6,3
   2ce14:	4829883a 	mov	r20,r9
   2ce18:	4cc03fcc 	andi	r19,r9,255
   2ce1c:	8a22b03a 	or	r17,r17,r8
   2ce20:	588ab03a 	or	r5,r11,r2
   2ce24:	50007126 	beq	r10,zero,2cfec <__subdf3+0x238>
   2ce28:	39c0005c 	xori	r7,r7,1
   2ce2c:	3813883a 	mov	r9,r7
   2ce30:	3a803fcc 	andi	r10,r7,255
   2ce34:	80d1c83a 	sub	r8,r16,r3
   2ce38:	99c05526 	beq	r19,r7,2cf90 <__subdf3+0x1dc>
   2ce3c:	0202320e 	bge	zero,r8,2d708 <__subdf3+0x954>
   2ce40:	18008426 	beq	r3,zero,2d054 <__subdf3+0x2a0>
   2ce44:	8081ffe0 	cmpeqi	r2,r16,2047
   2ce48:	10011b1e 	bne	r2,zero,2d2b8 <__subdf3+0x504>
   2ce4c:	40800e48 	cmpgei	r2,r8,57
   2ce50:	1000881e 	bne	r2,zero,2d074 <__subdf3+0x2c0>
   2ce54:	29402034 	orhi	r5,r5,128
   2ce58:	40800808 	cmpgei	r2,r8,32
   2ce5c:	1001451e 	bne	r2,zero,2d374 <__subdf3+0x5c0>
   2ce60:	00800804 	movi	r2,32
   2ce64:	1205c83a 	sub	r2,r2,r8
   2ce68:	28a4983a 	sll	r18,r5,r2
   2ce6c:	6a06d83a 	srl	r3,r13,r8
   2ce70:	6884983a 	sll	r2,r13,r2
   2ce74:	2a10d83a 	srl	r8,r5,r8
   2ce78:	90e4b03a 	or	r18,r18,r3
   2ce7c:	1004c03a 	cmpne	r2,r2,zero
   2ce80:	90a4b03a 	or	r18,r18,r2
   2ce84:	8a23c83a 	sub	r17,r17,r8
   2ce88:	64a5c83a 	sub	r18,r12,r18
   2ce8c:	6485803a 	cmpltu	r2,r12,r18
   2ce90:	88a3c83a 	sub	r17,r17,r2
   2ce94:	8880202c 	andhi	r2,r17,128
   2ce98:	1000ae26 	beq	r2,zero,2d154 <__subdf3+0x3a0>
   2ce9c:	00802034 	movhi	r2,128
   2cea0:	10bfffc4 	addi	r2,r2,-1
   2cea4:	88a2703a 	and	r17,r17,r2
   2cea8:	8800de26 	beq	r17,zero,2d224 <__subdf3+0x470>
   2ceac:	8809883a 	mov	r4,r17
   2ceb0:	002d96c0 	call	2d96c <__clzsi2>
   2ceb4:	10fffe04 	addi	r3,r2,-8
   2ceb8:	01000804 	movi	r4,32
   2cebc:	20c5c83a 	sub	r2,r4,r3
   2cec0:	9084d83a 	srl	r2,r18,r2
   2cec4:	88e2983a 	sll	r17,r17,r3
   2cec8:	90e4983a 	sll	r18,r18,r3
   2cecc:	1444b03a 	or	r2,r2,r17
   2ced0:	1c010516 	blt	r3,r16,2d2e8 <__subdf3+0x534>
   2ced4:	1c07c83a 	sub	r3,r3,r16
   2ced8:	18c00044 	addi	r3,r3,1
   2cedc:	20c9c83a 	sub	r4,r4,r3
   2cee0:	910a983a 	sll	r5,r18,r4
   2cee4:	90e2d83a 	srl	r17,r18,r3
   2cee8:	280ac03a 	cmpne	r5,r5,zero
   2ceec:	1108983a 	sll	r4,r2,r4
   2cef0:	894ab03a 	or	r5,r17,r5
   2cef4:	10e2d83a 	srl	r17,r2,r3
   2cef8:	0021883a 	mov	r16,zero
   2cefc:	2164b03a 	or	r18,r4,r5
   2cf00:	908001cc 	andi	r2,r18,7
   2cf04:	10000726 	beq	r2,zero,2cf24 <__subdf3+0x170>
   2cf08:	908003cc 	andi	r2,r18,15
   2cf0c:	10800120 	cmpeqi	r2,r2,4
   2cf10:	1000041e 	bne	r2,zero,2cf24 <__subdf3+0x170>
   2cf14:	90800104 	addi	r2,r18,4
   2cf18:	14a5803a 	cmpltu	r18,r2,r18
   2cf1c:	8ca3883a 	add	r17,r17,r18
   2cf20:	1025883a 	mov	r18,r2
   2cf24:	8880202c 	andhi	r2,r17,128
   2cf28:	1000d726 	beq	r2,zero,2d288 <__subdf3+0x4d4>
   2cf2c:	8081ffa0 	cmpeqi	r2,r16,2046
   2cf30:	84000044 	addi	r16,r16,1
   2cf34:	10007c1e 	bne	r2,zero,2d128 <__subdf3+0x374>
   2cf38:	013fe034 	movhi	r4,65408
   2cf3c:	213fffc4 	addi	r4,r4,-1
   2cf40:	8908703a 	and	r4,r17,r4
   2cf44:	2004977a 	slli	r2,r4,29
   2cf48:	2008927a 	slli	r4,r4,9
   2cf4c:	9024d0fa 	srli	r18,r18,3
   2cf50:	80c1ffcc 	andi	r3,r16,2047
   2cf54:	2008d33a 	srli	r4,r4,12
   2cf58:	1484b03a 	or	r2,r2,r18
   2cf5c:	9d00004c 	andi	r20,r19,1
   2cf60:	1806953a 	slli	r3,r3,20
   2cf64:	a02897fa 	slli	r20,r20,31
   2cf68:	1906b03a 	or	r3,r3,r4
   2cf6c:	1d06b03a 	or	r3,r3,r20
   2cf70:	dfc00517 	ldw	ra,20(sp)
   2cf74:	dd000417 	ldw	r20,16(sp)
   2cf78:	dcc00317 	ldw	r19,12(sp)
   2cf7c:	dc800217 	ldw	r18,8(sp)
   2cf80:	dc400117 	ldw	r17,4(sp)
   2cf84:	dc000017 	ldw	r16,0(sp)
   2cf88:	dec00604 	addi	sp,sp,24
   2cf8c:	f800283a 	ret
   2cf90:	0201e60e 	bge	zero,r8,2d72c <__subdf3+0x978>
   2cf94:	18004d1e 	bne	r3,zero,2d0cc <__subdf3+0x318>
   2cf98:	2b44b03a 	or	r2,r5,r13
   2cf9c:	1000d026 	beq	r2,zero,2d2e0 <__subdf3+0x52c>
   2cfa0:	823fffc4 	addi	r8,r16,-1
   2cfa4:	40006426 	beq	r8,zero,2d138 <__subdf3+0x384>
   2cfa8:	8081ffe0 	cmpeqi	r2,r16,2047
   2cfac:	10018e1e 	bne	r2,zero,2d5e8 <__subdf3+0x834>
   2cfb0:	40800e48 	cmpgei	r2,r8,57
   2cfb4:	1000491e 	bne	r2,zero,2d0dc <__subdf3+0x328>
   2cfb8:	40800808 	cmpgei	r2,r8,32
   2cfbc:	1001431e 	bne	r2,zero,2d4cc <__subdf3+0x718>
   2cfc0:	00800804 	movi	r2,32
   2cfc4:	1205c83a 	sub	r2,r2,r8
   2cfc8:	28a4983a 	sll	r18,r5,r2
   2cfcc:	6a06d83a 	srl	r3,r13,r8
   2cfd0:	6884983a 	sll	r2,r13,r2
   2cfd4:	2a10d83a 	srl	r8,r5,r8
   2cfd8:	90e4b03a 	or	r18,r18,r3
   2cfdc:	1004c03a 	cmpne	r2,r2,zero
   2cfe0:	90a4b03a 	or	r18,r18,r2
   2cfe4:	8a23883a 	add	r17,r17,r8
   2cfe8:	00003d06 	br	2d0e0 <__subdf3+0x32c>
   2cfec:	2b44b03a 	or	r2,r5,r13
   2cff0:	823e0044 	addi	r8,r16,-2047
   2cff4:	1000211e 	bne	r2,zero,2d07c <__subdf3+0x2c8>
   2cff8:	39c0005c 	xori	r7,r7,1
   2cffc:	3813883a 	mov	r9,r7
   2d000:	3a803fcc 	andi	r10,r7,255
   2d004:	99c06b26 	beq	r19,r7,2d1b4 <__subdf3+0x400>
   2d008:	40005526 	beq	r8,zero,2d160 <__subdf3+0x3ac>
   2d00c:	8000201e 	bne	r16,zero,2d090 <__subdf3+0x2dc>
   2d010:	0401ffc4 	movi	r16,2047
   2d014:	8b04b03a 	or	r2,r17,r12
   2d018:	1000ae26 	beq	r2,zero,2d2d4 <__subdf3+0x520>
   2d01c:	80bfffc4 	addi	r2,r16,-1
   2d020:	10015e26 	beq	r2,zero,2d59c <__subdf3+0x7e8>
   2d024:	8401ffe0 	cmpeqi	r16,r16,2047
   2d028:	8001801e 	bne	r16,zero,2d62c <__subdf3+0x878>
   2d02c:	11000e48 	cmpgei	r4,r2,57
   2d030:	5027883a 	mov	r19,r10
   2d034:	4829883a 	mov	r20,r9
   2d038:	20011326 	beq	r4,zero,2d488 <__subdf3+0x6d4>
   2d03c:	04800044 	movi	r18,1
   2d040:	6ca5c83a 	sub	r18,r13,r18
   2d044:	6c9b803a 	cmpltu	r13,r13,r18
   2d048:	2b63c83a 	sub	r17,r5,r13
   2d04c:	1821883a 	mov	r16,r3
   2d050:	003f9006 	br	2ce94 <__subdf3+0xe0>
   2d054:	2b44b03a 	or	r2,r5,r13
   2d058:	1000a126 	beq	r2,zero,2d2e0 <__subdf3+0x52c>
   2d05c:	823fffc4 	addi	r8,r16,-1
   2d060:	4000fe26 	beq	r8,zero,2d45c <__subdf3+0x6a8>
   2d064:	8081ffe0 	cmpeqi	r2,r16,2047
   2d068:	1000931e 	bne	r2,zero,2d2b8 <__subdf3+0x504>
   2d06c:	40800e48 	cmpgei	r2,r8,57
   2d070:	103f7926 	beq	r2,zero,2ce58 <__subdf3+0xa4>
   2d074:	04800044 	movi	r18,1
   2d078:	003f8306 	br	2ce88 <__subdf3+0xd4>
   2d07c:	3a803fcc 	andi	r10,r7,255
   2d080:	99c04c26 	beq	r19,r7,2d1b4 <__subdf3+0x400>
   2d084:	40003626 	beq	r8,zero,2d160 <__subdf3+0x3ac>
   2d088:	3813883a 	mov	r9,r7
   2d08c:	803fe026 	beq	r16,zero,2d010 <__subdf3+0x25c>
   2d090:	2804977a 	slli	r2,r5,29
   2d094:	00c80034 	movhi	r3,8192
   2d098:	18ffffc4 	addi	r3,r3,-1
   2d09c:	280ad0fa 	srli	r5,r5,3
   2d0a0:	30c6703a 	and	r3,r6,r3
   2d0a4:	10c4b03a 	or	r2,r2,r3
   2d0a8:	4829883a 	mov	r20,r9
   2d0ac:	1146b03a 	or	r3,r2,r5
   2d0b0:	18019126 	beq	r3,zero,2d6f8 <__subdf3+0x944>
   2d0b4:	00c00434 	movhi	r3,16
   2d0b8:	18ffffc4 	addi	r3,r3,-1
   2d0bc:	29000234 	orhi	r4,r5,8
   2d0c0:	20c8703a 	and	r4,r4,r3
   2d0c4:	00c1ffc4 	movi	r3,2047
   2d0c8:	003fa506 	br	2cf60 <__subdf3+0x1ac>
   2d0cc:	8081ffe0 	cmpeqi	r2,r16,2047
   2d0d0:	1000791e 	bne	r2,zero,2d2b8 <__subdf3+0x504>
   2d0d4:	40800e48 	cmpgei	r2,r8,57
   2d0d8:	1000b126 	beq	r2,zero,2d3a0 <__subdf3+0x5ec>
   2d0dc:	04800044 	movi	r18,1
   2d0e0:	9325883a 	add	r18,r18,r12
   2d0e4:	9305803a 	cmpltu	r2,r18,r12
   2d0e8:	88a3883a 	add	r17,r17,r2
   2d0ec:	8880202c 	andhi	r2,r17,128
   2d0f0:	10001826 	beq	r2,zero,2d154 <__subdf3+0x3a0>
   2d0f4:	84000044 	addi	r16,r16,1
   2d0f8:	8081ffe0 	cmpeqi	r2,r16,2047
   2d0fc:	10000a1e 	bne	r2,zero,2d128 <__subdf3+0x374>
   2d100:	00bfe034 	movhi	r2,65408
   2d104:	10bfffc4 	addi	r2,r2,-1
   2d108:	9006d07a 	srli	r3,r18,1
   2d10c:	8884703a 	and	r2,r17,r2
   2d110:	100897fa 	slli	r4,r2,31
   2d114:	9480004c 	andi	r18,r18,1
   2d118:	1c86b03a 	or	r3,r3,r18
   2d11c:	1022d07a 	srli	r17,r2,1
   2d120:	20e4b03a 	or	r18,r4,r3
   2d124:	003f7606 	br	2cf00 <__subdf3+0x14c>
   2d128:	00c1ffc4 	movi	r3,2047
   2d12c:	0009883a 	mov	r4,zero
   2d130:	0005883a 	mov	r2,zero
   2d134:	003f8a06 	br	2cf60 <__subdf3+0x1ac>
   2d138:	6365883a 	add	r18,r12,r13
   2d13c:	894b883a 	add	r5,r17,r5
   2d140:	9305803a 	cmpltu	r2,r18,r12
   2d144:	28a3883a 	add	r17,r5,r2
   2d148:	8880202c 	andhi	r2,r17,128
   2d14c:	1001241e 	bne	r2,zero,2d5e0 <__subdf3+0x82c>
   2d150:	04000044 	movi	r16,1
   2d154:	908001cc 	andi	r2,r18,7
   2d158:	103f6b1e 	bne	r2,zero,2cf08 <__subdf3+0x154>
   2d15c:	00007906 	br	2d344 <__subdf3+0x590>
   2d160:	80800044 	addi	r2,r16,1
   2d164:	1081ff8c 	andi	r2,r2,2046
   2d168:	1000781e 	bne	r2,zero,2d34c <__subdf3+0x598>
   2d16c:	2b44b03a 	or	r2,r5,r13
   2d170:	8b06b03a 	or	r3,r17,r12
   2d174:	8000af1e 	bne	r16,zero,2d434 <__subdf3+0x680>
   2d178:	18011026 	beq	r3,zero,2d5bc <__subdf3+0x808>
   2d17c:	1000de26 	beq	r2,zero,2d4f8 <__subdf3+0x744>
   2d180:	6365c83a 	sub	r18,r12,r13
   2d184:	6485803a 	cmpltu	r2,r12,r18
   2d188:	8947c83a 	sub	r3,r17,r5
   2d18c:	1887c83a 	sub	r3,r3,r2
   2d190:	1880202c 	andhi	r2,r3,128
   2d194:	10014426 	beq	r2,zero,2d6a8 <__subdf3+0x8f4>
   2d198:	6b25c83a 	sub	r18,r13,r12
   2d19c:	2c4bc83a 	sub	r5,r5,r17
   2d1a0:	6c9b803a 	cmpltu	r13,r13,r18
   2d1a4:	2b63c83a 	sub	r17,r5,r13
   2d1a8:	5029883a 	mov	r20,r10
   2d1ac:	5027883a 	mov	r19,r10
   2d1b0:	003f5306 	br	2cf00 <__subdf3+0x14c>
   2d1b4:	40005126 	beq	r8,zero,2d2fc <__subdf3+0x548>
   2d1b8:	80007b1e 	bne	r16,zero,2d3a8 <__subdf3+0x5f4>
   2d1bc:	0401ffc4 	movi	r16,2047
   2d1c0:	8b04b03a 	or	r2,r17,r12
   2d1c4:	10010f26 	beq	r2,zero,2d604 <__subdf3+0x850>
   2d1c8:	80bfffc4 	addi	r2,r16,-1
   2d1cc:	10012a26 	beq	r2,zero,2d678 <__subdf3+0x8c4>
   2d1d0:	8401ffe0 	cmpeqi	r16,r16,2047
   2d1d4:	80013d1e 	bne	r16,zero,2d6cc <__subdf3+0x918>
   2d1d8:	11000e48 	cmpgei	r4,r2,57
   2d1dc:	2000cd1e 	bne	r4,zero,2d514 <__subdf3+0x760>
   2d1e0:	11000808 	cmpgei	r4,r2,32
   2d1e4:	2001191e 	bne	r4,zero,2d64c <__subdf3+0x898>
   2d1e8:	01000804 	movi	r4,32
   2d1ec:	2089c83a 	sub	r4,r4,r2
   2d1f0:	8924983a 	sll	r18,r17,r4
   2d1f4:	608cd83a 	srl	r6,r12,r2
   2d1f8:	6108983a 	sll	r4,r12,r4
   2d1fc:	8884d83a 	srl	r2,r17,r2
   2d200:	91a4b03a 	or	r18,r18,r6
   2d204:	2008c03a 	cmpne	r4,r4,zero
   2d208:	9124b03a 	or	r18,r18,r4
   2d20c:	288b883a 	add	r5,r5,r2
   2d210:	9365883a 	add	r18,r18,r13
   2d214:	935b803a 	cmpltu	r13,r18,r13
   2d218:	6963883a 	add	r17,r13,r5
   2d21c:	1821883a 	mov	r16,r3
   2d220:	003fb206 	br	2d0ec <__subdf3+0x338>
   2d224:	9009883a 	mov	r4,r18
   2d228:	002d96c0 	call	2d96c <__clzsi2>
   2d22c:	10c00604 	addi	r3,r2,24
   2d230:	19000808 	cmpgei	r4,r3,32
   2d234:	203f2026 	beq	r4,zero,2ceb8 <__subdf3+0x104>
   2d238:	10bffe04 	addi	r2,r2,-8
   2d23c:	9084983a 	sll	r2,r18,r2
   2d240:	1c006016 	blt	r3,r16,2d3c4 <__subdf3+0x610>
   2d244:	1c25c83a 	sub	r18,r3,r16
   2d248:	90c00044 	addi	r3,r18,1
   2d24c:	19000808 	cmpgei	r4,r3,32
   2d250:	20012526 	beq	r4,zero,2d6e8 <__subdf3+0x934>
   2d254:	94bff844 	addi	r18,r18,-31
   2d258:	19000820 	cmpeqi	r4,r3,32
   2d25c:	14a4d83a 	srl	r18,r2,r18
   2d260:	2000051e 	bne	r4,zero,2d278 <__subdf3+0x4c4>
   2d264:	01001004 	movi	r4,64
   2d268:	20c7c83a 	sub	r3,r4,r3
   2d26c:	10c4983a 	sll	r2,r2,r3
   2d270:	1004c03a 	cmpne	r2,r2,zero
   2d274:	90a4b03a 	or	r18,r18,r2
   2d278:	908001cc 	andi	r2,r18,7
   2d27c:	0021883a 	mov	r16,zero
   2d280:	103f211e 	bne	r2,zero,2cf08 <__subdf3+0x154>
   2d284:	00002f06 	br	2d344 <__subdf3+0x590>
   2d288:	9004d0fa 	srli	r2,r18,3
   2d28c:	8808977a 	slli	r4,r17,29
   2d290:	80c1ffe0 	cmpeqi	r3,r16,2047
   2d294:	880ad0fa 	srli	r5,r17,3
   2d298:	2084b03a 	or	r2,r4,r2
   2d29c:	183f831e 	bne	r3,zero,2d0ac <__subdf3+0x2f8>
   2d2a0:	01000434 	movhi	r4,16
   2d2a4:	213fffc4 	addi	r4,r4,-1
   2d2a8:	2908703a 	and	r4,r5,r4
   2d2ac:	80c1ffcc 	andi	r3,r16,2047
   2d2b0:	003f2b06 	br	2cf60 <__subdf3+0x1ac>
   2d2b4:	1000a71e 	bne	r2,zero,2d554 <__subdf3+0x7a0>
   2d2b8:	8806977a 	slli	r3,r17,29
   2d2bc:	00880034 	movhi	r2,8192
   2d2c0:	10bfffc4 	addi	r2,r2,-1
   2d2c4:	2084703a 	and	r2,r4,r2
   2d2c8:	880ad0fa 	srli	r5,r17,3
   2d2cc:	10c4b03a 	or	r2,r2,r3
   2d2d0:	003f7606 	br	2d0ac <__subdf3+0x2f8>
   2d2d4:	6819883a 	mov	r12,r13
   2d2d8:	2823883a 	mov	r17,r5
   2d2dc:	4829883a 	mov	r20,r9
   2d2e0:	6004d0fa 	srli	r2,r12,3
   2d2e4:	003fe906 	br	2d28c <__subdf3+0x4d8>
   2d2e8:	047fe034 	movhi	r17,65408
   2d2ec:	8c7fffc4 	addi	r17,r17,-1
   2d2f0:	80e1c83a 	sub	r16,r16,r3
   2d2f4:	1462703a 	and	r17,r2,r17
   2d2f8:	003f0106 	br	2cf00 <__subdf3+0x14c>
   2d2fc:	80c00044 	addi	r3,r16,1
   2d300:	1881ff8c 	andi	r2,r3,2046
   2d304:	1000361e 	bne	r2,zero,2d3e0 <__subdf3+0x62c>
   2d308:	8b04b03a 	or	r2,r17,r12
   2d30c:	80008e1e 	bne	r16,zero,2d548 <__subdf3+0x794>
   2d310:	1000bf26 	beq	r2,zero,2d610 <__subdf3+0x85c>
   2d314:	2b44b03a 	or	r2,r5,r13
   2d318:	10007726 	beq	r2,zero,2d4f8 <__subdf3+0x744>
   2d31c:	6365883a 	add	r18,r12,r13
   2d320:	9305803a 	cmpltu	r2,r18,r12
   2d324:	894b883a 	add	r5,r17,r5
   2d328:	28a3883a 	add	r17,r5,r2
   2d32c:	8880202c 	andhi	r2,r17,128
   2d330:	10000426 	beq	r2,zero,2d344 <__subdf3+0x590>
   2d334:	00bfe034 	movhi	r2,65408
   2d338:	10bfffc4 	addi	r2,r2,-1
   2d33c:	88a2703a 	and	r17,r17,r2
   2d340:	04000044 	movi	r16,1
   2d344:	9019883a 	mov	r12,r18
   2d348:	003fe506 	br	2d2e0 <__subdf3+0x52c>
   2d34c:	6365c83a 	sub	r18,r12,r13
   2d350:	6485803a 	cmpltu	r2,r12,r18
   2d354:	8947c83a 	sub	r3,r17,r5
   2d358:	1887c83a 	sub	r3,r3,r2
   2d35c:	1880202c 	andhi	r2,r3,128
   2d360:	10002d1e 	bne	r2,zero,2d418 <__subdf3+0x664>
   2d364:	90c4b03a 	or	r2,r18,r3
   2d368:	10005426 	beq	r2,zero,2d4bc <__subdf3+0x708>
   2d36c:	1823883a 	mov	r17,r3
   2d370:	003ecd06 	br	2cea8 <__subdf3+0xf4>
   2d374:	40bff804 	addi	r2,r8,-32
   2d378:	40c00820 	cmpeqi	r3,r8,32
   2d37c:	2884d83a 	srl	r2,r5,r2
   2d380:	1800041e 	bne	r3,zero,2d394 <__subdf3+0x5e0>
   2d384:	00c01004 	movi	r3,64
   2d388:	1a07c83a 	sub	r3,r3,r8
   2d38c:	28c6983a 	sll	r3,r5,r3
   2d390:	68dab03a 	or	r13,r13,r3
   2d394:	6824c03a 	cmpne	r18,r13,zero
   2d398:	90a4b03a 	or	r18,r18,r2
   2d39c:	003eba06 	br	2ce88 <__subdf3+0xd4>
   2d3a0:	29402034 	orhi	r5,r5,128
   2d3a4:	003f0406 	br	2cfb8 <__subdf3+0x204>
   2d3a8:	2804977a 	slli	r2,r5,29
   2d3ac:	00c80034 	movhi	r3,8192
   2d3b0:	18ffffc4 	addi	r3,r3,-1
   2d3b4:	30c6703a 	and	r3,r6,r3
   2d3b8:	280ad0fa 	srli	r5,r5,3
   2d3bc:	10c4b03a 	or	r2,r2,r3
   2d3c0:	003f3a06 	br	2d0ac <__subdf3+0x2f8>
   2d3c4:	017fe034 	movhi	r5,65408
   2d3c8:	297fffc4 	addi	r5,r5,-1
   2d3cc:	114a703a 	and	r5,r2,r5
   2d3d0:	2804977a 	slli	r2,r5,29
   2d3d4:	80e1c83a 	sub	r16,r16,r3
   2d3d8:	280ad0fa 	srli	r5,r5,3
   2d3dc:	003fb006 	br	2d2a0 <__subdf3+0x4ec>
   2d3e0:	1881ffe0 	cmpeqi	r2,r3,2047
   2d3e4:	103f501e 	bne	r2,zero,2d128 <__subdf3+0x374>
   2d3e8:	6349883a 	add	r4,r12,r13
   2d3ec:	894b883a 	add	r5,r17,r5
   2d3f0:	2305803a 	cmpltu	r2,r4,r12
   2d3f4:	2885883a 	add	r2,r5,r2
   2d3f8:	2008d07a 	srli	r4,r4,1
   2d3fc:	102497fa 	slli	r18,r2,31
   2d400:	1022d07a 	srli	r17,r2,1
   2d404:	208001cc 	andi	r2,r4,7
   2d408:	9124b03a 	or	r18,r18,r4
   2d40c:	1821883a 	mov	r16,r3
   2d410:	103ebd1e 	bne	r2,zero,2cf08 <__subdf3+0x154>
   2d414:	003fcb06 	br	2d344 <__subdf3+0x590>
   2d418:	6b25c83a 	sub	r18,r13,r12
   2d41c:	2c4bc83a 	sub	r5,r5,r17
   2d420:	6c9b803a 	cmpltu	r13,r13,r18
   2d424:	2b63c83a 	sub	r17,r5,r13
   2d428:	5029883a 	mov	r20,r10
   2d42c:	5027883a 	mov	r19,r10
   2d430:	003e9d06 	br	2cea8 <__subdf3+0xf4>
   2d434:	183f9f1e 	bne	r3,zero,2d2b4 <__subdf3+0x500>
   2d438:	10009f26 	beq	r2,zero,2d6b8 <__subdf3+0x904>
   2d43c:	2804977a 	slli	r2,r5,29
   2d440:	00c80034 	movhi	r3,8192
   2d444:	18ffffc4 	addi	r3,r3,-1
   2d448:	30c6703a 	and	r3,r6,r3
   2d44c:	280ad0fa 	srli	r5,r5,3
   2d450:	5029883a 	mov	r20,r10
   2d454:	10c4b03a 	or	r2,r2,r3
   2d458:	003f1406 	br	2d0ac <__subdf3+0x2f8>
   2d45c:	6365c83a 	sub	r18,r12,r13
   2d460:	894bc83a 	sub	r5,r17,r5
   2d464:	6485803a 	cmpltu	r2,r12,r18
   2d468:	28a3c83a 	sub	r17,r5,r2
   2d46c:	04000044 	movi	r16,1
   2d470:	003e8806 	br	2ce94 <__subdf3+0xe0>
   2d474:	11000e48 	cmpgei	r4,r2,57
   2d478:	2000a81e 	bne	r4,zero,2d71c <__subdf3+0x968>
   2d47c:	8c402034 	orhi	r17,r17,128
   2d480:	5027883a 	mov	r19,r10
   2d484:	3829883a 	mov	r20,r7
   2d488:	11000808 	cmpgei	r4,r2,32
   2d48c:	2000231e 	bne	r4,zero,2d51c <__subdf3+0x768>
   2d490:	01000804 	movi	r4,32
   2d494:	2089c83a 	sub	r4,r4,r2
   2d498:	8924983a 	sll	r18,r17,r4
   2d49c:	608cd83a 	srl	r6,r12,r2
   2d4a0:	6108983a 	sll	r4,r12,r4
   2d4a4:	8884d83a 	srl	r2,r17,r2
   2d4a8:	91a4b03a 	or	r18,r18,r6
   2d4ac:	2008c03a 	cmpne	r4,r4,zero
   2d4b0:	9124b03a 	or	r18,r18,r4
   2d4b4:	288bc83a 	sub	r5,r5,r2
   2d4b8:	003ee106 	br	2d040 <__subdf3+0x28c>
   2d4bc:	0029883a 	mov	r20,zero
   2d4c0:	0007883a 	mov	r3,zero
   2d4c4:	0009883a 	mov	r4,zero
   2d4c8:	003ea506 	br	2cf60 <__subdf3+0x1ac>
   2d4cc:	40bff804 	addi	r2,r8,-32
   2d4d0:	40c00820 	cmpeqi	r3,r8,32
   2d4d4:	2884d83a 	srl	r2,r5,r2
   2d4d8:	1800041e 	bne	r3,zero,2d4ec <__subdf3+0x738>
   2d4dc:	00c01004 	movi	r3,64
   2d4e0:	1a07c83a 	sub	r3,r3,r8
   2d4e4:	28c6983a 	sll	r3,r5,r3
   2d4e8:	68dab03a 	or	r13,r13,r3
   2d4ec:	6824c03a 	cmpne	r18,r13,zero
   2d4f0:	90a4b03a 	or	r18,r18,r2
   2d4f4:	003efa06 	br	2d0e0 <__subdf3+0x32c>
   2d4f8:	8806977a 	slli	r3,r17,29
   2d4fc:	00880034 	movhi	r2,8192
   2d500:	10bfffc4 	addi	r2,r2,-1
   2d504:	2084703a 	and	r2,r4,r2
   2d508:	880ad0fa 	srli	r5,r17,3
   2d50c:	10c4b03a 	or	r2,r2,r3
   2d510:	003f6306 	br	2d2a0 <__subdf3+0x4ec>
   2d514:	04800044 	movi	r18,1
   2d518:	003f3d06 	br	2d210 <__subdf3+0x45c>
   2d51c:	113ff804 	addi	r4,r2,-32
   2d520:	11800820 	cmpeqi	r6,r2,32
   2d524:	8908d83a 	srl	r4,r17,r4
   2d528:	3000041e 	bne	r6,zero,2d53c <__subdf3+0x788>
   2d52c:	01801004 	movi	r6,64
   2d530:	3085c83a 	sub	r2,r6,r2
   2d534:	8884983a 	sll	r2,r17,r2
   2d538:	6098b03a 	or	r12,r12,r2
   2d53c:	6024c03a 	cmpne	r18,r12,zero
   2d540:	9124b03a 	or	r18,r18,r4
   2d544:	003ebe06 	br	2d040 <__subdf3+0x28c>
   2d548:	10005026 	beq	r2,zero,2d68c <__subdf3+0x8d8>
   2d54c:	2b5ab03a 	or	r13,r5,r13
   2d550:	683f5926 	beq	r13,zero,2d2b8 <__subdf3+0x504>
   2d554:	880ed0fa 	srli	r7,r17,3
   2d558:	00c80034 	movhi	r3,8192
   2d55c:	8822977a 	slli	r17,r17,29
   2d560:	18ffffc4 	addi	r3,r3,-1
   2d564:	20c4703a 	and	r2,r4,r3
   2d568:	3900022c 	andhi	r4,r7,8
   2d56c:	1444b03a 	or	r2,r2,r17
   2d570:	20000826 	beq	r4,zero,2d594 <__subdf3+0x7e0>
   2d574:	2808d0fa 	srli	r4,r5,3
   2d578:	2200022c 	andhi	r8,r4,8
   2d57c:	4000051e 	bne	r8,zero,2d594 <__subdf3+0x7e0>
   2d580:	2804977a 	slli	r2,r5,29
   2d584:	30c6703a 	and	r3,r6,r3
   2d588:	5029883a 	mov	r20,r10
   2d58c:	1884b03a 	or	r2,r3,r2
   2d590:	200f883a 	mov	r7,r4
   2d594:	380b883a 	mov	r5,r7
   2d598:	003ec406 	br	2d0ac <__subdf3+0x2f8>
   2d59c:	6b25c83a 	sub	r18,r13,r12
   2d5a0:	2c4bc83a 	sub	r5,r5,r17
   2d5a4:	6c9b803a 	cmpltu	r13,r13,r18
   2d5a8:	2b63c83a 	sub	r17,r5,r13
   2d5ac:	4829883a 	mov	r20,r9
   2d5b0:	5027883a 	mov	r19,r10
   2d5b4:	04000044 	movi	r16,1
   2d5b8:	003e3606 	br	2ce94 <__subdf3+0xe0>
   2d5bc:	103fbf26 	beq	r2,zero,2d4bc <__subdf3+0x708>
   2d5c0:	2806977a 	slli	r3,r5,29
   2d5c4:	00880034 	movhi	r2,8192
   2d5c8:	10bfffc4 	addi	r2,r2,-1
   2d5cc:	3084703a 	and	r2,r6,r2
   2d5d0:	280ad0fa 	srli	r5,r5,3
   2d5d4:	5029883a 	mov	r20,r10
   2d5d8:	10c4b03a 	or	r2,r2,r3
   2d5dc:	003f3006 	br	2d2a0 <__subdf3+0x4ec>
   2d5e0:	04000084 	movi	r16,2
   2d5e4:	003ec606 	br	2d100 <__subdf3+0x34c>
   2d5e8:	8804977a 	slli	r2,r17,29
   2d5ec:	00c80034 	movhi	r3,8192
   2d5f0:	18ffffc4 	addi	r3,r3,-1
   2d5f4:	20c8703a 	and	r4,r4,r3
   2d5f8:	880ad0fa 	srli	r5,r17,3
   2d5fc:	1104b03a 	or	r2,r2,r4
   2d600:	003eaa06 	br	2d0ac <__subdf3+0x2f8>
   2d604:	6819883a 	mov	r12,r13
   2d608:	2823883a 	mov	r17,r5
   2d60c:	003f3406 	br	2d2e0 <__subdf3+0x52c>
   2d610:	2806977a 	slli	r3,r5,29
   2d614:	00880034 	movhi	r2,8192
   2d618:	10bfffc4 	addi	r2,r2,-1
   2d61c:	3084703a 	and	r2,r6,r2
   2d620:	280ad0fa 	srli	r5,r5,3
   2d624:	10c4b03a 	or	r2,r2,r3
   2d628:	003f1d06 	br	2d2a0 <__subdf3+0x4ec>
   2d62c:	2806977a 	slli	r3,r5,29
   2d630:	00880034 	movhi	r2,8192
   2d634:	10bfffc4 	addi	r2,r2,-1
   2d638:	3084703a 	and	r2,r6,r2
   2d63c:	280ad0fa 	srli	r5,r5,3
   2d640:	10c4b03a 	or	r2,r2,r3
   2d644:	4829883a 	mov	r20,r9
   2d648:	003e9806 	br	2d0ac <__subdf3+0x2f8>
   2d64c:	113ff804 	addi	r4,r2,-32
   2d650:	11800820 	cmpeqi	r6,r2,32
   2d654:	8908d83a 	srl	r4,r17,r4
   2d658:	3000041e 	bne	r6,zero,2d66c <__subdf3+0x8b8>
   2d65c:	01801004 	movi	r6,64
   2d660:	3085c83a 	sub	r2,r6,r2
   2d664:	8884983a 	sll	r2,r17,r2
   2d668:	6098b03a 	or	r12,r12,r2
   2d66c:	6024c03a 	cmpne	r18,r12,zero
   2d670:	9124b03a 	or	r18,r18,r4
   2d674:	003ee606 	br	2d210 <__subdf3+0x45c>
   2d678:	6365883a 	add	r18,r12,r13
   2d67c:	894b883a 	add	r5,r17,r5
   2d680:	935b803a 	cmpltu	r13,r18,r13
   2d684:	2b63883a 	add	r17,r5,r13
   2d688:	003eaf06 	br	2d148 <__subdf3+0x394>
   2d68c:	2804977a 	slli	r2,r5,29
   2d690:	00c80034 	movhi	r3,8192
   2d694:	18ffffc4 	addi	r3,r3,-1
   2d698:	30cc703a 	and	r6,r6,r3
   2d69c:	280ad0fa 	srli	r5,r5,3
   2d6a0:	3084b03a 	or	r2,r6,r2
   2d6a4:	003e8106 	br	2d0ac <__subdf3+0x2f8>
   2d6a8:	90c4b03a 	or	r2,r18,r3
   2d6ac:	103f8326 	beq	r2,zero,2d4bc <__subdf3+0x708>
   2d6b0:	1823883a 	mov	r17,r3
   2d6b4:	003f2306 	br	2d344 <__subdf3+0x590>
   2d6b8:	01400434 	movhi	r5,16
   2d6bc:	297fffc4 	addi	r5,r5,-1
   2d6c0:	00bfffc4 	movi	r2,-1
   2d6c4:	0029883a 	mov	r20,zero
   2d6c8:	003e7a06 	br	2d0b4 <__subdf3+0x300>
   2d6cc:	2806977a 	slli	r3,r5,29
   2d6d0:	00880034 	movhi	r2,8192
   2d6d4:	10bfffc4 	addi	r2,r2,-1
   2d6d8:	3084703a 	and	r2,r6,r2
   2d6dc:	280ad0fa 	srli	r5,r5,3
   2d6e0:	10c4b03a 	or	r2,r2,r3
   2d6e4:	003e7106 	br	2d0ac <__subdf3+0x2f8>
   2d6e8:	01000804 	movi	r4,32
   2d6ec:	20c9c83a 	sub	r4,r4,r3
   2d6f0:	000b883a 	mov	r5,zero
   2d6f4:	003dfd06 	br	2ceec <__subdf3+0x138>
   2d6f8:	0005883a 	mov	r2,zero
   2d6fc:	00c1ffc4 	movi	r3,2047
   2d700:	0009883a 	mov	r4,zero
   2d704:	003e1606 	br	2cf60 <__subdf3+0x1ac>
   2d708:	403e9526 	beq	r8,zero,2d160 <__subdf3+0x3ac>
   2d70c:	1c05c83a 	sub	r2,r3,r16
   2d710:	803f581e 	bne	r16,zero,2d474 <__subdf3+0x6c0>
   2d714:	1021883a 	mov	r16,r2
   2d718:	003e3e06 	br	2d014 <__subdf3+0x260>
   2d71c:	5027883a 	mov	r19,r10
   2d720:	3829883a 	mov	r20,r7
   2d724:	04800044 	movi	r18,1
   2d728:	003e4506 	br	2d040 <__subdf3+0x28c>
   2d72c:	403ef326 	beq	r8,zero,2d2fc <__subdf3+0x548>
   2d730:	1c05c83a 	sub	r2,r3,r16
   2d734:	8000021e 	bne	r16,zero,2d740 <__subdf3+0x98c>
   2d738:	1021883a 	mov	r16,r2
   2d73c:	003ea006 	br	2d1c0 <__subdf3+0x40c>
   2d740:	11000e48 	cmpgei	r4,r2,57
   2d744:	203f731e 	bne	r4,zero,2d514 <__subdf3+0x760>
   2d748:	8c402034 	orhi	r17,r17,128
   2d74c:	003ea406 	br	2d1e0 <__subdf3+0x42c>

0002d750 <__unorddf2>:
   2d750:	2804d53a 	srli	r2,r5,20
   2d754:	3806d53a 	srli	r3,r7,20
   2d758:	02000434 	movhi	r8,16
   2d75c:	1081ffcc 	andi	r2,r2,2047
   2d760:	423fffc4 	addi	r8,r8,-1
   2d764:	1081ffd8 	cmpnei	r2,r2,2047
   2d768:	2a0a703a 	and	r5,r5,r8
   2d76c:	3a0e703a 	and	r7,r7,r8
   2d770:	18c1ffcc 	andi	r3,r3,2047
   2d774:	10000426 	beq	r2,zero,2d788 <__unorddf2+0x38>
   2d778:	18c1ffd8 	cmpnei	r3,r3,2047
   2d77c:	18000626 	beq	r3,zero,2d798 <__unorddf2+0x48>
   2d780:	0005883a 	mov	r2,zero
   2d784:	f800283a 	ret
   2d788:	290ab03a 	or	r5,r5,r4
   2d78c:	283ffa26 	beq	r5,zero,2d778 <__unorddf2+0x28>
   2d790:	00800044 	movi	r2,1
   2d794:	f800283a 	ret
   2d798:	398eb03a 	or	r7,r7,r6
   2d79c:	3804c03a 	cmpne	r2,r7,zero
   2d7a0:	f800283a 	ret

0002d7a4 <__fixdfsi>:
   2d7a4:	2804d53a 	srli	r2,r5,20
   2d7a8:	00c00434 	movhi	r3,16
   2d7ac:	18ffffc4 	addi	r3,r3,-1
   2d7b0:	1081ffcc 	andi	r2,r2,2047
   2d7b4:	1180ffd0 	cmplti	r6,r2,1023
   2d7b8:	280ed7fa 	srli	r7,r5,31
   2d7bc:	28ca703a 	and	r5,r5,r3
   2d7c0:	3000061e 	bne	r6,zero,2d7dc <__fixdfsi+0x38>
   2d7c4:	10c10790 	cmplti	r3,r2,1054
   2d7c8:	1800061e 	bne	r3,zero,2d7e4 <__fixdfsi+0x40>
   2d7cc:	00a00034 	movhi	r2,32768
   2d7d0:	10bfffc4 	addi	r2,r2,-1
   2d7d4:	3885883a 	add	r2,r7,r2
   2d7d8:	f800283a 	ret
   2d7dc:	0005883a 	mov	r2,zero
   2d7e0:	f800283a 	ret
   2d7e4:	00c10cc4 	movi	r3,1075
   2d7e8:	1887c83a 	sub	r3,r3,r2
   2d7ec:	19800808 	cmpgei	r6,r3,32
   2d7f0:	29400434 	orhi	r5,r5,16
   2d7f4:	3000071e 	bne	r6,zero,2d814 <__fixdfsi+0x70>
   2d7f8:	10befb44 	addi	r2,r2,-1043
   2d7fc:	2884983a 	sll	r2,r5,r2
   2d800:	20c8d83a 	srl	r4,r4,r3
   2d804:	1104b03a 	or	r2,r2,r4
   2d808:	383ff526 	beq	r7,zero,2d7e0 <__fixdfsi+0x3c>
   2d80c:	0085c83a 	sub	r2,zero,r2
   2d810:	f800283a 	ret
   2d814:	00c104c4 	movi	r3,1043
   2d818:	1885c83a 	sub	r2,r3,r2
   2d81c:	2884d83a 	srl	r2,r5,r2
   2d820:	003ff906 	br	2d808 <__fixdfsi+0x64>

0002d824 <__floatsidf>:
   2d824:	defffd04 	addi	sp,sp,-12
   2d828:	dfc00215 	stw	ra,8(sp)
   2d82c:	dc400115 	stw	r17,4(sp)
   2d830:	dc000015 	stw	r16,0(sp)
   2d834:	20001326 	beq	r4,zero,2d884 <__floatsidf+0x60>
   2d838:	2022d7fa 	srli	r17,r4,31
   2d83c:	2021883a 	mov	r16,r4
   2d840:	20002416 	blt	r4,zero,2d8d4 <__floatsidf+0xb0>
   2d844:	8009883a 	mov	r4,r16
   2d848:	002d96c0 	call	2d96c <__clzsi2>
   2d84c:	01010784 	movi	r4,1054
   2d850:	2089c83a 	sub	r4,r4,r2
   2d854:	10c002c8 	cmpgei	r3,r2,11
   2d858:	2101ffcc 	andi	r4,r4,2047
   2d85c:	1800161e 	bne	r3,zero,2d8b8 <__floatsidf+0x94>
   2d860:	014002c4 	movi	r5,11
   2d864:	288bc83a 	sub	r5,r5,r2
   2d868:	814ad83a 	srl	r5,r16,r5
   2d86c:	00c00434 	movhi	r3,16
   2d870:	10800544 	addi	r2,r2,21
   2d874:	18ffffc4 	addi	r3,r3,-1
   2d878:	8084983a 	sll	r2,r16,r2
   2d87c:	28ca703a 	and	r5,r5,r3
   2d880:	00000406 	br	2d894 <__floatsidf+0x70>
   2d884:	0023883a 	mov	r17,zero
   2d888:	0009883a 	mov	r4,zero
   2d88c:	000b883a 	mov	r5,zero
   2d890:	0005883a 	mov	r2,zero
   2d894:	2008953a 	slli	r4,r4,20
   2d898:	880697fa 	slli	r3,r17,31
   2d89c:	2148b03a 	or	r4,r4,r5
   2d8a0:	20c6b03a 	or	r3,r4,r3
   2d8a4:	dfc00217 	ldw	ra,8(sp)
   2d8a8:	dc400117 	ldw	r17,4(sp)
   2d8ac:	dc000017 	ldw	r16,0(sp)
   2d8b0:	dec00304 	addi	sp,sp,12
   2d8b4:	f800283a 	ret
   2d8b8:	10bffd44 	addi	r2,r2,-11
   2d8bc:	808a983a 	sll	r5,r16,r2
   2d8c0:	00800434 	movhi	r2,16
   2d8c4:	10bfffc4 	addi	r2,r2,-1
   2d8c8:	288a703a 	and	r5,r5,r2
   2d8cc:	0005883a 	mov	r2,zero
   2d8d0:	003ff006 	br	2d894 <__floatsidf+0x70>
   2d8d4:	0121c83a 	sub	r16,zero,r4
   2d8d8:	003fda06 	br	2d844 <__floatsidf+0x20>

0002d8dc <__floatunsidf>:
   2d8dc:	defffe04 	addi	sp,sp,-8
   2d8e0:	dc000015 	stw	r16,0(sp)
   2d8e4:	dfc00115 	stw	ra,4(sp)
   2d8e8:	2021883a 	mov	r16,r4
   2d8ec:	20000f26 	beq	r4,zero,2d92c <__floatunsidf+0x50>
   2d8f0:	002d96c0 	call	2d96c <__clzsi2>
   2d8f4:	00c10784 	movi	r3,1054
   2d8f8:	1887c83a 	sub	r3,r3,r2
   2d8fc:	110002c8 	cmpgei	r4,r2,11
   2d900:	18c1ffcc 	andi	r3,r3,2047
   2d904:	2000121e 	bne	r4,zero,2d950 <__floatunsidf+0x74>
   2d908:	010002c4 	movi	r4,11
   2d90c:	2089c83a 	sub	r4,r4,r2
   2d910:	8108d83a 	srl	r4,r16,r4
   2d914:	01400434 	movhi	r5,16
   2d918:	10800544 	addi	r2,r2,21
   2d91c:	297fffc4 	addi	r5,r5,-1
   2d920:	80a0983a 	sll	r16,r16,r2
   2d924:	214a703a 	and	r5,r4,r5
   2d928:	00000206 	br	2d934 <__floatunsidf+0x58>
   2d92c:	0007883a 	mov	r3,zero
   2d930:	000b883a 	mov	r5,zero
   2d934:	1806953a 	slli	r3,r3,20
   2d938:	8005883a 	mov	r2,r16
   2d93c:	1946b03a 	or	r3,r3,r5
   2d940:	dfc00117 	ldw	ra,4(sp)
   2d944:	dc000017 	ldw	r16,0(sp)
   2d948:	dec00204 	addi	sp,sp,8
   2d94c:	f800283a 	ret
   2d950:	117ffd44 	addi	r5,r2,-11
   2d954:	814a983a 	sll	r5,r16,r5
   2d958:	00800434 	movhi	r2,16
   2d95c:	10bfffc4 	addi	r2,r2,-1
   2d960:	288a703a 	and	r5,r5,r2
   2d964:	0021883a 	mov	r16,zero
   2d968:	003ff206 	br	2d934 <__floatunsidf+0x58>

0002d96c <__clzsi2>:
   2d96c:	00bfffd4 	movui	r2,65535
   2d970:	11000a36 	bltu	r2,r4,2d99c <__clzsi2+0x30>
   2d974:	20c04028 	cmpgeui	r3,r4,256
   2d978:	180690fa 	slli	r3,r3,3
   2d97c:	00800804 	movi	r2,32
   2d980:	10c5c83a 	sub	r2,r2,r3
   2d984:	20c8d83a 	srl	r4,r4,r3
   2d988:	00c000f4 	movhi	r3,3
   2d98c:	20c7883a 	add	r3,r4,r3
   2d990:	18c2e503 	ldbu	r3,2964(r3)
   2d994:	10c5c83a 	sub	r2,r2,r3
   2d998:	f800283a 	ret
   2d99c:	00804034 	movhi	r2,256
   2d9a0:	2080032e 	bgeu	r4,r2,2d9b0 <__clzsi2+0x44>
   2d9a4:	00800404 	movi	r2,16
   2d9a8:	00c00404 	movi	r3,16
   2d9ac:	003ff506 	br	2d984 <__clzsi2+0x18>
   2d9b0:	00800204 	movi	r2,8
   2d9b4:	00c00604 	movi	r3,24
   2d9b8:	003ff206 	br	2d984 <__clzsi2+0x18>

0002d9bc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d9bc:	defffe04 	addi	sp,sp,-8
   2d9c0:	dfc00115 	stw	ra,4(sp)
   2d9c4:	df000015 	stw	fp,0(sp)
   2d9c8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d9cc:	d0a00917 	ldw	r2,-32732(gp)
   2d9d0:	10000326 	beq	r2,zero,2d9e0 <alt_get_errno+0x24>
   2d9d4:	d0a00917 	ldw	r2,-32732(gp)
   2d9d8:	103ee83a 	callr	r2
   2d9dc:	00000106 	br	2d9e4 <alt_get_errno+0x28>
   2d9e0:	d0a71f04 	addi	r2,gp,-25476
}
   2d9e4:	e037883a 	mov	sp,fp
   2d9e8:	dfc00117 	ldw	ra,4(sp)
   2d9ec:	df000017 	ldw	fp,0(sp)
   2d9f0:	dec00204 	addi	sp,sp,8
   2d9f4:	f800283a 	ret

0002d9f8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2d9f8:	defffb04 	addi	sp,sp,-20
   2d9fc:	dfc00415 	stw	ra,16(sp)
   2da00:	df000315 	stw	fp,12(sp)
   2da04:	df000304 	addi	fp,sp,12
   2da08:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2da0c:	e0bffd17 	ldw	r2,-12(fp)
   2da10:	10000616 	blt	r2,zero,2da2c <close+0x34>
   2da14:	e0bffd17 	ldw	r2,-12(fp)
   2da18:	10c00324 	muli	r3,r2,12
   2da1c:	008000f4 	movhi	r2,3
   2da20:	1085ac04 	addi	r2,r2,5808
   2da24:	1885883a 	add	r2,r3,r2
   2da28:	00000106 	br	2da30 <close+0x38>
   2da2c:	0005883a 	mov	r2,zero
   2da30:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
   2da34:	e0bfff17 	ldw	r2,-4(fp)
   2da38:	10001926 	beq	r2,zero,2daa0 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2da3c:	e0bfff17 	ldw	r2,-4(fp)
   2da40:	10800017 	ldw	r2,0(r2)
   2da44:	10800417 	ldw	r2,16(r2)
   2da48:	10000626 	beq	r2,zero,2da64 <close+0x6c>
   2da4c:	e0bfff17 	ldw	r2,-4(fp)
   2da50:	10800017 	ldw	r2,0(r2)
   2da54:	10800417 	ldw	r2,16(r2)
   2da58:	e13fff17 	ldw	r4,-4(fp)
   2da5c:	103ee83a 	callr	r2
   2da60:	00000106 	br	2da68 <close+0x70>
   2da64:	0005883a 	mov	r2,zero
   2da68:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2da6c:	e13ffd17 	ldw	r4,-12(fp)
   2da70:	002e2400 	call	2e240 <alt_release_fd>
    if (rval < 0)
   2da74:	e0bffe17 	ldw	r2,-8(fp)
   2da78:	1000070e 	bge	r2,zero,2da98 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   2da7c:	002d9bc0 	call	2d9bc <alt_get_errno>
   2da80:	1007883a 	mov	r3,r2
   2da84:	e0bffe17 	ldw	r2,-8(fp)
   2da88:	0085c83a 	sub	r2,zero,r2
   2da8c:	18800015 	stw	r2,0(r3)
      return -1;
   2da90:	00bfffc4 	movi	r2,-1
   2da94:	00000706 	br	2dab4 <close+0xbc>
    }
    return 0;
   2da98:	0005883a 	mov	r2,zero
   2da9c:	00000506 	br	2dab4 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2daa0:	002d9bc0 	call	2d9bc <alt_get_errno>
   2daa4:	1007883a 	mov	r3,r2
   2daa8:	00801444 	movi	r2,81
   2daac:	18800015 	stw	r2,0(r3)
    return -1;
   2dab0:	00bfffc4 	movi	r2,-1
  }
}
   2dab4:	e037883a 	mov	sp,fp
   2dab8:	dfc00117 	ldw	ra,4(sp)
   2dabc:	df000017 	ldw	fp,0(sp)
   2dac0:	dec00204 	addi	sp,sp,8
   2dac4:	f800283a 	ret

0002dac8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2dac8:	defffc04 	addi	sp,sp,-16
   2dacc:	df000315 	stw	fp,12(sp)
   2dad0:	df000304 	addi	fp,sp,12
   2dad4:	e13fff15 	stw	r4,-4(fp)
   2dad8:	e17ffe15 	stw	r5,-8(fp)
   2dadc:	e1bffd15 	stw	r6,-12(fp)
  return len;
   2dae0:	e0bffd17 	ldw	r2,-12(fp)
}
   2dae4:	e037883a 	mov	sp,fp
   2dae8:	df000017 	ldw	fp,0(sp)
   2daec:	dec00104 	addi	sp,sp,4
   2daf0:	f800283a 	ret

0002daf4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   2daf4:	defffd04 	addi	sp,sp,-12
   2daf8:	df000215 	stw	fp,8(sp)
   2dafc:	df000204 	addi	fp,sp,8
   2db00:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   2db04:	0001883a 	nop
   2db08:	e0bffe17 	ldw	r2,-8(fp)
   2db0c:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   2db10:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   2db14:	10000226 	beq	r2,zero,2db20 <_exit+0x2c>
    ALT_SIM_FAIL();
   2db18:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
   2db1c:	00000106 	br	2db24 <_exit+0x30>
    ALT_SIM_PASS();
   2db20:	002af0b0 	cmpltui	zero,zero,43970
}
   2db24:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   2db28:	0001883a 	nop
   2db2c:	003ffe06 	br	2db28 <_exit+0x34>

0002db30 <alt_get_errno>:
{
   2db30:	defffe04 	addi	sp,sp,-8
   2db34:	dfc00115 	stw	ra,4(sp)
   2db38:	df000015 	stw	fp,0(sp)
   2db3c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2db40:	d0a00917 	ldw	r2,-32732(gp)
   2db44:	10000326 	beq	r2,zero,2db54 <alt_get_errno+0x24>
   2db48:	d0a00917 	ldw	r2,-32732(gp)
   2db4c:	103ee83a 	callr	r2
   2db50:	00000106 	br	2db58 <alt_get_errno+0x28>
   2db54:	d0a71f04 	addi	r2,gp,-25476
}
   2db58:	e037883a 	mov	sp,fp
   2db5c:	dfc00117 	ldw	ra,4(sp)
   2db60:	df000017 	ldw	fp,0(sp)
   2db64:	dec00204 	addi	sp,sp,8
   2db68:	f800283a 	ret

0002db6c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2db6c:	defffb04 	addi	sp,sp,-20
   2db70:	dfc00415 	stw	ra,16(sp)
   2db74:	df000315 	stw	fp,12(sp)
   2db78:	df000304 	addi	fp,sp,12
   2db7c:	e13ffe15 	stw	r4,-8(fp)
   2db80:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2db84:	e0bffe17 	ldw	r2,-8(fp)
   2db88:	10000616 	blt	r2,zero,2dba4 <fstat+0x38>
   2db8c:	e0bffe17 	ldw	r2,-8(fp)
   2db90:	10c00324 	muli	r3,r2,12
   2db94:	008000f4 	movhi	r2,3
   2db98:	1085ac04 	addi	r2,r2,5808
   2db9c:	1885883a 	add	r2,r3,r2
   2dba0:	00000106 	br	2dba8 <fstat+0x3c>
   2dba4:	0005883a 	mov	r2,zero
   2dba8:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2dbac:	e0bfff17 	ldw	r2,-4(fp)
   2dbb0:	10001026 	beq	r2,zero,2dbf4 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2dbb4:	e0bfff17 	ldw	r2,-4(fp)
   2dbb8:	10800017 	ldw	r2,0(r2)
   2dbbc:	10800817 	ldw	r2,32(r2)
   2dbc0:	10000726 	beq	r2,zero,2dbe0 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   2dbc4:	e0bfff17 	ldw	r2,-4(fp)
   2dbc8:	10800017 	ldw	r2,0(r2)
   2dbcc:	10800817 	ldw	r2,32(r2)
   2dbd0:	e17ffd17 	ldw	r5,-12(fp)
   2dbd4:	e13fff17 	ldw	r4,-4(fp)
   2dbd8:	103ee83a 	callr	r2
   2dbdc:	00000a06 	br	2dc08 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2dbe0:	e0bffd17 	ldw	r2,-12(fp)
   2dbe4:	00c80004 	movi	r3,8192
   2dbe8:	10c00115 	stw	r3,4(r2)
      return 0;
   2dbec:	0005883a 	mov	r2,zero
   2dbf0:	00000506 	br	2dc08 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2dbf4:	002db300 	call	2db30 <alt_get_errno>
   2dbf8:	1007883a 	mov	r3,r2
   2dbfc:	00801444 	movi	r2,81
   2dc00:	18800015 	stw	r2,0(r3)
    return -1;
   2dc04:	00bfffc4 	movi	r2,-1
  }
}
   2dc08:	e037883a 	mov	sp,fp
   2dc0c:	dfc00117 	ldw	ra,4(sp)
   2dc10:	df000017 	ldw	fp,0(sp)
   2dc14:	dec00204 	addi	sp,sp,8
   2dc18:	f800283a 	ret

0002dc1c <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
   2dc1c:	deffff04 	addi	sp,sp,-4
   2dc20:	df000015 	stw	fp,0(sp)
   2dc24:	d839883a 	mov	fp,sp
  return 0;
   2dc28:	0005883a 	mov	r2,zero
}
   2dc2c:	e037883a 	mov	sp,fp
   2dc30:	df000017 	ldw	fp,0(sp)
   2dc34:	dec00104 	addi	sp,sp,4
   2dc38:	f800283a 	ret

0002dc3c <alt_get_errno>:
{
   2dc3c:	defffe04 	addi	sp,sp,-8
   2dc40:	dfc00115 	stw	ra,4(sp)
   2dc44:	df000015 	stw	fp,0(sp)
   2dc48:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2dc4c:	d0a00917 	ldw	r2,-32732(gp)
   2dc50:	10000326 	beq	r2,zero,2dc60 <alt_get_errno+0x24>
   2dc54:	d0a00917 	ldw	r2,-32732(gp)
   2dc58:	103ee83a 	callr	r2
   2dc5c:	00000106 	br	2dc64 <alt_get_errno+0x28>
   2dc60:	d0a71f04 	addi	r2,gp,-25476
}
   2dc64:	e037883a 	mov	sp,fp
   2dc68:	dfc00117 	ldw	ra,4(sp)
   2dc6c:	df000017 	ldw	fp,0(sp)
   2dc70:	dec00204 	addi	sp,sp,8
   2dc74:	f800283a 	ret

0002dc78 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2dc78:	deffea04 	addi	sp,sp,-88
   2dc7c:	dfc01515 	stw	ra,84(sp)
   2dc80:	df001415 	stw	fp,80(sp)
   2dc84:	df001404 	addi	fp,sp,80
   2dc88:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2dc8c:	e0bfec17 	ldw	r2,-80(fp)
   2dc90:	10000616 	blt	r2,zero,2dcac <isatty+0x34>
   2dc94:	e0bfec17 	ldw	r2,-80(fp)
   2dc98:	10c00324 	muli	r3,r2,12
   2dc9c:	008000f4 	movhi	r2,3
   2dca0:	1085ac04 	addi	r2,r2,5808
   2dca4:	1885883a 	add	r2,r3,r2
   2dca8:	00000106 	br	2dcb0 <isatty+0x38>
   2dcac:	0005883a 	mov	r2,zero
   2dcb0:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2dcb4:	e0bfff17 	ldw	r2,-4(fp)
   2dcb8:	10000e26 	beq	r2,zero,2dcf4 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2dcbc:	e0bfff17 	ldw	r2,-4(fp)
   2dcc0:	10800017 	ldw	r2,0(r2)
   2dcc4:	10800817 	ldw	r2,32(r2)
   2dcc8:	1000021e 	bne	r2,zero,2dcd4 <isatty+0x5c>
    {
      return 1;
   2dccc:	00800044 	movi	r2,1
   2dcd0:	00000d06 	br	2dd08 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2dcd4:	e0bfed04 	addi	r2,fp,-76
   2dcd8:	100b883a 	mov	r5,r2
   2dcdc:	e13fec17 	ldw	r4,-80(fp)
   2dce0:	002db6c0 	call	2db6c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2dce4:	e0bfee17 	ldw	r2,-72(fp)
   2dce8:	10880020 	cmpeqi	r2,r2,8192
   2dcec:	10803fcc 	andi	r2,r2,255
   2dcf0:	00000506 	br	2dd08 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2dcf4:	002dc3c0 	call	2dc3c <alt_get_errno>
   2dcf8:	1007883a 	mov	r3,r2
   2dcfc:	00801444 	movi	r2,81
   2dd00:	18800015 	stw	r2,0(r3)
    return 0;
   2dd04:	0005883a 	mov	r2,zero
  }
}
   2dd08:	e037883a 	mov	sp,fp
   2dd0c:	dfc00117 	ldw	ra,4(sp)
   2dd10:	df000017 	ldw	fp,0(sp)
   2dd14:	dec00204 	addi	sp,sp,8
   2dd18:	f800283a 	ret

0002dd1c <alt_get_errno>:
{
   2dd1c:	defffe04 	addi	sp,sp,-8
   2dd20:	dfc00115 	stw	ra,4(sp)
   2dd24:	df000015 	stw	fp,0(sp)
   2dd28:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2dd2c:	d0a00917 	ldw	r2,-32732(gp)
   2dd30:	10000326 	beq	r2,zero,2dd40 <alt_get_errno+0x24>
   2dd34:	d0a00917 	ldw	r2,-32732(gp)
   2dd38:	103ee83a 	callr	r2
   2dd3c:	00000106 	br	2dd44 <alt_get_errno+0x28>
   2dd40:	d0a71f04 	addi	r2,gp,-25476
}
   2dd44:	e037883a 	mov	sp,fp
   2dd48:	dfc00117 	ldw	ra,4(sp)
   2dd4c:	df000017 	ldw	fp,0(sp)
   2dd50:	dec00204 	addi	sp,sp,8
   2dd54:	f800283a 	ret

0002dd58 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
   2dd58:	defffb04 	addi	sp,sp,-20
   2dd5c:	dfc00415 	stw	ra,16(sp)
   2dd60:	df000315 	stw	fp,12(sp)
   2dd64:	df000304 	addi	fp,sp,12
   2dd68:	e13ffe15 	stw	r4,-8(fp)
   2dd6c:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
   2dd70:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
   2dd74:	e0bffe17 	ldw	r2,-8(fp)
   2dd78:	00801d16 	blt	zero,r2,2ddf0 <kill+0x98>
  {
    switch (sig)
   2dd7c:	e0bffd17 	ldw	r2,-12(fp)
   2dd80:	10002026 	beq	r2,zero,2de04 <kill+0xac>
   2dd84:	e0bffd17 	ldw	r2,-12(fp)
   2dd88:	10001616 	blt	r2,zero,2dde4 <kill+0x8c>
   2dd8c:	e0bffd17 	ldw	r2,-12(fp)
   2dd90:	10800808 	cmpgei	r2,r2,32
   2dd94:	1000131e 	bne	r2,zero,2dde4 <kill+0x8c>
   2dd98:	e0bffd17 	ldw	r2,-12(fp)
   2dd9c:	108000d0 	cmplti	r2,r2,3
   2dda0:	1000101e 	bne	r2,zero,2dde4 <kill+0x8c>
   2dda4:	e0bffd17 	ldw	r2,-12(fp)
   2dda8:	00c00044 	movi	r3,1
   2ddac:	1886983a 	sll	r3,r3,r2
   2ddb0:	00b3e074 	movhi	r2,53121
   2ddb4:	10bfde04 	addi	r2,r2,-136
   2ddb8:	1884703a 	and	r2,r3,r2
   2ddbc:	1004c03a 	cmpne	r2,r2,zero
   2ddc0:	10803fcc 	andi	r2,r2,255
   2ddc4:	1000051e 	bne	r2,zero,2dddc <kill+0x84>
   2ddc8:	1880046c 	andhi	r2,r3,17
   2ddcc:	1004c03a 	cmpne	r2,r2,zero
   2ddd0:	10803fcc 	andi	r2,r2,255
   2ddd4:	10000d1e 	bne	r2,zero,2de0c <kill+0xb4>
   2ddd8:	00000206 	br	2dde4 <kill+0x8c>
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
   2dddc:	0009883a 	mov	r4,zero
   2dde0:	002daf40 	call	2daf4 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
   2dde4:	00800584 	movi	r2,22
   2dde8:	e0bfff15 	stw	r2,-4(fp)
   2ddec:	00000806 	br	2de10 <kill+0xb8>
    }
  }

  else if (pid > 0)
   2ddf0:	e0bffe17 	ldw	r2,-8(fp)
   2ddf4:	0080060e 	bge	zero,r2,2de10 <kill+0xb8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
   2ddf8:	008000c4 	movi	r2,3
   2ddfc:	e0bfff15 	stw	r2,-4(fp)
   2de00:	00000306 	br	2de10 <kill+0xb8>
      break;
   2de04:	0001883a 	nop
   2de08:	00000106 	br	2de10 <kill+0xb8>
      break;
   2de0c:	0001883a 	nop
  }

  if (status)
   2de10:	e0bfff17 	ldw	r2,-4(fp)
   2de14:	10000626 	beq	r2,zero,2de30 <kill+0xd8>
  {
    ALT_ERRNO = status;
   2de18:	002dd1c0 	call	2dd1c <alt_get_errno>
   2de1c:	1007883a 	mov	r3,r2
   2de20:	e0bfff17 	ldw	r2,-4(fp)
   2de24:	18800015 	stw	r2,0(r3)
    return -1;
   2de28:	00bfffc4 	movi	r2,-1
   2de2c:	00000106 	br	2de34 <kill+0xdc>
  }

  return 0;
   2de30:	0005883a 	mov	r2,zero
}
   2de34:	e037883a 	mov	sp,fp
   2de38:	dfc00117 	ldw	ra,4(sp)
   2de3c:	df000017 	ldw	fp,0(sp)
   2de40:	dec00204 	addi	sp,sp,8
   2de44:	f800283a 	ret

0002de48 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2de48:	defffc04 	addi	sp,sp,-16
   2de4c:	df000315 	stw	fp,12(sp)
   2de50:	df000304 	addi	fp,sp,12
   2de54:	e13fff15 	stw	r4,-4(fp)
   2de58:	e17ffe15 	stw	r5,-8(fp)
   2de5c:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
   2de60:	e0fffe17 	ldw	r3,-8(fp)
   2de64:	e0bfff17 	ldw	r2,-4(fp)
   2de68:	18800c26 	beq	r3,r2,2de9c <alt_load_section+0x54>
  {
    while( to != end )
   2de6c:	00000806 	br	2de90 <alt_load_section+0x48>
    {
      *to++ = *from++;
   2de70:	e0ffff17 	ldw	r3,-4(fp)
   2de74:	18800104 	addi	r2,r3,4
   2de78:	e0bfff15 	stw	r2,-4(fp)
   2de7c:	e0bffe17 	ldw	r2,-8(fp)
   2de80:	11000104 	addi	r4,r2,4
   2de84:	e13ffe15 	stw	r4,-8(fp)
   2de88:	18c00017 	ldw	r3,0(r3)
   2de8c:	10c00015 	stw	r3,0(r2)
    while( to != end )
   2de90:	e0fffe17 	ldw	r3,-8(fp)
   2de94:	e0bffd17 	ldw	r2,-12(fp)
   2de98:	18bff51e 	bne	r3,r2,2de70 <alt_load_section+0x28>
    }
  }
}
   2de9c:	0001883a 	nop
   2dea0:	e037883a 	mov	sp,fp
   2dea4:	df000017 	ldw	fp,0(sp)
   2dea8:	dec00104 	addi	sp,sp,4
   2deac:	f800283a 	ret

0002deb0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2deb0:	defffe04 	addi	sp,sp,-8
   2deb4:	dfc00115 	stw	ra,4(sp)
   2deb8:	df000015 	stw	fp,0(sp)
   2debc:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2dec0:	018000f4 	movhi	r6,3
   2dec4:	318a4804 	addi	r6,r6,10528
   2dec8:	014000f4 	movhi	r5,3
   2decc:	29433c04 	addi	r5,r5,3312
   2ded0:	010000f4 	movhi	r4,3
   2ded4:	210a4804 	addi	r4,r4,10528
   2ded8:	002de480 	call	2de48 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2dedc:	018000b4 	movhi	r6,2
   2dee0:	31808f04 	addi	r6,r6,572
   2dee4:	014000b4 	movhi	r5,2
   2dee8:	29400804 	addi	r5,r5,32
   2deec:	010000b4 	movhi	r4,2
   2def0:	21000804 	addi	r4,r4,32
   2def4:	002de480 	call	2de48 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2def8:	018000f4 	movhi	r6,3
   2defc:	31833c04 	addi	r6,r6,3312
   2df00:	014000f4 	movhi	r5,3
   2df04:	29417204 	addi	r5,r5,1480
   2df08:	010000f4 	movhi	r4,3
   2df0c:	21017204 	addi	r4,r4,1480
   2df10:	002de480 	call	2de48 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2df14:	002f7d80 	call	2f7d8 <alt_dcache_flush_all>
  alt_icache_flush_all();
   2df18:	002fa340 	call	2fa34 <alt_icache_flush_all>
}
   2df1c:	0001883a 	nop
   2df20:	e037883a 	mov	sp,fp
   2df24:	dfc00117 	ldw	ra,4(sp)
   2df28:	df000017 	ldw	fp,0(sp)
   2df2c:	dec00204 	addi	sp,sp,8
   2df30:	f800283a 	ret

0002df34 <alt_get_errno>:
{
   2df34:	defffe04 	addi	sp,sp,-8
   2df38:	dfc00115 	stw	ra,4(sp)
   2df3c:	df000015 	stw	fp,0(sp)
   2df40:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2df44:	d0a00917 	ldw	r2,-32732(gp)
   2df48:	10000326 	beq	r2,zero,2df58 <alt_get_errno+0x24>
   2df4c:	d0a00917 	ldw	r2,-32732(gp)
   2df50:	103ee83a 	callr	r2
   2df54:	00000106 	br	2df5c <alt_get_errno+0x28>
   2df58:	d0a71f04 	addi	r2,gp,-25476
}
   2df5c:	e037883a 	mov	sp,fp
   2df60:	dfc00117 	ldw	ra,4(sp)
   2df64:	df000017 	ldw	fp,0(sp)
   2df68:	dec00204 	addi	sp,sp,8
   2df6c:	f800283a 	ret

0002df70 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2df70:	defff904 	addi	sp,sp,-28
   2df74:	dfc00615 	stw	ra,24(sp)
   2df78:	df000515 	stw	fp,20(sp)
   2df7c:	df000504 	addi	fp,sp,20
   2df80:	e13ffd15 	stw	r4,-12(fp)
   2df84:	e17ffc15 	stw	r5,-16(fp)
   2df88:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2df8c:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2df90:	e0bffd17 	ldw	r2,-12(fp)
   2df94:	10000616 	blt	r2,zero,2dfb0 <lseek+0x40>
   2df98:	e0bffd17 	ldw	r2,-12(fp)
   2df9c:	10c00324 	muli	r3,r2,12
   2dfa0:	008000f4 	movhi	r2,3
   2dfa4:	1085ac04 	addi	r2,r2,5808
   2dfa8:	1885883a 	add	r2,r3,r2
   2dfac:	00000106 	br	2dfb4 <lseek+0x44>
   2dfb0:	0005883a 	mov	r2,zero
   2dfb4:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
   2dfb8:	e0bffe17 	ldw	r2,-8(fp)
   2dfbc:	10001026 	beq	r2,zero,2e000 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2dfc0:	e0bffe17 	ldw	r2,-8(fp)
   2dfc4:	10800017 	ldw	r2,0(r2)
   2dfc8:	10800717 	ldw	r2,28(r2)
   2dfcc:	10000926 	beq	r2,zero,2dff4 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2dfd0:	e0bffe17 	ldw	r2,-8(fp)
   2dfd4:	10800017 	ldw	r2,0(r2)
   2dfd8:	10800717 	ldw	r2,28(r2)
   2dfdc:	e1bffb17 	ldw	r6,-20(fp)
   2dfe0:	e17ffc17 	ldw	r5,-16(fp)
   2dfe4:	e13ffe17 	ldw	r4,-8(fp)
   2dfe8:	103ee83a 	callr	r2
   2dfec:	e0bfff15 	stw	r2,-4(fp)
   2dff0:	00000506 	br	2e008 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2dff4:	00bfde84 	movi	r2,-134
   2dff8:	e0bfff15 	stw	r2,-4(fp)
   2dffc:	00000206 	br	2e008 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   2e000:	00bfebc4 	movi	r2,-81
   2e004:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
   2e008:	e0bfff17 	ldw	r2,-4(fp)
   2e00c:	1000070e 	bge	r2,zero,2e02c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   2e010:	002df340 	call	2df34 <alt_get_errno>
   2e014:	1007883a 	mov	r3,r2
   2e018:	e0bfff17 	ldw	r2,-4(fp)
   2e01c:	0085c83a 	sub	r2,zero,r2
   2e020:	18800015 	stw	r2,0(r3)
    rc = -1;
   2e024:	00bfffc4 	movi	r2,-1
   2e028:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
   2e02c:	e0bfff17 	ldw	r2,-4(fp)
}
   2e030:	e037883a 	mov	sp,fp
   2e034:	dfc00117 	ldw	ra,4(sp)
   2e038:	df000017 	ldw	fp,0(sp)
   2e03c:	dec00204 	addi	sp,sp,8
   2e040:	f800283a 	ret

0002e044 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2e044:	defffd04 	addi	sp,sp,-12
   2e048:	dfc00215 	stw	ra,8(sp)
   2e04c:	df000115 	stw	fp,4(sp)
   2e050:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2e054:	0009883a 	mov	r4,zero
   2e058:	002e4e80 	call	2e4e8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   2e05c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2e060:	002e5240 	call	2e524 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2e064:	018000f4 	movhi	r6,3
   2e068:	31832804 	addi	r6,r6,3232
   2e06c:	014000f4 	movhi	r5,3
   2e070:	29432804 	addi	r5,r5,3232
   2e074:	010000f4 	movhi	r4,3
   2e078:	21032804 	addi	r4,r4,3232
   2e07c:	002fb040 	call	2fb04 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2e080:	002f8dc0 	call	2f8dc <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2e084:	010000f4 	movhi	r4,3
   2e088:	213e5004 	addi	r4,r4,-1728
   2e08c:	00303580 	call	30358 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2e090:	d0a72117 	ldw	r2,-25468(gp)
   2e094:	d0e72217 	ldw	r3,-25464(gp)
   2e098:	d1272317 	ldw	r4,-25460(gp)
   2e09c:	200d883a 	mov	r6,r4
   2e0a0:	180b883a 	mov	r5,r3
   2e0a4:	1009883a 	mov	r4,r2
   2e0a8:	00204940 	call	20494 <main>
   2e0ac:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2e0b0:	01000044 	movi	r4,1
   2e0b4:	002d9f80 	call	2d9f8 <close>
  exit (result);
   2e0b8:	e13fff17 	ldw	r4,-4(fp)
   2e0bc:	003036c0 	call	3036c <exit>

0002e0c0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2e0c0:	defffe04 	addi	sp,sp,-8
   2e0c4:	df000115 	stw	fp,4(sp)
   2e0c8:	df000104 	addi	fp,sp,4
   2e0cc:	e13fff15 	stw	r4,-4(fp)
}
   2e0d0:	0001883a 	nop
   2e0d4:	e037883a 	mov	sp,fp
   2e0d8:	df000017 	ldw	fp,0(sp)
   2e0dc:	dec00104 	addi	sp,sp,4
   2e0e0:	f800283a 	ret

0002e0e4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2e0e4:	defffe04 	addi	sp,sp,-8
   2e0e8:	df000115 	stw	fp,4(sp)
   2e0ec:	df000104 	addi	fp,sp,4
   2e0f0:	e13fff15 	stw	r4,-4(fp)
}
   2e0f4:	0001883a 	nop
   2e0f8:	e037883a 	mov	sp,fp
   2e0fc:	df000017 	ldw	fp,0(sp)
   2e100:	dec00104 	addi	sp,sp,4
   2e104:	f800283a 	ret

0002e108 <alt_get_errno>:
{
   2e108:	defffe04 	addi	sp,sp,-8
   2e10c:	dfc00115 	stw	ra,4(sp)
   2e110:	df000015 	stw	fp,0(sp)
   2e114:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e118:	d0a00917 	ldw	r2,-32732(gp)
   2e11c:	10000326 	beq	r2,zero,2e12c <alt_get_errno+0x24>
   2e120:	d0a00917 	ldw	r2,-32732(gp)
   2e124:	103ee83a 	callr	r2
   2e128:	00000106 	br	2e130 <alt_get_errno+0x28>
   2e12c:	d0a71f04 	addi	r2,gp,-25476
}
   2e130:	e037883a 	mov	sp,fp
   2e134:	dfc00117 	ldw	ra,4(sp)
   2e138:	df000017 	ldw	fp,0(sp)
   2e13c:	dec00204 	addi	sp,sp,8
   2e140:	f800283a 	ret

0002e144 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   2e144:	defff904 	addi	sp,sp,-28
   2e148:	dfc00615 	stw	ra,24(sp)
   2e14c:	df000515 	stw	fp,20(sp)
   2e150:	df000504 	addi	fp,sp,20
   2e154:	e13ffd15 	stw	r4,-12(fp)
   2e158:	e17ffc15 	stw	r5,-16(fp)
   2e15c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2e160:	e0bffd17 	ldw	r2,-12(fp)
   2e164:	10000616 	blt	r2,zero,2e180 <read+0x3c>
   2e168:	e0bffd17 	ldw	r2,-12(fp)
   2e16c:	10c00324 	muli	r3,r2,12
   2e170:	008000f4 	movhi	r2,3
   2e174:	1085ac04 	addi	r2,r2,5808
   2e178:	1885883a 	add	r2,r3,r2
   2e17c:	00000106 	br	2e184 <read+0x40>
   2e180:	0005883a 	mov	r2,zero
   2e184:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2e188:	e0bfff17 	ldw	r2,-4(fp)
   2e18c:	10002226 	beq	r2,zero,2e218 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2e190:	e0bfff17 	ldw	r2,-4(fp)
   2e194:	10800217 	ldw	r2,8(r2)
   2e198:	108000cc 	andi	r2,r2,3
   2e19c:	10800060 	cmpeqi	r2,r2,1
   2e1a0:	1000181e 	bne	r2,zero,2e204 <read+0xc0>
        (fd->dev->read))
   2e1a4:	e0bfff17 	ldw	r2,-4(fp)
   2e1a8:	10800017 	ldw	r2,0(r2)
   2e1ac:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2e1b0:	10001426 	beq	r2,zero,2e204 <read+0xc0>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   2e1b4:	e0bfff17 	ldw	r2,-4(fp)
   2e1b8:	10800017 	ldw	r2,0(r2)
   2e1bc:	10800517 	ldw	r2,20(r2)
   2e1c0:	e0fffb17 	ldw	r3,-20(fp)
   2e1c4:	180d883a 	mov	r6,r3
   2e1c8:	e17ffc17 	ldw	r5,-16(fp)
   2e1cc:	e13fff17 	ldw	r4,-4(fp)
   2e1d0:	103ee83a 	callr	r2
   2e1d4:	e0bffe15 	stw	r2,-8(fp)
   2e1d8:	e0bffe17 	ldw	r2,-8(fp)
   2e1dc:	1000070e 	bge	r2,zero,2e1fc <read+0xb8>
        {
          ALT_ERRNO = -rval;
   2e1e0:	002e1080 	call	2e108 <alt_get_errno>
   2e1e4:	1007883a 	mov	r3,r2
   2e1e8:	e0bffe17 	ldw	r2,-8(fp)
   2e1ec:	0085c83a 	sub	r2,zero,r2
   2e1f0:	18800015 	stw	r2,0(r3)
          return -1;
   2e1f4:	00bfffc4 	movi	r2,-1
   2e1f8:	00000c06 	br	2e22c <read+0xe8>
        }
        return rval;
   2e1fc:	e0bffe17 	ldw	r2,-8(fp)
   2e200:	00000a06 	br	2e22c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   2e204:	002e1080 	call	2e108 <alt_get_errno>
   2e208:	1007883a 	mov	r3,r2
   2e20c:	00800344 	movi	r2,13
   2e210:	18800015 	stw	r2,0(r3)
   2e214:	00000406 	br	2e228 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   2e218:	002e1080 	call	2e108 <alt_get_errno>
   2e21c:	1007883a 	mov	r3,r2
   2e220:	00801444 	movi	r2,81
   2e224:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2e228:	00bfffc4 	movi	r2,-1
}
   2e22c:	e037883a 	mov	sp,fp
   2e230:	dfc00117 	ldw	ra,4(sp)
   2e234:	df000017 	ldw	fp,0(sp)
   2e238:	dec00204 	addi	sp,sp,8
   2e23c:	f800283a 	ret

0002e240 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2e240:	defffe04 	addi	sp,sp,-8
   2e244:	df000115 	stw	fp,4(sp)
   2e248:	df000104 	addi	fp,sp,4
   2e24c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   2e250:	e0bfff17 	ldw	r2,-4(fp)
   2e254:	108000d0 	cmplti	r2,r2,3
   2e258:	10000a1e 	bne	r2,zero,2e284 <alt_release_fd+0x44>
  {
    alt_fd_list[fd].fd_flags = 0;
   2e25c:	e0bfff17 	ldw	r2,-4(fp)
   2e260:	10c00324 	muli	r3,r2,12
   2e264:	008000f4 	movhi	r2,3
   2e268:	1885883a 	add	r2,r3,r2
   2e26c:	1005ae15 	stw	zero,5816(r2)
    alt_fd_list[fd].dev      = 0;
   2e270:	e0bfff17 	ldw	r2,-4(fp)
   2e274:	10c00324 	muli	r3,r2,12
   2e278:	008000f4 	movhi	r2,3
   2e27c:	1885883a 	add	r2,r3,r2
   2e280:	1005ac15 	stw	zero,5808(r2)
  }
}
   2e284:	0001883a 	nop
   2e288:	e037883a 	mov	sp,fp
   2e28c:	df000017 	ldw	fp,0(sp)
   2e290:	dec00104 	addi	sp,sp,4
   2e294:	f800283a 	ret

0002e298 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2e298:	defff904 	addi	sp,sp,-28
   2e29c:	df000615 	stw	fp,24(sp)
   2e2a0:	df000604 	addi	fp,sp,24
   2e2a4:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
   2e2a8:	0005303a 	rdctl	r2,status
   2e2ac:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e2b0:	e0fffd17 	ldw	r3,-12(fp)
   2e2b4:	00bfff84 	movi	r2,-2
   2e2b8:	1884703a 	and	r2,r3,r2
   2e2bc:	1001703a 	wrctl	status,r2
  return context;
   2e2c0:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2e2c4:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2e2c8:	d0a00a17 	ldw	r2,-32728(gp)
   2e2cc:	10c000c4 	addi	r3,r2,3
   2e2d0:	00bfff04 	movi	r2,-4
   2e2d4:	1884703a 	and	r2,r3,r2
   2e2d8:	d0a00a15 	stw	r2,-32728(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2e2dc:	d0e00a17 	ldw	r3,-32728(gp)
   2e2e0:	e0bffa17 	ldw	r2,-24(fp)
   2e2e4:	1887883a 	add	r3,r3,r2
   2e2e8:	00800134 	movhi	r2,4
   2e2ec:	10800004 	addi	r2,r2,0
   2e2f0:	10c0072e 	bgeu	r2,r3,2e310 <sbrk+0x78>
   2e2f4:	e0bfff17 	ldw	r2,-4(fp)
   2e2f8:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   2e2fc:	e0bffc17 	ldw	r2,-16(fp)
   2e300:	1001703a 	wrctl	status,r2
}
   2e304:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2e308:	00bfffc4 	movi	r2,-1
   2e30c:	00000c06 	br	2e340 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
   2e310:	d0a00a17 	ldw	r2,-32728(gp)
   2e314:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
   2e318:	d0e00a17 	ldw	r3,-32728(gp)
   2e31c:	e0bffa17 	ldw	r2,-24(fp)
   2e320:	1885883a 	add	r2,r3,r2
   2e324:	d0a00a15 	stw	r2,-32728(gp)
   2e328:	e0bfff17 	ldw	r2,-4(fp)
   2e32c:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
   2e330:	e0bffb17 	ldw	r2,-20(fp)
   2e334:	1001703a 	wrctl	status,r2
}
   2e338:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   2e33c:	e0bffe17 	ldw	r2,-8(fp)
} 
   2e340:	e037883a 	mov	sp,fp
   2e344:	df000017 	ldw	fp,0(sp)
   2e348:	dec00104 	addi	sp,sp,4
   2e34c:	f800283a 	ret

0002e350 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   2e350:	defffd04 	addi	sp,sp,-12
   2e354:	dfc00215 	stw	ra,8(sp)
   2e358:	df000115 	stw	fp,4(sp)
   2e35c:	df000104 	addi	fp,sp,4
   2e360:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   2e364:	e13fff17 	ldw	r4,-4(fp)
   2e368:	002f6800 	call	2f680 <alt_busy_sleep>
}
   2e36c:	e037883a 	mov	sp,fp
   2e370:	dfc00117 	ldw	ra,4(sp)
   2e374:	df000017 	ldw	fp,0(sp)
   2e378:	dec00204 	addi	sp,sp,8
   2e37c:	f800283a 	ret

0002e380 <alt_get_errno>:
{
   2e380:	defffe04 	addi	sp,sp,-8
   2e384:	dfc00115 	stw	ra,4(sp)
   2e388:	df000015 	stw	fp,0(sp)
   2e38c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e390:	d0a00917 	ldw	r2,-32732(gp)
   2e394:	10000326 	beq	r2,zero,2e3a4 <alt_get_errno+0x24>
   2e398:	d0a00917 	ldw	r2,-32732(gp)
   2e39c:	103ee83a 	callr	r2
   2e3a0:	00000106 	br	2e3a8 <alt_get_errno+0x28>
   2e3a4:	d0a71f04 	addi	r2,gp,-25476
}
   2e3a8:	e037883a 	mov	sp,fp
   2e3ac:	dfc00117 	ldw	ra,4(sp)
   2e3b0:	df000017 	ldw	fp,0(sp)
   2e3b4:	dec00204 	addi	sp,sp,8
   2e3b8:	f800283a 	ret

0002e3bc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   2e3bc:	defff904 	addi	sp,sp,-28
   2e3c0:	dfc00615 	stw	ra,24(sp)
   2e3c4:	df000515 	stw	fp,20(sp)
   2e3c8:	df000504 	addi	fp,sp,20
   2e3cc:	e13ffd15 	stw	r4,-12(fp)
   2e3d0:	e17ffc15 	stw	r5,-16(fp)
   2e3d4:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2e3d8:	e0bffd17 	ldw	r2,-12(fp)
   2e3dc:	10000616 	blt	r2,zero,2e3f8 <write+0x3c>
   2e3e0:	e0bffd17 	ldw	r2,-12(fp)
   2e3e4:	10c00324 	muli	r3,r2,12
   2e3e8:	008000f4 	movhi	r2,3
   2e3ec:	1085ac04 	addi	r2,r2,5808
   2e3f0:	1885883a 	add	r2,r3,r2
   2e3f4:	00000106 	br	2e3fc <write+0x40>
   2e3f8:	0005883a 	mov	r2,zero
   2e3fc:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
   2e400:	e0bfff17 	ldw	r2,-4(fp)
   2e404:	10002126 	beq	r2,zero,2e48c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   2e408:	e0bfff17 	ldw	r2,-4(fp)
   2e40c:	10800217 	ldw	r2,8(r2)
   2e410:	108000cc 	andi	r2,r2,3
   2e414:	10001826 	beq	r2,zero,2e478 <write+0xbc>
   2e418:	e0bfff17 	ldw	r2,-4(fp)
   2e41c:	10800017 	ldw	r2,0(r2)
   2e420:	10800617 	ldw	r2,24(r2)
   2e424:	10001426 	beq	r2,zero,2e478 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   2e428:	e0bfff17 	ldw	r2,-4(fp)
   2e42c:	10800017 	ldw	r2,0(r2)
   2e430:	10800617 	ldw	r2,24(r2)
   2e434:	e0fffb17 	ldw	r3,-20(fp)
   2e438:	180d883a 	mov	r6,r3
   2e43c:	e17ffc17 	ldw	r5,-16(fp)
   2e440:	e13fff17 	ldw	r4,-4(fp)
   2e444:	103ee83a 	callr	r2
   2e448:	e0bffe15 	stw	r2,-8(fp)
   2e44c:	e0bffe17 	ldw	r2,-8(fp)
   2e450:	1000070e 	bge	r2,zero,2e470 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   2e454:	002e3800 	call	2e380 <alt_get_errno>
   2e458:	1007883a 	mov	r3,r2
   2e45c:	e0bffe17 	ldw	r2,-8(fp)
   2e460:	0085c83a 	sub	r2,zero,r2
   2e464:	18800015 	stw	r2,0(r3)
        return -1;
   2e468:	00bfffc4 	movi	r2,-1
   2e46c:	00000c06 	br	2e4a0 <write+0xe4>
      }
      return rval;
   2e470:	e0bffe17 	ldw	r2,-8(fp)
   2e474:	00000a06 	br	2e4a0 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   2e478:	002e3800 	call	2e380 <alt_get_errno>
   2e47c:	1007883a 	mov	r3,r2
   2e480:	00800344 	movi	r2,13
   2e484:	18800015 	stw	r2,0(r3)
   2e488:	00000406 	br	2e49c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   2e48c:	002e3800 	call	2e380 <alt_get_errno>
   2e490:	1007883a 	mov	r3,r2
   2e494:	00801444 	movi	r2,81
   2e498:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2e49c:	00bfffc4 	movi	r2,-1
}
   2e4a0:	e037883a 	mov	sp,fp
   2e4a4:	dfc00117 	ldw	ra,4(sp)
   2e4a8:	df000017 	ldw	fp,0(sp)
   2e4ac:	dec00204 	addi	sp,sp,8
   2e4b0:	f800283a 	ret

0002e4b4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   2e4b4:	defffd04 	addi	sp,sp,-12
   2e4b8:	dfc00215 	stw	ra,8(sp)
   2e4bc:	df000115 	stw	fp,4(sp)
   2e4c0:	df000104 	addi	fp,sp,4
   2e4c4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   2e4c8:	d1600604 	addi	r5,gp,-32744
   2e4cc:	e13fff17 	ldw	r4,-4(fp)
   2e4d0:	002f8340 	call	2f834 <alt_dev_llist_insert>
}
   2e4d4:	e037883a 	mov	sp,fp
   2e4d8:	dfc00117 	ldw	ra,4(sp)
   2e4dc:	df000017 	ldw	fp,0(sp)
   2e4e0:	dec00204 	addi	sp,sp,8
   2e4e4:	f800283a 	ret

0002e4e8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   2e4e8:	defffd04 	addi	sp,sp,-12
   2e4ec:	dfc00215 	stw	ra,8(sp)
   2e4f0:	df000115 	stw	fp,4(sp)
   2e4f4:	df000104 	addi	fp,sp,4
   2e4f8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   2e4fc:	00301180 	call	30118 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2e500:	00800044 	movi	r2,1
   2e504:	1001703a 	wrctl	status,r2
}
   2e508:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
   2e50c:	0001883a 	nop
   2e510:	e037883a 	mov	sp,fp
   2e514:	dfc00117 	ldw	ra,4(sp)
   2e518:	df000017 	ldw	fp,0(sp)
   2e51c:	dec00204 	addi	sp,sp,8
   2e520:	f800283a 	ret

0002e524 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   2e524:	defffe04 	addi	sp,sp,-8
   2e528:	dfc00115 	stw	ra,4(sp)
   2e52c:	df000015 	stw	fp,0(sp)
   2e530:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   2e534:	000d883a 	mov	r6,zero
   2e538:	000b883a 	mov	r5,zero
   2e53c:	010000f4 	movhi	r4,3
   2e540:	21061604 	addi	r4,r4,6232
   2e544:	002e6ec0 	call	2e6ec <altera_avalon_jtag_uart_init>
   2e548:	010000f4 	movhi	r4,3
   2e54c:	21060c04 	addi	r4,r4,6192
   2e550:	002e4b40 	call	2e4b4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
   2e554:	0001883a 	nop
    ALTERA_UP_AVALON_ACCELEROMETER_SPI_INIT ( ACCELEROMETER_SPI_0, accelerometer_spi_0);
   2e558:	010000f4 	movhi	r4,3
   2e55c:	210a2404 	addi	r4,r4,10384
   2e560:	002e4b40 	call	2e4b4 <alt_dev_reg>
    ALTERA_UP_AVALON_ADC_INIT ( ADC_0, adc_0);
   2e564:	010000f4 	movhi	r4,3
   2e568:	210a2f04 	addi	r4,r4,10428
   2e56c:	002e4b40 	call	2e4b4 <alt_dev_reg>
}
   2e570:	0001883a 	nop
   2e574:	e037883a 	mov	sp,fp
   2e578:	dfc00117 	ldw	ra,4(sp)
   2e57c:	df000017 	ldw	fp,0(sp)
   2e580:	dec00204 	addi	sp,sp,8
   2e584:	f800283a 	ret

0002e588 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   2e588:	defffa04 	addi	sp,sp,-24
   2e58c:	dfc00515 	stw	ra,20(sp)
   2e590:	df000415 	stw	fp,16(sp)
   2e594:	df000404 	addi	fp,sp,16
   2e598:	e13ffe15 	stw	r4,-8(fp)
   2e59c:	e17ffd15 	stw	r5,-12(fp)
   2e5a0:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e5a4:	e0bffe17 	ldw	r2,-8(fp)
   2e5a8:	10800017 	ldw	r2,0(r2)
   2e5ac:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   2e5b0:	e0bfff17 	ldw	r2,-4(fp)
   2e5b4:	10c00a04 	addi	r3,r2,40
   2e5b8:	e0bffe17 	ldw	r2,-8(fp)
   2e5bc:	10800217 	ldw	r2,8(r2)
   2e5c0:	100f883a 	mov	r7,r2
   2e5c4:	e1bffc17 	ldw	r6,-16(fp)
   2e5c8:	e17ffd17 	ldw	r5,-12(fp)
   2e5cc:	1809883a 	mov	r4,r3
   2e5d0:	002ebbc0 	call	2ebbc <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   2e5d4:	e037883a 	mov	sp,fp
   2e5d8:	dfc00117 	ldw	ra,4(sp)
   2e5dc:	df000017 	ldw	fp,0(sp)
   2e5e0:	dec00204 	addi	sp,sp,8
   2e5e4:	f800283a 	ret

0002e5e8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   2e5e8:	defffa04 	addi	sp,sp,-24
   2e5ec:	dfc00515 	stw	ra,20(sp)
   2e5f0:	df000415 	stw	fp,16(sp)
   2e5f4:	df000404 	addi	fp,sp,16
   2e5f8:	e13ffe15 	stw	r4,-8(fp)
   2e5fc:	e17ffd15 	stw	r5,-12(fp)
   2e600:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e604:	e0bffe17 	ldw	r2,-8(fp)
   2e608:	10800017 	ldw	r2,0(r2)
   2e60c:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   2e610:	e0bfff17 	ldw	r2,-4(fp)
   2e614:	10c00a04 	addi	r3,r2,40
   2e618:	e0bffe17 	ldw	r2,-8(fp)
   2e61c:	10800217 	ldw	r2,8(r2)
   2e620:	100f883a 	mov	r7,r2
   2e624:	e1bffc17 	ldw	r6,-16(fp)
   2e628:	e17ffd17 	ldw	r5,-12(fp)
   2e62c:	1809883a 	mov	r4,r3
   2e630:	002eddc0 	call	2eddc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   2e634:	e037883a 	mov	sp,fp
   2e638:	dfc00117 	ldw	ra,4(sp)
   2e63c:	df000017 	ldw	fp,0(sp)
   2e640:	dec00204 	addi	sp,sp,8
   2e644:	f800283a 	ret

0002e648 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   2e648:	defffc04 	addi	sp,sp,-16
   2e64c:	dfc00315 	stw	ra,12(sp)
   2e650:	df000215 	stw	fp,8(sp)
   2e654:	df000204 	addi	fp,sp,8
   2e658:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2e65c:	e0bffe17 	ldw	r2,-8(fp)
   2e660:	10800017 	ldw	r2,0(r2)
   2e664:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   2e668:	e0bfff17 	ldw	r2,-4(fp)
   2e66c:	10c00a04 	addi	r3,r2,40
   2e670:	e0bffe17 	ldw	r2,-8(fp)
   2e674:	10800217 	ldw	r2,8(r2)
   2e678:	100b883a 	mov	r5,r2
   2e67c:	1809883a 	mov	r4,r3
   2e680:	002ea600 	call	2ea60 <altera_avalon_jtag_uart_close>
}
   2e684:	e037883a 	mov	sp,fp
   2e688:	dfc00117 	ldw	ra,4(sp)
   2e68c:	df000017 	ldw	fp,0(sp)
   2e690:	dec00204 	addi	sp,sp,8
   2e694:	f800283a 	ret

0002e698 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   2e698:	defffa04 	addi	sp,sp,-24
   2e69c:	dfc00515 	stw	ra,20(sp)
   2e6a0:	df000415 	stw	fp,16(sp)
   2e6a4:	df000404 	addi	fp,sp,16
   2e6a8:	e13ffe15 	stw	r4,-8(fp)
   2e6ac:	e17ffd15 	stw	r5,-12(fp)
   2e6b0:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   2e6b4:	e0bffe17 	ldw	r2,-8(fp)
   2e6b8:	10800017 	ldw	r2,0(r2)
   2e6bc:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   2e6c0:	e0bfff17 	ldw	r2,-4(fp)
   2e6c4:	10800a04 	addi	r2,r2,40
   2e6c8:	e1bffc17 	ldw	r6,-16(fp)
   2e6cc:	e17ffd17 	ldw	r5,-12(fp)
   2e6d0:	1009883a 	mov	r4,r2
   2e6d4:	002eac80 	call	2eac8 <altera_avalon_jtag_uart_ioctl>
}
   2e6d8:	e037883a 	mov	sp,fp
   2e6dc:	dfc00117 	ldw	ra,4(sp)
   2e6e0:	df000017 	ldw	fp,0(sp)
   2e6e4:	dec00204 	addi	sp,sp,8
   2e6e8:	f800283a 	ret

0002e6ec <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   2e6ec:	defffb04 	addi	sp,sp,-20
   2e6f0:	dfc00415 	stw	ra,16(sp)
   2e6f4:	df000315 	stw	fp,12(sp)
   2e6f8:	df000304 	addi	fp,sp,12
   2e6fc:	e13fff15 	stw	r4,-4(fp)
   2e700:	e17ffe15 	stw	r5,-8(fp)
   2e704:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e708:	e0bfff17 	ldw	r2,-4(fp)
   2e70c:	00c00044 	movi	r3,1
   2e710:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   2e714:	e0bfff17 	ldw	r2,-4(fp)
   2e718:	10800017 	ldw	r2,0(r2)
   2e71c:	10800104 	addi	r2,r2,4
   2e720:	1007883a 	mov	r3,r2
   2e724:	e0bfff17 	ldw	r2,-4(fp)
   2e728:	10800817 	ldw	r2,32(r2)
   2e72c:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
   2e730:	e0bffd17 	ldw	r2,-12(fp)
   2e734:	018000f4 	movhi	r6,3
   2e738:	31b9e804 	addi	r6,r6,-6240
   2e73c:	e17fff17 	ldw	r5,-4(fp)
   2e740:	1009883a 	mov	r4,r2
   2e744:	002fb800 	call	2fb80 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   2e748:	e0bfff17 	ldw	r2,-4(fp)
   2e74c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   2e750:	e0bfff17 	ldw	r2,-4(fp)
   2e754:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2e758:	d0e72517 	ldw	r3,-25452(gp)
   2e75c:	e1ffff17 	ldw	r7,-4(fp)
   2e760:	018000f4 	movhi	r6,3
   2e764:	31ba6e04 	addi	r6,r6,-5704
   2e768:	180b883a 	mov	r5,r3
   2e76c:	1009883a 	mov	r4,r2
   2e770:	002f5200 	call	2f520 <alt_alarm_start>
   2e774:	1000040e 	bge	r2,zero,2e788 <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   2e778:	e0ffff17 	ldw	r3,-4(fp)
   2e77c:	00a00034 	movhi	r2,32768
   2e780:	10bfffc4 	addi	r2,r2,-1
   2e784:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   2e788:	0001883a 	nop
   2e78c:	e037883a 	mov	sp,fp
   2e790:	dfc00117 	ldw	ra,4(sp)
   2e794:	df000017 	ldw	fp,0(sp)
   2e798:	dec00204 	addi	sp,sp,8
   2e79c:	f800283a 	ret

0002e7a0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   2e7a0:	defff604 	addi	sp,sp,-40
   2e7a4:	df000915 	stw	fp,36(sp)
   2e7a8:	df000904 	addi	fp,sp,36
   2e7ac:	e13ff815 	stw	r4,-32(fp)
   2e7b0:	e17ff715 	stw	r5,-36(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   2e7b4:	e0bff817 	ldw	r2,-32(fp)
   2e7b8:	e0bffc15 	stw	r2,-16(fp)
  unsigned int base = sp->base;
   2e7bc:	e0bffc17 	ldw	r2,-16(fp)
   2e7c0:	10800017 	ldw	r2,0(r2)
   2e7c4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int postflag=0;
   2e7c8:	e03fff15 	stw	zero,-4(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e7cc:	e0bffb17 	ldw	r2,-20(fp)
   2e7d0:	10800104 	addi	r2,r2,4
   2e7d4:	10800037 	ldwio	r2,0(r2)
   2e7d8:	e0bffa15 	stw	r2,-24(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   2e7dc:	e0bffa17 	ldw	r2,-24(fp)
   2e7e0:	1080c00c 	andi	r2,r2,768
   2e7e4:	10006e26 	beq	r2,zero,2e9a0 <altera_avalon_jtag_uart_irq+0x200>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   2e7e8:	e0bffa17 	ldw	r2,-24(fp)
   2e7ec:	1080400c 	andi	r2,r2,256
   2e7f0:	10003526 	beq	r2,zero,2e8c8 <altera_avalon_jtag_uart_irq+0x128>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   2e7f4:	00800074 	movhi	r2,1
   2e7f8:	e0bffe15 	stw	r2,-8(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e7fc:	e0bffc17 	ldw	r2,-16(fp)
   2e800:	10800a17 	ldw	r2,40(r2)
   2e804:	10800044 	addi	r2,r2,1
   2e808:	1081ffcc 	andi	r2,r2,2047
   2e80c:	e0bff915 	stw	r2,-28(fp)
        if (next == sp->rx_out)
   2e810:	e0bffc17 	ldw	r2,-16(fp)
   2e814:	10800b17 	ldw	r2,44(r2)
   2e818:	e0fff917 	ldw	r3,-28(fp)
   2e81c:	18801526 	beq	r3,r2,2e874 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   2e820:	e0bffb17 	ldw	r2,-20(fp)
   2e824:	10800037 	ldwio	r2,0(r2)
   2e828:	e0bffe15 	stw	r2,-8(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   2e82c:	e0bffe17 	ldw	r2,-8(fp)
   2e830:	10a0000c 	andi	r2,r2,32768
   2e834:	10001126 	beq	r2,zero,2e87c <altera_avalon_jtag_uart_irq+0xdc>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   2e838:	e0bffc17 	ldw	r2,-16(fp)
   2e83c:	10800a17 	ldw	r2,40(r2)
   2e840:	e0fffe17 	ldw	r3,-8(fp)
   2e844:	1809883a 	mov	r4,r3
   2e848:	e0fffc17 	ldw	r3,-16(fp)
   2e84c:	1885883a 	add	r2,r3,r2
   2e850:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e854:	e0bffc17 	ldw	r2,-16(fp)
   2e858:	10800a17 	ldw	r2,40(r2)
   2e85c:	10800044 	addi	r2,r2,1
   2e860:	10c1ffcc 	andi	r3,r2,2047
   2e864:	e0bffc17 	ldw	r2,-16(fp)
   2e868:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
   2e86c:	0001883a 	nop
      {
   2e870:	003fe206 	br	2e7fc <altera_avalon_jtag_uart_irq+0x5c>
          break;
   2e874:	0001883a 	nop
   2e878:	00000106 	br	2e880 <altera_avalon_jtag_uart_irq+0xe0>
          break;
   2e87c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, ALT_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   2e880:	e0bffe17 	ldw	r2,-8(fp)
   2e884:	00ffffd4 	movui	r3,65535
   2e888:	18800f2e 	bgeu	r3,r2,2e8c8 <altera_avalon_jtag_uart_irq+0x128>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e88c:	e0bffc17 	ldw	r2,-16(fp)
   2e890:	10c00817 	ldw	r3,32(r2)
   2e894:	00bfff84 	movi	r2,-2
   2e898:	1886703a 	and	r3,r3,r2
   2e89c:	e0bffc17 	ldw	r2,-16(fp)
   2e8a0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   2e8a4:	e0bffb17 	ldw	r2,-20(fp)
   2e8a8:	10800104 	addi	r2,r2,4
   2e8ac:	1007883a 	mov	r3,r2
   2e8b0:	e0bffc17 	ldw	r2,-16(fp)
   2e8b4:	10800817 	ldw	r2,32(r2)
   2e8b8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e8bc:	e0bffb17 	ldw	r2,-20(fp)
   2e8c0:	10800104 	addi	r2,r2,4
   2e8c4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   2e8c8:	e0bffa17 	ldw	r2,-24(fp)
   2e8cc:	1080800c 	andi	r2,r2,512
   2e8d0:	103fbe26 	beq	r2,zero,2e7cc <altera_avalon_jtag_uart_irq+0x2c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   2e8d4:	e0bffa17 	ldw	r2,-24(fp)
   2e8d8:	1004d43a 	srli	r2,r2,16
   2e8dc:	e0bffd15 	stw	r2,-12(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   2e8e0:	00001506 	br	2e938 <altera_avalon_jtag_uart_irq+0x198>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   2e8e4:	e0bffb17 	ldw	r2,-20(fp)
   2e8e8:	e0fffc17 	ldw	r3,-16(fp)
   2e8ec:	18c00d17 	ldw	r3,52(r3)
   2e8f0:	e13ffc17 	ldw	r4,-16(fp)
   2e8f4:	20c7883a 	add	r3,r4,r3
   2e8f8:	18c20e03 	ldbu	r3,2104(r3)
   2e8fc:	18c03fcc 	andi	r3,r3,255
   2e900:	18c0201c 	xori	r3,r3,128
   2e904:	18ffe004 	addi	r3,r3,-128
   2e908:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e90c:	e0bffc17 	ldw	r2,-16(fp)
   2e910:	10800d17 	ldw	r2,52(r2)
   2e914:	10800044 	addi	r2,r2,1
   2e918:	10c1ffcc 	andi	r3,r2,2047
   2e91c:	e0bffc17 	ldw	r2,-16(fp)
   2e920:	10c00d15 	stw	r3,52(r2)
        
        /* indicate that the ALT_FLAG_POST routine must be called */
        postflag=1;
   2e924:	00800044 	movi	r2,1
   2e928:	e0bfff15 	stw	r2,-4(fp)

        space--;
   2e92c:	e0bffd17 	ldw	r2,-12(fp)
   2e930:	10bfffc4 	addi	r2,r2,-1
   2e934:	e0bffd15 	stw	r2,-12(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
   2e938:	e0bffd17 	ldw	r2,-12(fp)
   2e93c:	10000526 	beq	r2,zero,2e954 <altera_avalon_jtag_uart_irq+0x1b4>
   2e940:	e0bffc17 	ldw	r2,-16(fp)
   2e944:	10c00d17 	ldw	r3,52(r2)
   2e948:	e0bffc17 	ldw	r2,-16(fp)
   2e94c:	10800c17 	ldw	r2,48(r2)
   2e950:	18bfe41e 	bne	r3,r2,2e8e4 <altera_avalon_jtag_uart_irq+0x144>
      {
        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, ALT_FLAG_SET);
      }

      if (space > 0)
   2e954:	e0bffd17 	ldw	r2,-12(fp)
   2e958:	103f9c26 	beq	r2,zero,2e7cc <altera_avalon_jtag_uart_irq+0x2c>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2e95c:	e0bffc17 	ldw	r2,-16(fp)
   2e960:	10c00817 	ldw	r3,32(r2)
   2e964:	00bfff44 	movi	r2,-3
   2e968:	1886703a 	and	r3,r3,r2
   2e96c:	e0bffc17 	ldw	r2,-16(fp)
   2e970:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e974:	e0bffc17 	ldw	r2,-16(fp)
   2e978:	10800017 	ldw	r2,0(r2)
   2e97c:	10800104 	addi	r2,r2,4
   2e980:	1007883a 	mov	r3,r2
   2e984:	e0bffc17 	ldw	r2,-16(fp)
   2e988:	10800817 	ldw	r2,32(r2)
   2e98c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2e990:	e0bffb17 	ldw	r2,-20(fp)
   2e994:	10800104 	addi	r2,r2,4
   2e998:	10800037 	ldwio	r2,0(r2)
  {
   2e99c:	003f8b06 	br	2e7cc <altera_avalon_jtag_uart_irq+0x2c>
      break;
   2e9a0:	0001883a 	nop
      }
    }
  }
}
   2e9a4:	0001883a 	nop
   2e9a8:	e037883a 	mov	sp,fp
   2e9ac:	df000017 	ldw	fp,0(sp)
   2e9b0:	dec00104 	addi	sp,sp,4
   2e9b4:	f800283a 	ret

0002e9b8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   2e9b8:	defffc04 	addi	sp,sp,-16
   2e9bc:	df000315 	stw	fp,12(sp)
   2e9c0:	df000304 	addi	fp,sp,12
   2e9c4:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   2e9c8:	e0bffd17 	ldw	r2,-12(fp)
   2e9cc:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   2e9d0:	e0bfff17 	ldw	r2,-4(fp)
   2e9d4:	10800017 	ldw	r2,0(r2)
   2e9d8:	10800104 	addi	r2,r2,4
   2e9dc:	10800037 	ldwio	r2,0(r2)
   2e9e0:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   2e9e4:	e0bffe17 	ldw	r2,-8(fp)
   2e9e8:	1081000c 	andi	r2,r2,1024
   2e9ec:	10000b26 	beq	r2,zero,2ea1c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   2e9f0:	e0bfff17 	ldw	r2,-4(fp)
   2e9f4:	10800017 	ldw	r2,0(r2)
   2e9f8:	10800104 	addi	r2,r2,4
   2e9fc:	1007883a 	mov	r3,r2
   2ea00:	e0bfff17 	ldw	r2,-4(fp)
   2ea04:	10800817 	ldw	r2,32(r2)
   2ea08:	10810014 	ori	r2,r2,1024
   2ea0c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   2ea10:	e0bfff17 	ldw	r2,-4(fp)
   2ea14:	10000915 	stw	zero,36(r2)
   2ea18:	00000c06 	br	2ea4c <altera_avalon_jtag_uart_timeout+0x94>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   2ea1c:	e0bfff17 	ldw	r2,-4(fp)
   2ea20:	10c00917 	ldw	r3,36(r2)
   2ea24:	00a00034 	movhi	r2,32768
   2ea28:	10bfff04 	addi	r2,r2,-4
   2ea2c:	10c00736 	bltu	r2,r3,2ea4c <altera_avalon_jtag_uart_timeout+0x94>
    sp->host_inactive++;
   2ea30:	e0bfff17 	ldw	r2,-4(fp)
   2ea34:	10800917 	ldw	r2,36(r2)
   2ea38:	10c00044 	addi	r3,r2,1
   2ea3c:	e0bfff17 	ldw	r2,-4(fp)
   2ea40:	10c00915 	stw	r3,36(r2)
    
    if (sp->host_inactive >= sp->timeout) {
   2ea44:	e0bfff17 	ldw	r2,-4(fp)
   2ea48:	10800917 	ldw	r2,36(r2)
   2ea4c:	d0a72517 	ldw	r2,-25452(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, ALT_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   2ea50:	e037883a 	mov	sp,fp
   2ea54:	df000017 	ldw	fp,0(sp)
   2ea58:	dec00104 	addi	sp,sp,4
   2ea5c:	f800283a 	ret

0002ea60 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   2ea60:	defffd04 	addi	sp,sp,-12
   2ea64:	df000215 	stw	fp,8(sp)
   2ea68:	df000204 	addi	fp,sp,8
   2ea6c:	e13fff15 	stw	r4,-4(fp)
   2ea70:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2ea74:	00000506 	br	2ea8c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   2ea78:	e0bffe17 	ldw	r2,-8(fp)
   2ea7c:	1090000c 	andi	r2,r2,16384
   2ea80:	10000226 	beq	r2,zero,2ea8c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   2ea84:	00bffd44 	movi	r2,-11
   2ea88:	00000b06 	br	2eab8 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2ea8c:	e0bfff17 	ldw	r2,-4(fp)
   2ea90:	10c00d17 	ldw	r3,52(r2)
   2ea94:	e0bfff17 	ldw	r2,-4(fp)
   2ea98:	10800c17 	ldw	r2,48(r2)
   2ea9c:	18800526 	beq	r3,r2,2eab4 <altera_avalon_jtag_uart_close+0x54>
   2eaa0:	e0bfff17 	ldw	r2,-4(fp)
   2eaa4:	10c00917 	ldw	r3,36(r2)
   2eaa8:	e0bfff17 	ldw	r2,-4(fp)
   2eaac:	10800117 	ldw	r2,4(r2)
   2eab0:	18bff136 	bltu	r3,r2,2ea78 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
   2eab4:	0005883a 	mov	r2,zero
}
   2eab8:	e037883a 	mov	sp,fp
   2eabc:	df000017 	ldw	fp,0(sp)
   2eac0:	dec00104 	addi	sp,sp,4
   2eac4:	f800283a 	ret

0002eac8 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   2eac8:	defffa04 	addi	sp,sp,-24
   2eacc:	df000515 	stw	fp,20(sp)
   2ead0:	df000504 	addi	fp,sp,20
   2ead4:	e13ffd15 	stw	r4,-12(fp)
   2ead8:	e17ffc15 	stw	r5,-16(fp)
   2eadc:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
   2eae0:	00bff9c4 	movi	r2,-25
   2eae4:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
   2eae8:	e0bffc17 	ldw	r2,-16(fp)
   2eaec:	109a8060 	cmpeqi	r2,r2,27137
   2eaf0:	1000041e 	bne	r2,zero,2eb04 <altera_avalon_jtag_uart_ioctl+0x3c>
   2eaf4:	e0bffc17 	ldw	r2,-16(fp)
   2eaf8:	109a80a0 	cmpeqi	r2,r2,27138
   2eafc:	1000181e 	bne	r2,zero,2eb60 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
   2eb00:	00002906 	br	2eba8 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
   2eb04:	e0bffd17 	ldw	r2,-12(fp)
   2eb08:	10c00117 	ldw	r3,4(r2)
   2eb0c:	00a00034 	movhi	r2,32768
   2eb10:	10bfffc4 	addi	r2,r2,-1
   2eb14:	18802126 	beq	r3,r2,2eb9c <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
   2eb18:	e0bffb17 	ldw	r2,-20(fp)
   2eb1c:	10800017 	ldw	r2,0(r2)
   2eb20:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   2eb24:	e0bffe17 	ldw	r2,-8(fp)
   2eb28:	10800090 	cmplti	r2,r2,2
   2eb2c:	1000061e 	bne	r2,zero,2eb48 <altera_avalon_jtag_uart_ioctl+0x80>
   2eb30:	e0fffe17 	ldw	r3,-8(fp)
   2eb34:	00a00034 	movhi	r2,32768
   2eb38:	10bfffc4 	addi	r2,r2,-1
   2eb3c:	18800226 	beq	r3,r2,2eb48 <altera_avalon_jtag_uart_ioctl+0x80>
   2eb40:	e0bffe17 	ldw	r2,-8(fp)
   2eb44:	00000206 	br	2eb50 <altera_avalon_jtag_uart_ioctl+0x88>
   2eb48:	00a00034 	movhi	r2,32768
   2eb4c:	10bfff84 	addi	r2,r2,-2
   2eb50:	e0fffd17 	ldw	r3,-12(fp)
   2eb54:	18800115 	stw	r2,4(r3)
      rc = 0;
   2eb58:	e03fff15 	stw	zero,-4(fp)
    break;
   2eb5c:	00000f06 	br	2eb9c <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
   2eb60:	e0bffd17 	ldw	r2,-12(fp)
   2eb64:	10c00117 	ldw	r3,4(r2)
   2eb68:	00a00034 	movhi	r2,32768
   2eb6c:	10bfffc4 	addi	r2,r2,-1
   2eb70:	18800c26 	beq	r3,r2,2eba4 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   2eb74:	e0bffd17 	ldw	r2,-12(fp)
   2eb78:	10c00917 	ldw	r3,36(r2)
   2eb7c:	e0bffd17 	ldw	r2,-12(fp)
   2eb80:	10800117 	ldw	r2,4(r2)
   2eb84:	1885803a 	cmpltu	r2,r3,r2
   2eb88:	10c03fcc 	andi	r3,r2,255
   2eb8c:	e0bffb17 	ldw	r2,-20(fp)
   2eb90:	10c00015 	stw	r3,0(r2)
      rc = 0;
   2eb94:	e03fff15 	stw	zero,-4(fp)
    break;
   2eb98:	00000206 	br	2eba4 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
   2eb9c:	0001883a 	nop
   2eba0:	00000106 	br	2eba8 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
   2eba4:	0001883a 	nop
  }

  return rc;
   2eba8:	e0bfff17 	ldw	r2,-4(fp)
}
   2ebac:	e037883a 	mov	sp,fp
   2ebb0:	df000017 	ldw	fp,0(sp)
   2ebb4:	dec00104 	addi	sp,sp,4
   2ebb8:	f800283a 	ret

0002ebbc <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   2ebbc:	defff304 	addi	sp,sp,-52
   2ebc0:	dfc00c15 	stw	ra,48(sp)
   2ebc4:	df000b15 	stw	fp,44(sp)
   2ebc8:	df000b04 	addi	fp,sp,44
   2ebcc:	e13ff815 	stw	r4,-32(fp)
   2ebd0:	e17ff715 	stw	r5,-36(fp)
   2ebd4:	e1bff615 	stw	r6,-40(fp)
   2ebd8:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
   2ebdc:	e0bff717 	ldw	r2,-36(fp)
   2ebe0:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2ebe4:	00004706 	br	2ed04 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   2ebe8:	e0bff817 	ldw	r2,-32(fp)
   2ebec:	10800a17 	ldw	r2,40(r2)
   2ebf0:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
   2ebf4:	e0bff817 	ldw	r2,-32(fp)
   2ebf8:	10800b17 	ldw	r2,44(r2)
   2ebfc:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
   2ec00:	e0fffd17 	ldw	r3,-12(fp)
   2ec04:	e0bffc17 	ldw	r2,-16(fp)
   2ec08:	18800536 	bltu	r3,r2,2ec20 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   2ec0c:	e0fffd17 	ldw	r3,-12(fp)
   2ec10:	e0bffc17 	ldw	r2,-16(fp)
   2ec14:	1885c83a 	sub	r2,r3,r2
   2ec18:	e0bffe15 	stw	r2,-8(fp)
   2ec1c:	00000406 	br	2ec30 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   2ec20:	00c20004 	movi	r3,2048
   2ec24:	e0bffc17 	ldw	r2,-16(fp)
   2ec28:	1885c83a 	sub	r2,r3,r2
   2ec2c:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   2ec30:	e0bffe17 	ldw	r2,-8(fp)
   2ec34:	10001e26 	beq	r2,zero,2ecb0 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   2ec38:	e0fff617 	ldw	r3,-40(fp)
   2ec3c:	e0bffe17 	ldw	r2,-8(fp)
   2ec40:	1880022e 	bgeu	r3,r2,2ec4c <altera_avalon_jtag_uart_read+0x90>
        n = space;
   2ec44:	e0bff617 	ldw	r2,-40(fp)
   2ec48:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   2ec4c:	e0bff817 	ldw	r2,-32(fp)
   2ec50:	10c00e04 	addi	r3,r2,56
   2ec54:	e0bffc17 	ldw	r2,-16(fp)
   2ec58:	1885883a 	add	r2,r3,r2
   2ec5c:	e1bffe17 	ldw	r6,-8(fp)
   2ec60:	100b883a 	mov	r5,r2
   2ec64:	e13fff17 	ldw	r4,-4(fp)
   2ec68:	002671c0 	call	2671c <memcpy>
      ptr   += n;
   2ec6c:	e0ffff17 	ldw	r3,-4(fp)
   2ec70:	e0bffe17 	ldw	r2,-8(fp)
   2ec74:	1885883a 	add	r2,r3,r2
   2ec78:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
   2ec7c:	e0fff617 	ldw	r3,-40(fp)
   2ec80:	e0bffe17 	ldw	r2,-8(fp)
   2ec84:	1885c83a 	sub	r2,r3,r2
   2ec88:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2ec8c:	e0fffc17 	ldw	r3,-16(fp)
   2ec90:	e0bffe17 	ldw	r2,-8(fp)
   2ec94:	1885883a 	add	r2,r3,r2
   2ec98:	10c1ffcc 	andi	r3,r2,2047
   2ec9c:	e0bff817 	ldw	r2,-32(fp)
   2eca0:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   2eca4:	e0bff617 	ldw	r2,-40(fp)
   2eca8:	00bfcf16 	blt	zero,r2,2ebe8 <altera_avalon_jtag_uart_read+0x2c>
   2ecac:	00000106 	br	2ecb4 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
   2ecb0:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
   2ecb4:	e0ffff17 	ldw	r3,-4(fp)
   2ecb8:	e0bff717 	ldw	r2,-36(fp)
   2ecbc:	1880141e 	bne	r3,r2,2ed10 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   2ecc0:	e0bff517 	ldw	r2,-44(fp)
   2ecc4:	1090000c 	andi	r2,r2,16384
   2ecc8:	1000131e 	bne	r2,zero,2ed18 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   2eccc:	0001883a 	nop
   2ecd0:	e0bff817 	ldw	r2,-32(fp)
   2ecd4:	10800a17 	ldw	r2,40(r2)
   2ecd8:	e0fffd17 	ldw	r3,-12(fp)
   2ecdc:	1880051e 	bne	r3,r2,2ecf4 <altera_avalon_jtag_uart_read+0x138>
   2ece0:	e0bff817 	ldw	r2,-32(fp)
   2ece4:	10c00917 	ldw	r3,36(r2)
   2ece8:	e0bff817 	ldw	r2,-32(fp)
   2ecec:	10800117 	ldw	r2,4(r2)
   2ecf0:	18bff736 	bltu	r3,r2,2ecd0 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   2ecf4:	e0bff817 	ldw	r2,-32(fp)
   2ecf8:	10800a17 	ldw	r2,40(r2)
   2ecfc:	e0fffd17 	ldw	r3,-12(fp)
   2ed00:	18800726 	beq	r3,r2,2ed20 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
   2ed04:	e0bff617 	ldw	r2,-40(fp)
   2ed08:	00bfb716 	blt	zero,r2,2ebe8 <altera_avalon_jtag_uart_read+0x2c>
   2ed0c:	00000506 	br	2ed24 <altera_avalon_jtag_uart_read+0x168>
      break;
   2ed10:	0001883a 	nop
   2ed14:	00000306 	br	2ed24 <altera_avalon_jtag_uart_read+0x168>
      break;
   2ed18:	0001883a 	nop
   2ed1c:	00000106 	br	2ed24 <altera_avalon_jtag_uart_read+0x168>
      break;
   2ed20:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   2ed24:	e0ffff17 	ldw	r3,-4(fp)
   2ed28:	e0bff717 	ldw	r2,-36(fp)
   2ed2c:	18801926 	beq	r3,r2,2ed94 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
   2ed30:	0005303a 	rdctl	r2,status
   2ed34:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ed38:	e0fff917 	ldw	r3,-28(fp)
   2ed3c:	00bfff84 	movi	r2,-2
   2ed40:	1884703a 	and	r2,r3,r2
   2ed44:	1001703a 	wrctl	status,r2
  return context;
   2ed48:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   2ed4c:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2ed50:	e0bff817 	ldw	r2,-32(fp)
   2ed54:	10800817 	ldw	r2,32(r2)
   2ed58:	10c00054 	ori	r3,r2,1
   2ed5c:	e0bff817 	ldw	r2,-32(fp)
   2ed60:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2ed64:	e0bff817 	ldw	r2,-32(fp)
   2ed68:	10800017 	ldw	r2,0(r2)
   2ed6c:	10800104 	addi	r2,r2,4
   2ed70:	1007883a 	mov	r3,r2
   2ed74:	e0bff817 	ldw	r2,-32(fp)
   2ed78:	10800817 	ldw	r2,32(r2)
   2ed7c:	18800035 	stwio	r2,0(r3)
   2ed80:	e0bffb17 	ldw	r2,-20(fp)
   2ed84:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   2ed88:	e0bffa17 	ldw	r2,-24(fp)
   2ed8c:	1001703a 	wrctl	status,r2
}
   2ed90:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   2ed94:	e0ffff17 	ldw	r3,-4(fp)
   2ed98:	e0bff717 	ldw	r2,-36(fp)
   2ed9c:	18800426 	beq	r3,r2,2edb0 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
   2eda0:	e0ffff17 	ldw	r3,-4(fp)
   2eda4:	e0bff717 	ldw	r2,-36(fp)
   2eda8:	1885c83a 	sub	r2,r3,r2
   2edac:	00000606 	br	2edc8 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
   2edb0:	e0bff517 	ldw	r2,-44(fp)
   2edb4:	1090000c 	andi	r2,r2,16384
   2edb8:	10000226 	beq	r2,zero,2edc4 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
   2edbc:	00bffd44 	movi	r2,-11
   2edc0:	00000106 	br	2edc8 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
   2edc4:	00bffec4 	movi	r2,-5
}
   2edc8:	e037883a 	mov	sp,fp
   2edcc:	dfc00117 	ldw	ra,4(sp)
   2edd0:	df000017 	ldw	fp,0(sp)
   2edd4:	dec00204 	addi	sp,sp,8
   2edd8:	f800283a 	ret

0002eddc <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   2eddc:	defff304 	addi	sp,sp,-52
   2ede0:	dfc00c15 	stw	ra,48(sp)
   2ede4:	df000b15 	stw	fp,44(sp)
   2ede8:	df000b04 	addi	fp,sp,44
   2edec:	e13ff815 	stw	r4,-32(fp)
   2edf0:	e17ff715 	stw	r5,-36(fp)
   2edf4:	e1bff615 	stw	r6,-40(fp)
   2edf8:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   2edfc:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   2ee00:	e0bff717 	ldw	r2,-36(fp)
   2ee04:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2ee08:	00003706 	br	2eee8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   2ee0c:	e0bff817 	ldw	r2,-32(fp)
   2ee10:	10800c17 	ldw	r2,48(r2)
   2ee14:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
   2ee18:	e0bff817 	ldw	r2,-32(fp)
   2ee1c:	10800d17 	ldw	r2,52(r2)
   2ee20:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
   2ee24:	e0fffc17 	ldw	r3,-16(fp)
   2ee28:	e0bfff17 	ldw	r2,-4(fp)
   2ee2c:	1880062e 	bgeu	r3,r2,2ee48 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   2ee30:	e0ffff17 	ldw	r3,-4(fp)
   2ee34:	e0bffc17 	ldw	r2,-16(fp)
   2ee38:	1885c83a 	sub	r2,r3,r2
   2ee3c:	10bfffc4 	addi	r2,r2,-1
   2ee40:	e0bffe15 	stw	r2,-8(fp)
   2ee44:	00000b06 	br	2ee74 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   2ee48:	e0bfff17 	ldw	r2,-4(fp)
   2ee4c:	10000526 	beq	r2,zero,2ee64 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   2ee50:	00c20004 	movi	r3,2048
   2ee54:	e0bffc17 	ldw	r2,-16(fp)
   2ee58:	1885c83a 	sub	r2,r3,r2
   2ee5c:	e0bffe15 	stw	r2,-8(fp)
   2ee60:	00000406 	br	2ee74 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   2ee64:	00c1ffc4 	movi	r3,2047
   2ee68:	e0bffc17 	ldw	r2,-16(fp)
   2ee6c:	1885c83a 	sub	r2,r3,r2
   2ee70:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
   2ee74:	e0bffe17 	ldw	r2,-8(fp)
   2ee78:	10001e26 	beq	r2,zero,2eef4 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   2ee7c:	e0fff617 	ldw	r3,-40(fp)
   2ee80:	e0bffe17 	ldw	r2,-8(fp)
   2ee84:	1880022e 	bgeu	r3,r2,2ee90 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   2ee88:	e0bff617 	ldw	r2,-40(fp)
   2ee8c:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   2ee90:	e0bff817 	ldw	r2,-32(fp)
   2ee94:	10c20e04 	addi	r3,r2,2104
   2ee98:	e0bffc17 	ldw	r2,-16(fp)
   2ee9c:	1885883a 	add	r2,r3,r2
   2eea0:	e1bffe17 	ldw	r6,-8(fp)
   2eea4:	e17ff717 	ldw	r5,-36(fp)
   2eea8:	1009883a 	mov	r4,r2
   2eeac:	002671c0 	call	2671c <memcpy>
      ptr   += n;
   2eeb0:	e0fff717 	ldw	r3,-36(fp)
   2eeb4:	e0bffe17 	ldw	r2,-8(fp)
   2eeb8:	1885883a 	add	r2,r3,r2
   2eebc:	e0bff715 	stw	r2,-36(fp)
      count -= n;
   2eec0:	e0fff617 	ldw	r3,-40(fp)
   2eec4:	e0bffe17 	ldw	r2,-8(fp)
   2eec8:	1885c83a 	sub	r2,r3,r2
   2eecc:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2eed0:	e0fffc17 	ldw	r3,-16(fp)
   2eed4:	e0bffe17 	ldw	r2,-8(fp)
   2eed8:	1885883a 	add	r2,r3,r2
   2eedc:	10c1ffcc 	andi	r3,r2,2047
   2eee0:	e0bff817 	ldw	r2,-32(fp)
   2eee4:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
   2eee8:	e0bff617 	ldw	r2,-40(fp)
   2eeec:	00bfc716 	blt	zero,r2,2ee0c <altera_avalon_jtag_uart_write+0x30>
   2eef0:	00000106 	br	2eef8 <altera_avalon_jtag_uart_write+0x11c>
        break;
   2eef4:	0001883a 	nop
  NIOS2_READ_STATUS (context);
   2eef8:	0005303a 	rdctl	r2,status
   2eefc:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ef00:	e0fff917 	ldw	r3,-28(fp)
   2ef04:	00bfff84 	movi	r2,-2
   2ef08:	1884703a 	and	r2,r3,r2
   2ef0c:	1001703a 	wrctl	status,r2
  return context;
   2ef10:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   2ef14:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2ef18:	e0bff817 	ldw	r2,-32(fp)
   2ef1c:	10800817 	ldw	r2,32(r2)
   2ef20:	10c00094 	ori	r3,r2,2
   2ef24:	e0bff817 	ldw	r2,-32(fp)
   2ef28:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2ef2c:	e0bff817 	ldw	r2,-32(fp)
   2ef30:	10800017 	ldw	r2,0(r2)
   2ef34:	10800104 	addi	r2,r2,4
   2ef38:	1007883a 	mov	r3,r2
   2ef3c:	e0bff817 	ldw	r2,-32(fp)
   2ef40:	10800817 	ldw	r2,32(r2)
   2ef44:	18800035 	stwio	r2,0(r3)
   2ef48:	e0bffb17 	ldw	r2,-20(fp)
   2ef4c:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
   2ef50:	e0bffa17 	ldw	r2,-24(fp)
   2ef54:	1001703a 	wrctl	status,r2
}
   2ef58:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   2ef5c:	e0bff617 	ldw	r2,-40(fp)
   2ef60:	0080100e 	bge	zero,r2,2efa4 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
   2ef64:	e0bff517 	ldw	r2,-44(fp)
   2ef68:	1090000c 	andi	r2,r2,16384
   2ef6c:	1000101e 	bne	r2,zero,2efb0 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   2ef70:	0001883a 	nop
   2ef74:	e0bff817 	ldw	r2,-32(fp)
   2ef78:	10800d17 	ldw	r2,52(r2)
   2ef7c:	e0ffff17 	ldw	r3,-4(fp)
   2ef80:	1880051e 	bne	r3,r2,2ef98 <altera_avalon_jtag_uart_write+0x1bc>
   2ef84:	e0bff817 	ldw	r2,-32(fp)
   2ef88:	10c00917 	ldw	r3,36(r2)
   2ef8c:	e0bff817 	ldw	r2,-32(fp)
   2ef90:	10800117 	ldw	r2,4(r2)
   2ef94:	18bff736 	bltu	r3,r2,2ef74 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   2ef98:	e0bff817 	ldw	r2,-32(fp)
   2ef9c:	10800917 	ldw	r2,36(r2)
   2efa0:	1000051e 	bne	r2,zero,2efb8 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
   2efa4:	e0bff617 	ldw	r2,-40(fp)
   2efa8:	00bfcf16 	blt	zero,r2,2eee8 <altera_avalon_jtag_uart_write+0x10c>
   2efac:	00000306 	br	2efbc <altera_avalon_jtag_uart_write+0x1e0>
        break;
   2efb0:	0001883a 	nop
   2efb4:	00000106 	br	2efbc <altera_avalon_jtag_uart_write+0x1e0>
         break;
   2efb8:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   2efbc:	e0fff717 	ldw	r3,-36(fp)
   2efc0:	e0bffd17 	ldw	r2,-12(fp)
   2efc4:	18800426 	beq	r3,r2,2efd8 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
   2efc8:	e0fff717 	ldw	r3,-36(fp)
   2efcc:	e0bffd17 	ldw	r2,-12(fp)
   2efd0:	1885c83a 	sub	r2,r3,r2
   2efd4:	00000606 	br	2eff0 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
   2efd8:	e0bff517 	ldw	r2,-44(fp)
   2efdc:	1090000c 	andi	r2,r2,16384
   2efe0:	10000226 	beq	r2,zero,2efec <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
   2efe4:	00bffd44 	movi	r2,-11
   2efe8:	00000106 	br	2eff0 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   2efec:	00bffec4 	movi	r2,-5
}
   2eff0:	e037883a 	mov	sp,fp
   2eff4:	dfc00117 	ldw	ra,4(sp)
   2eff8:	df000017 	ldw	fp,0(sp)
   2effc:	dec00204 	addi	sp,sp,8
   2f000:	f800283a 	ret

0002f004 <alt_up_accelerometer_spi_open_dev>:

#include "altera_up_avalon_accelerometer_spi.h"
#include "altera_up_avalon_accelerometer_spi_regs.h"

alt_up_accelerometer_spi_dev* alt_up_accelerometer_spi_open_dev(const char* name)
{
   2f004:	defffc04 	addi	sp,sp,-16
   2f008:	dfc00315 	stw	ra,12(sp)
   2f00c:	df000215 	stw	fp,8(sp)
   2f010:	df000204 	addi	fp,sp,8
   2f014:	e13ffe15 	stw	r4,-8(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_accelerometer_spi_dev *dev = (alt_up_accelerometer_spi_dev*)alt_find_dev(name, &alt_dev_list);
   2f018:	d1600604 	addi	r5,gp,-32744
   2f01c:	e13ffe17 	ldw	r4,-8(fp)
   2f020:	002f9a40 	call	2f9a4 <alt_find_dev>
   2f024:	e0bfff15 	stw	r2,-4(fp)

  return dev;
   2f028:	e0bfff17 	ldw	r2,-4(fp)
}
   2f02c:	e037883a 	mov	sp,fp
   2f030:	dfc00117 	ldw	ra,4(sp)
   2f034:	df000017 	ldw	fp,0(sp)
   2f038:	dec00204 	addi	sp,sp,8
   2f03c:	f800283a 	ret

0002f040 <alt_up_accelerometer_spi_read_address_register>:
 * @param addr -- a pointer to the location where the read address should be stored
 *
 * @return 0 for success 
 **/
int alt_up_accelerometer_spi_read_address_register(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 *addr)
{
   2f040:	defffd04 	addi	sp,sp,-12
   2f044:	df000215 	stw	fp,8(sp)
   2f048:	df000204 	addi	fp,sp,8
   2f04c:	e13fff15 	stw	r4,-4(fp)
   2f050:	e17ffe15 	stw	r5,-8(fp)
	// reads data from the device Address register
	*(addr) = IORD_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base); 
   2f054:	e0bfff17 	ldw	r2,-4(fp)
   2f058:	10800a17 	ldw	r2,40(r2)
   2f05c:	10800023 	ldbuio	r2,0(r2)
   2f060:	10803fcc 	andi	r2,r2,255
   2f064:	1007883a 	mov	r3,r2
   2f068:	e0bffe17 	ldw	r2,-8(fp)
   2f06c:	10c00005 	stb	r3,0(r2)

	return 0;
   2f070:	0005883a 	mov	r2,zero
}
   2f074:	e037883a 	mov	sp,fp
   2f078:	df000017 	ldw	fp,0(sp)
   2f07c:	dec00104 	addi	sp,sp,4
   2f080:	f800283a 	ret

0002f084 <alt_up_accelerometer_spi_read>:
 * @param data -- a pointer to the location where the read data should be stored
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_read(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 *data)
{
   2f084:	defffc04 	addi	sp,sp,-16
   2f088:	df000315 	stw	fp,12(sp)
   2f08c:	df000304 	addi	fp,sp,12
   2f090:	e13fff15 	stw	r4,-4(fp)
   2f094:	2805883a 	mov	r2,r5
   2f098:	e1bffd15 	stw	r6,-12(fp)
   2f09c:	e0bffe05 	stb	r2,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f0a0:	e0bfff17 	ldw	r2,-4(fp)
   2f0a4:	10800a17 	ldw	r2,40(r2)
   2f0a8:	1007883a 	mov	r3,r2
   2f0ac:	e0bffe03 	ldbu	r2,-8(fp)
   2f0b0:	10800fcc 	andi	r2,r2,63
   2f0b4:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(data) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2f0b8:	e0bfff17 	ldw	r2,-4(fp)
   2f0bc:	10800a17 	ldw	r2,40(r2)
   2f0c0:	10800044 	addi	r2,r2,1
   2f0c4:	10800023 	ldbuio	r2,0(r2)
   2f0c8:	10803fcc 	andi	r2,r2,255
   2f0cc:	1007883a 	mov	r3,r2
   2f0d0:	e0bffd17 	ldw	r2,-12(fp)
   2f0d4:	10c00005 	stb	r3,0(r2)

	return 0;
   2f0d8:	0005883a 	mov	r2,zero
}
   2f0dc:	e037883a 	mov	sp,fp
   2f0e0:	df000017 	ldw	fp,0(sp)
   2f0e4:	dec00104 	addi	sp,sp,4
   2f0e8:	f800283a 	ret

0002f0ec <alt_up_accelerometer_spi_write>:
 * @param data -- the data to be written
 *
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_write(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 data)
{
   2f0ec:	defffc04 	addi	sp,sp,-16
   2f0f0:	df000315 	stw	fp,12(sp)
   2f0f4:	df000304 	addi	fp,sp,12
   2f0f8:	e13fff15 	stw	r4,-4(fp)
   2f0fc:	2805883a 	mov	r2,r5
   2f100:	3007883a 	mov	r3,r6
   2f104:	e0bffe05 	stb	r2,-8(fp)
   2f108:	1805883a 	mov	r2,r3
   2f10c:	e0bffd05 	stb	r2,-12(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f110:	e0bfff17 	ldw	r2,-4(fp)
   2f114:	10800a17 	ldw	r2,40(r2)
   2f118:	1007883a 	mov	r3,r2
   2f11c:	e0bffe03 	ldbu	r2,-8(fp)
   2f120:	10800fcc 	andi	r2,r2,63
   2f124:	18800025 	stbio	r2,0(r3)

	// write data to the device Data register
	IOWR_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base, data & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK); 
   2f128:	e0bfff17 	ldw	r2,-4(fp)
   2f12c:	10800a17 	ldw	r2,40(r2)
   2f130:	10800044 	addi	r2,r2,1
   2f134:	1007883a 	mov	r3,r2
   2f138:	e0bffd03 	ldbu	r2,-12(fp)
   2f13c:	18800025 	stbio	r2,0(r3)

	return 0;
   2f140:	0005883a 	mov	r2,zero
}
   2f144:	e037883a 	mov	sp,fp
   2f148:	df000017 	ldw	fp,0(sp)
   2f14c:	dec00104 	addi	sp,sp,4
   2f150:	f800283a 	ret

0002f154 <alt_up_accelerometer_spi_read_x_axis>:
 * @param x_axis -- a pointer to the location where the x axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_x_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *x_axis)
{
   2f154:	defffd04 	addi	sp,sp,-12
   2f158:	df000215 	stw	fp,8(sp)
   2f15c:	df000204 	addi	fp,sp,8
   2f160:	e13fff15 	stw	r4,-4(fp)
   2f164:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f168:	e0bfff17 	ldw	r2,-4(fp)
   2f16c:	10800a17 	ldw	r2,40(r2)
   2f170:	1007883a 	mov	r3,r2
   2f174:	00800c84 	movi	r2,50
   2f178:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2f17c:	e0bfff17 	ldw	r2,-4(fp)
   2f180:	10800a17 	ldw	r2,40(r2)
   2f184:	10800044 	addi	r2,r2,1
   2f188:	10800023 	ldbuio	r2,0(r2)
   2f18c:	10803fcc 	andi	r2,r2,255
   2f190:	10ffffcc 	andi	r3,r2,65535
   2f194:	e0bffe17 	ldw	r2,-8(fp)
   2f198:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f19c:	e0bfff17 	ldw	r2,-4(fp)
   2f1a0:	10800a17 	ldw	r2,40(r2)
   2f1a4:	1007883a 	mov	r3,r2
   2f1a8:	00800cc4 	movi	r2,51
   2f1ac:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(x_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   2f1b0:	e0bfff17 	ldw	r2,-4(fp)
   2f1b4:	10800a17 	ldw	r2,40(r2)
   2f1b8:	10800044 	addi	r2,r2,1
   2f1bc:	10800023 	ldbuio	r2,0(r2)
   2f1c0:	10803fcc 	andi	r2,r2,255
   2f1c4:	1006923a 	slli	r3,r2,8
   2f1c8:	00804034 	movhi	r2,256
   2f1cc:	10bfc004 	addi	r2,r2,-256
   2f1d0:	1884703a 	and	r2,r3,r2
   2f1d4:	e0fffe17 	ldw	r3,-8(fp)
   2f1d8:	18c00017 	ldw	r3,0(r3)
   2f1dc:	10c5883a 	add	r2,r2,r3
   2f1e0:	1007883a 	mov	r3,r2
   2f1e4:	e0bffe17 	ldw	r2,-8(fp)
   2f1e8:	10c00015 	stw	r3,0(r2)

	if (*(x_axis) & 0x00008000)
   2f1ec:	e0bffe17 	ldw	r2,-8(fp)
   2f1f0:	10800017 	ldw	r2,0(r2)
   2f1f4:	10a0000c 	andi	r2,r2,32768
   2f1f8:	10000626 	beq	r2,zero,2f214 <alt_up_accelerometer_spi_read_x_axis+0xc0>
	{
		*(x_axis) |= 0xFFFF0000;
   2f1fc:	e0bffe17 	ldw	r2,-8(fp)
   2f200:	10800017 	ldw	r2,0(r2)
   2f204:	10bffff4 	orhi	r2,r2,65535
   2f208:	1007883a 	mov	r3,r2
   2f20c:	e0bffe17 	ldw	r2,-8(fp)
   2f210:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   2f214:	0005883a 	mov	r2,zero
}
   2f218:	e037883a 	mov	sp,fp
   2f21c:	df000017 	ldw	fp,0(sp)
   2f220:	dec00104 	addi	sp,sp,4
   2f224:	f800283a 	ret

0002f228 <alt_up_accelerometer_spi_read_y_axis>:
 * @param y_axis -- a pointer to the location where the y axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_y_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *y_axis)
{
   2f228:	defffd04 	addi	sp,sp,-12
   2f22c:	df000215 	stw	fp,8(sp)
   2f230:	df000204 	addi	fp,sp,8
   2f234:	e13fff15 	stw	r4,-4(fp)
   2f238:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f23c:	e0bfff17 	ldw	r2,-4(fp)
   2f240:	10800a17 	ldw	r2,40(r2)
   2f244:	1007883a 	mov	r3,r2
   2f248:	00800d04 	movi	r2,52
   2f24c:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2f250:	e0bfff17 	ldw	r2,-4(fp)
   2f254:	10800a17 	ldw	r2,40(r2)
   2f258:	10800044 	addi	r2,r2,1
   2f25c:	10800023 	ldbuio	r2,0(r2)
   2f260:	10803fcc 	andi	r2,r2,255
   2f264:	10ffffcc 	andi	r3,r2,65535
   2f268:	e0bffe17 	ldw	r2,-8(fp)
   2f26c:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f270:	e0bfff17 	ldw	r2,-4(fp)
   2f274:	10800a17 	ldw	r2,40(r2)
   2f278:	1007883a 	mov	r3,r2
   2f27c:	00800d44 	movi	r2,53
   2f280:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(y_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   2f284:	e0bfff17 	ldw	r2,-4(fp)
   2f288:	10800a17 	ldw	r2,40(r2)
   2f28c:	10800044 	addi	r2,r2,1
   2f290:	10800023 	ldbuio	r2,0(r2)
   2f294:	10803fcc 	andi	r2,r2,255
   2f298:	1006923a 	slli	r3,r2,8
   2f29c:	00804034 	movhi	r2,256
   2f2a0:	10bfc004 	addi	r2,r2,-256
   2f2a4:	1884703a 	and	r2,r3,r2
   2f2a8:	e0fffe17 	ldw	r3,-8(fp)
   2f2ac:	18c00017 	ldw	r3,0(r3)
   2f2b0:	10c5883a 	add	r2,r2,r3
   2f2b4:	1007883a 	mov	r3,r2
   2f2b8:	e0bffe17 	ldw	r2,-8(fp)
   2f2bc:	10c00015 	stw	r3,0(r2)

	if (*(y_axis) & 0x00008000)
   2f2c0:	e0bffe17 	ldw	r2,-8(fp)
   2f2c4:	10800017 	ldw	r2,0(r2)
   2f2c8:	10a0000c 	andi	r2,r2,32768
   2f2cc:	10000626 	beq	r2,zero,2f2e8 <alt_up_accelerometer_spi_read_y_axis+0xc0>
	{
		*(y_axis) |= 0xFFFF0000;
   2f2d0:	e0bffe17 	ldw	r2,-8(fp)
   2f2d4:	10800017 	ldw	r2,0(r2)
   2f2d8:	10bffff4 	orhi	r2,r2,65535
   2f2dc:	1007883a 	mov	r3,r2
   2f2e0:	e0bffe17 	ldw	r2,-8(fp)
   2f2e4:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   2f2e8:	0005883a 	mov	r2,zero
}
   2f2ec:	e037883a 	mov	sp,fp
   2f2f0:	df000017 	ldw	fp,0(sp)
   2f2f4:	dec00104 	addi	sp,sp,4
   2f2f8:	f800283a 	ret

0002f2fc <alt_up_accelerometer_spi_read_z_axis>:
 * @param z_axis -- a pointer to the location where the z axis data should be stored
 *
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_z_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *z_axis)
{
   2f2fc:	defffd04 	addi	sp,sp,-12
   2f300:	df000215 	stw	fp,8(sp)
   2f304:	df000204 	addi	fp,sp,8
   2f308:	e13fff15 	stw	r4,-4(fp)
   2f30c:	e17ffe15 	stw	r5,-8(fp)
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f310:	e0bfff17 	ldw	r2,-4(fp)
   2f314:	10800a17 	ldw	r2,40(r2)
   2f318:	1007883a 	mov	r3,r2
   2f31c:	00800d84 	movi	r2,54
   2f320:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   2f324:	e0bfff17 	ldw	r2,-4(fp)
   2f328:	10800a17 	ldw	r2,40(r2)
   2f32c:	10800044 	addi	r2,r2,1
   2f330:	10800023 	ldbuio	r2,0(r2)
   2f334:	10803fcc 	andi	r2,r2,255
   2f338:	10ffffcc 	andi	r3,r2,65535
   2f33c:	e0bffe17 	ldw	r2,-8(fp)
   2f340:	10c00015 	stw	r3,0(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   2f344:	e0bfff17 	ldw	r2,-4(fp)
   2f348:	10800a17 	ldw	r2,40(r2)
   2f34c:	1007883a 	mov	r3,r2
   2f350:	00800dc4 	movi	r2,55
   2f354:	18800025 	stbio	r2,0(r3)

	// read data to the device Data register
	*(z_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   2f358:	e0bfff17 	ldw	r2,-4(fp)
   2f35c:	10800a17 	ldw	r2,40(r2)
   2f360:	10800044 	addi	r2,r2,1
   2f364:	10800023 	ldbuio	r2,0(r2)
   2f368:	10803fcc 	andi	r2,r2,255
   2f36c:	1006923a 	slli	r3,r2,8
   2f370:	00804034 	movhi	r2,256
   2f374:	10bfc004 	addi	r2,r2,-256
   2f378:	1884703a 	and	r2,r3,r2
   2f37c:	e0fffe17 	ldw	r3,-8(fp)
   2f380:	18c00017 	ldw	r3,0(r3)
   2f384:	10c5883a 	add	r2,r2,r3
   2f388:	1007883a 	mov	r3,r2
   2f38c:	e0bffe17 	ldw	r2,-8(fp)
   2f390:	10c00015 	stw	r3,0(r2)

	if (*(z_axis) & 0x00008000)
   2f394:	e0bffe17 	ldw	r2,-8(fp)
   2f398:	10800017 	ldw	r2,0(r2)
   2f39c:	10a0000c 	andi	r2,r2,32768
   2f3a0:	10000626 	beq	r2,zero,2f3bc <alt_up_accelerometer_spi_read_z_axis+0xc0>
	{
		*(z_axis) |= 0xFFFF0000;
   2f3a4:	e0bffe17 	ldw	r2,-8(fp)
   2f3a8:	10800017 	ldw	r2,0(r2)
   2f3ac:	10bffff4 	orhi	r2,r2,65535
   2f3b0:	1007883a 	mov	r3,r2
   2f3b4:	e0bffe17 	ldw	r2,-8(fp)
   2f3b8:	10c00015 	stw	r3,0(r2)
	}

	return 0;
   2f3bc:	0005883a 	mov	r2,zero
}
   2f3c0:	e037883a 	mov	sp,fp
   2f3c4:	df000017 	ldw	fp,0(sp)
   2f3c8:	dec00104 	addi	sp,sp,4
   2f3cc:	f800283a 	ret

0002f3d0 <alt_up_adc_open_dev>:
#define read_ch4(adc)  IORD_ALT_UP_ADC_CH_4(((adc)->base))
#define read_ch5(adc)  IORD_ALT_UP_ADC_CH_5(((adc)->base))
#define read_ch6(adc)  IORD_ALT_UP_ADC_CH_6(((adc)->base))
#define read_ch7(adc)  IORD_ALT_UP_ADC_CH_7(((adc)->base))

alt_up_adc_dev* alt_up_adc_open_dev (const char* name){
   2f3d0:	defffc04 	addi	sp,sp,-16
   2f3d4:	dfc00315 	stw	ra,12(sp)
   2f3d8:	df000215 	stw	fp,8(sp)
   2f3dc:	df000204 	addi	fp,sp,8
   2f3e0:	e13ffe15 	stw	r4,-8(fp)

	alt_up_adc_dev* dev = (alt_up_adc_dev*) alt_find_dev(name, &alt_dev_list);
   2f3e4:	d1600604 	addi	r5,gp,-32744
   2f3e8:	e13ffe17 	ldw	r4,-8(fp)
   2f3ec:	002f9a40 	call	2f9a4 <alt_find_dev>
   2f3f0:	e0bfff15 	stw	r2,-4(fp)
	
	return dev;
   2f3f4:	e0bfff17 	ldw	r2,-4(fp)
}
   2f3f8:	e037883a 	mov	sp,fp
   2f3fc:	dfc00117 	ldw	ra,4(sp)
   2f400:	df000017 	ldw	fp,0(sp)
   2f404:	dec00204 	addi	sp,sp,8
   2f408:	f800283a 	ret

0002f40c <alt_up_adc_read>:

unsigned int alt_up_adc_read (alt_up_adc_dev * adc, unsigned channel){
   2f40c:	defffc04 	addi	sp,sp,-16
   2f410:	df000315 	stw	fp,12(sp)
   2f414:	df000304 	addi	fp,sp,12
   2f418:	e13ffe15 	stw	r4,-8(fp)
   2f41c:	e17ffd15 	stw	r5,-12(fp)

	unsigned int ch = channel % 8;
   2f420:	e0bffd17 	ldw	r2,-12(fp)
   2f424:	108001cc 	andi	r2,r2,7
   2f428:	e0bfff15 	stw	r2,-4(fp)
	
	switch (ch){
   2f42c:	e0bfff17 	ldw	r2,-4(fp)
   2f430:	10800228 	cmpgeui	r2,r2,8
   2f434:	1000351e 	bne	r2,zero,2f50c <alt_up_adc_read+0x100>
   2f438:	e0bfff17 	ldw	r2,-4(fp)
   2f43c:	100690ba 	slli	r3,r2,2
   2f440:	008000f4 	movhi	r2,3
   2f444:	1885883a 	add	r2,r3,r2
   2f448:	10bd1417 	ldw	r2,-2992(r2)
   2f44c:	1000683a 	jmp	r2
   2f450:	0002f470 	cmpltui	zero,zero,3025
   2f454:	0002f480 	call	2f48 <__reset-0x1d0b8>
   2f458:	0002f494 	movui	zero,3026
   2f45c:	0002f4a8 	cmpgeui	zero,zero,3026
   2f460:	0002f4bc 	xorhi	zero,zero,3026
   2f464:	0002f4d0 	cmplti	zero,zero,3027
   2f468:	0002f4e4 	muli	zero,zero,3027
   2f46c:	0002f4f8 	rdprs	zero,zero,3027
		case 0:
			return read_ch0(adc);
   2f470:	e0bffe17 	ldw	r2,-8(fp)
   2f474:	10800a17 	ldw	r2,40(r2)
   2f478:	10800037 	ldwio	r2,0(r2)
   2f47c:	00002406 	br	2f510 <alt_up_adc_read+0x104>
		case 1:
			return read_ch1(adc);
   2f480:	e0bffe17 	ldw	r2,-8(fp)
   2f484:	10800a17 	ldw	r2,40(r2)
   2f488:	10800104 	addi	r2,r2,4
   2f48c:	10800037 	ldwio	r2,0(r2)
   2f490:	00001f06 	br	2f510 <alt_up_adc_read+0x104>
		case 2:
			return read_ch2(adc);
   2f494:	e0bffe17 	ldw	r2,-8(fp)
   2f498:	10800a17 	ldw	r2,40(r2)
   2f49c:	10800204 	addi	r2,r2,8
   2f4a0:	10800037 	ldwio	r2,0(r2)
   2f4a4:	00001a06 	br	2f510 <alt_up_adc_read+0x104>
		case 3:
			return read_ch3(adc);
   2f4a8:	e0bffe17 	ldw	r2,-8(fp)
   2f4ac:	10800a17 	ldw	r2,40(r2)
   2f4b0:	10800304 	addi	r2,r2,12
   2f4b4:	10800037 	ldwio	r2,0(r2)
   2f4b8:	00001506 	br	2f510 <alt_up_adc_read+0x104>
		case 4:
			return read_ch4(adc);
   2f4bc:	e0bffe17 	ldw	r2,-8(fp)
   2f4c0:	10800a17 	ldw	r2,40(r2)
   2f4c4:	10800404 	addi	r2,r2,16
   2f4c8:	10800037 	ldwio	r2,0(r2)
   2f4cc:	00001006 	br	2f510 <alt_up_adc_read+0x104>
		case 5:
			return read_ch5(adc);
   2f4d0:	e0bffe17 	ldw	r2,-8(fp)
   2f4d4:	10800a17 	ldw	r2,40(r2)
   2f4d8:	10800504 	addi	r2,r2,20
   2f4dc:	10800037 	ldwio	r2,0(r2)
   2f4e0:	00000b06 	br	2f510 <alt_up_adc_read+0x104>
		case 6:
			return read_ch6(adc);
   2f4e4:	e0bffe17 	ldw	r2,-8(fp)
   2f4e8:	10800a17 	ldw	r2,40(r2)
   2f4ec:	10800604 	addi	r2,r2,24
   2f4f0:	10800037 	ldwio	r2,0(r2)
   2f4f4:	00000606 	br	2f510 <alt_up_adc_read+0x104>
		case 7:
			return read_ch7(adc);
   2f4f8:	e0bffe17 	ldw	r2,-8(fp)
   2f4fc:	10800a17 	ldw	r2,40(r2)
   2f500:	10800704 	addi	r2,r2,28
   2f504:	10800037 	ldwio	r2,0(r2)
   2f508:	00000106 	br	2f510 <alt_up_adc_read+0x104>
		default:
			return 0;
   2f50c:	0005883a 	mov	r2,zero
	}
}
   2f510:	e037883a 	mov	sp,fp
   2f514:	df000017 	ldw	fp,0(sp)
   2f518:	dec00104 	addi	sp,sp,4
   2f51c:	f800283a 	ret

0002f520 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   2f520:	defff404 	addi	sp,sp,-48
   2f524:	df000b15 	stw	fp,44(sp)
   2f528:	df000b04 	addi	fp,sp,44
   2f52c:	e13ff815 	stw	r4,-32(fp)
   2f530:	e17ff715 	stw	r5,-36(fp)
   2f534:	e1bff615 	stw	r6,-40(fp)
   2f538:	e1fff515 	stw	r7,-44(fp)
  alt_irq_context irq_context;
  alt_u64 current_nticks = 0;
   2f53c:	e03ffe15 	stw	zero,-8(fp)
   2f540:	e03fff15 	stw	zero,-4(fp)
   2f544:	d0a72517 	ldw	r2,-25452(gp)
  
  if (alt_ticks_per_second ())
   2f548:	10004826 	beq	r2,zero,2f66c <alt_alarm_start+0x14c>
  {
    if (alarm)
   2f54c:	e0bff817 	ldw	r2,-32(fp)
   2f550:	10004426 	beq	r2,zero,2f664 <alt_alarm_start+0x144>
    {
      alarm->callback = callback;
   2f554:	e0bff817 	ldw	r2,-32(fp)
   2f558:	e0fff617 	ldw	r3,-40(fp)
   2f55c:	10c00415 	stw	r3,16(r2)
      alarm->context  = context;
   2f560:	e0bff817 	ldw	r2,-32(fp)
   2f564:	e0fff517 	ldw	r3,-44(fp)
   2f568:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
   2f56c:	0005303a 	rdctl	r2,status
   2f570:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2f574:	e0fff917 	ldw	r3,-28(fp)
   2f578:	00bfff84 	movi	r2,-2
   2f57c:	1884703a 	and	r2,r3,r2
   2f580:	1001703a 	wrctl	status,r2
  return context;
   2f584:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   2f588:	e0bffd15 	stw	r2,-12(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u64 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   2f58c:	d0a72617 	ldw	r2,-25448(gp)
   2f590:	d0e72717 	ldw	r3,-25444(gp)
      
      current_nticks = alt_nticks();
   2f594:	e0bffe15 	stw	r2,-8(fp)
   2f598:	e0ffff15 	stw	r3,-4(fp)
      
      alarm->time = (alt_u64)nticks + current_nticks + 1; 
   2f59c:	e0bff717 	ldw	r2,-36(fp)
   2f5a0:	1011883a 	mov	r8,r2
   2f5a4:	0013883a 	mov	r9,zero
   2f5a8:	e13ffe17 	ldw	r4,-8(fp)
   2f5ac:	e17fff17 	ldw	r5,-4(fp)
   2f5b0:	4105883a 	add	r2,r8,r4
   2f5b4:	120d803a 	cmpltu	r6,r2,r8
   2f5b8:	4947883a 	add	r3,r9,r5
   2f5bc:	30c9883a 	add	r4,r6,r3
   2f5c0:	2007883a 	mov	r3,r4
   2f5c4:	1009883a 	mov	r4,r2
   2f5c8:	180b883a 	mov	r5,r3
   2f5cc:	01800044 	movi	r6,1
   2f5d0:	000f883a 	mov	r7,zero
   2f5d4:	2185883a 	add	r2,r4,r6
   2f5d8:	1111803a 	cmpltu	r8,r2,r4
   2f5dc:	29c7883a 	add	r3,r5,r7
   2f5e0:	40c9883a 	add	r4,r8,r3
   2f5e4:	2007883a 	mov	r3,r4
   2f5e8:	1009883a 	mov	r4,r2
   2f5ec:	180b883a 	mov	r5,r3
   2f5f0:	e0bff817 	ldw	r2,-32(fp)
   2f5f4:	11000215 	stw	r4,8(r2)
   2f5f8:	11400315 	stw	r5,12(r2)
          
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   2f5fc:	e0bff817 	ldw	r2,-32(fp)
   2f600:	d0e00c04 	addi	r3,gp,-32720
   2f604:	e0fffb15 	stw	r3,-20(fp)
   2f608:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2f60c:	e0bffa17 	ldw	r2,-24(fp)
   2f610:	e0fffb17 	ldw	r3,-20(fp)
   2f614:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2f618:	e0bffb17 	ldw	r2,-20(fp)
   2f61c:	10c00017 	ldw	r3,0(r2)
   2f620:	e0bffa17 	ldw	r2,-24(fp)
   2f624:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2f628:	e0bffb17 	ldw	r2,-20(fp)
   2f62c:	10800017 	ldw	r2,0(r2)
   2f630:	e0fffa17 	ldw	r3,-24(fp)
   2f634:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2f638:	e0bffb17 	ldw	r2,-20(fp)
   2f63c:	e0fffa17 	ldw	r3,-24(fp)
   2f640:	10c00015 	stw	r3,0(r2)
}
   2f644:	0001883a 	nop
   2f648:	e0bffd17 	ldw	r2,-12(fp)
   2f64c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
   2f650:	e0bffc17 	ldw	r2,-16(fp)
   2f654:	1001703a 	wrctl	status,r2
}
   2f658:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
   2f65c:	0005883a 	mov	r2,zero
   2f660:	00000306 	br	2f670 <alt_alarm_start+0x150>
    }
    else
    {
      return -EINVAL;
   2f664:	00bffa84 	movi	r2,-22
   2f668:	00000106 	br	2f670 <alt_alarm_start+0x150>
    }
  }
  else
  {
    return -ENOTSUP;
   2f66c:	00bfde84 	movi	r2,-134
  }
}
   2f670:	e037883a 	mov	sp,fp
   2f674:	df000017 	ldw	fp,0(sp)
   2f678:	dec00104 	addi	sp,sp,4
   2f67c:	f800283a 	ret

0002f680 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   2f680:	defffa04 	addi	sp,sp,-24
   2f684:	dfc00515 	stw	ra,20(sp)
   2f688:	df000415 	stw	fp,16(sp)
   2f68c:	df000404 	addi	fp,sp,16
   2f690:	e13ffc15 	stw	r4,-16(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   2f694:	008000c4 	movi	r2,3
   2f698:	e0bffe15 	stw	r2,-8(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   2f69c:	e0fffe17 	ldw	r3,-8(fp)
   2f6a0:	008003f4 	movhi	r2,15
   2f6a4:	10909004 	addi	r2,r2,16960
   2f6a8:	1885383a 	mul	r2,r3,r2
   2f6ac:	100b883a 	mov	r5,r2
   2f6b0:	0100bef4 	movhi	r4,763
   2f6b4:	213c2004 	addi	r4,r4,-3968
   2f6b8:	002097c0 	call	2097c <__udivsi3>
  big_loops = us / (INT_MAX/
   2f6bc:	100b883a 	mov	r5,r2
   2f6c0:	01200034 	movhi	r4,32768
   2f6c4:	213fffc4 	addi	r4,r4,-1
   2f6c8:	002097c0 	call	2097c <__udivsi3>
   2f6cc:	100b883a 	mov	r5,r2
   2f6d0:	e13ffc17 	ldw	r4,-16(fp)
   2f6d4:	002097c0 	call	2097c <__udivsi3>
   2f6d8:	e0bffd15 	stw	r2,-12(fp)

  if (big_loops)
   2f6dc:	e0bffd17 	ldw	r2,-12(fp)
   2f6e0:	10002a26 	beq	r2,zero,2f78c <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   2f6e4:	e03fff15 	stw	zero,-4(fp)
   2f6e8:	00001706 	br	2f748 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   2f6ec:	00a00034 	movhi	r2,32768
   2f6f0:	10bfffc4 	addi	r2,r2,-1
   2f6f4:	10bfffc4 	addi	r2,r2,-1
   2f6f8:	103ffe1e 	bne	r2,zero,2f6f4 <alt_busy_sleep+0x74>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   2f6fc:	e0fffe17 	ldw	r3,-8(fp)
   2f700:	008003f4 	movhi	r2,15
   2f704:	10909004 	addi	r2,r2,16960
   2f708:	1885383a 	mul	r2,r3,r2
      us -= (INT_MAX/(ALT_CPU_FREQ/
   2f70c:	100b883a 	mov	r5,r2
   2f710:	0100bef4 	movhi	r4,763
   2f714:	213c2004 	addi	r4,r4,-3968
   2f718:	002097c0 	call	2097c <__udivsi3>
   2f71c:	100b883a 	mov	r5,r2
   2f720:	01200034 	movhi	r4,32768
   2f724:	213fffc4 	addi	r4,r4,-1
   2f728:	002097c0 	call	2097c <__udivsi3>
   2f72c:	1007883a 	mov	r3,r2
   2f730:	e0bffc17 	ldw	r2,-16(fp)
   2f734:	10c5c83a 	sub	r2,r2,r3
   2f738:	e0bffc15 	stw	r2,-16(fp)
    for(i=0;i<big_loops;i++)
   2f73c:	e0bfff17 	ldw	r2,-4(fp)
   2f740:	10800044 	addi	r2,r2,1
   2f744:	e0bfff15 	stw	r2,-4(fp)
   2f748:	e0ffff17 	ldw	r3,-4(fp)
   2f74c:	e0bffd17 	ldw	r2,-12(fp)
   2f750:	18bfe616 	blt	r3,r2,2f6ec <alt_busy_sleep+0x6c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   2f754:	e0fffe17 	ldw	r3,-8(fp)
   2f758:	008003f4 	movhi	r2,15
   2f75c:	10909004 	addi	r2,r2,16960
   2f760:	1885383a 	mul	r2,r3,r2
   2f764:	100b883a 	mov	r5,r2
   2f768:	0100bef4 	movhi	r4,763
   2f76c:	213c2004 	addi	r4,r4,-3968
   2f770:	002097c0 	call	2097c <__udivsi3>
   2f774:	1007883a 	mov	r3,r2
   2f778:	e0bffc17 	ldw	r2,-16(fp)
   2f77c:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
   2f780:	10bfffc4 	addi	r2,r2,-1
   2f784:	103ffe1e 	bne	r2,zero,2f780 <alt_busy_sleep+0x100>
   2f788:	00000d06 	br	2f7c0 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   2f78c:	e0fffe17 	ldw	r3,-8(fp)
   2f790:	008003f4 	movhi	r2,15
   2f794:	10909004 	addi	r2,r2,16960
   2f798:	1885383a 	mul	r2,r3,r2
   2f79c:	100b883a 	mov	r5,r2
   2f7a0:	0100bef4 	movhi	r4,763
   2f7a4:	213c2004 	addi	r4,r4,-3968
   2f7a8:	002097c0 	call	2097c <__udivsi3>
   2f7ac:	1007883a 	mov	r3,r2
   2f7b0:	e0bffc17 	ldw	r2,-16(fp)
   2f7b4:	1885383a 	mul	r2,r3,r2
    __asm__ volatile (
   2f7b8:	10bfffc4 	addi	r2,r2,-1
   2f7bc:	00bffe16 	blt	zero,r2,2f7b8 <alt_busy_sleep+0x138>
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   2f7c0:	0005883a 	mov	r2,zero
}
   2f7c4:	e037883a 	mov	sp,fp
   2f7c8:	dfc00117 	ldw	ra,4(sp)
   2f7cc:	df000017 	ldw	fp,0(sp)
   2f7d0:	dec00204 	addi	sp,sp,8
   2f7d4:	f800283a 	ret

0002f7d8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   2f7d8:	deffff04 	addi	sp,sp,-4
   2f7dc:	df000015 	stw	fp,0(sp)
   2f7e0:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   2f7e4:	0001883a 	nop
   2f7e8:	e037883a 	mov	sp,fp
   2f7ec:	df000017 	ldw	fp,0(sp)
   2f7f0:	dec00104 	addi	sp,sp,4
   2f7f4:	f800283a 	ret

0002f7f8 <alt_get_errno>:
{
   2f7f8:	defffe04 	addi	sp,sp,-8
   2f7fc:	dfc00115 	stw	ra,4(sp)
   2f800:	df000015 	stw	fp,0(sp)
   2f804:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2f808:	d0a00917 	ldw	r2,-32732(gp)
   2f80c:	10000326 	beq	r2,zero,2f81c <alt_get_errno+0x24>
   2f810:	d0a00917 	ldw	r2,-32732(gp)
   2f814:	103ee83a 	callr	r2
   2f818:	00000106 	br	2f820 <alt_get_errno+0x28>
   2f81c:	d0a71f04 	addi	r2,gp,-25476
}
   2f820:	e037883a 	mov	sp,fp
   2f824:	dfc00117 	ldw	ra,4(sp)
   2f828:	df000017 	ldw	fp,0(sp)
   2f82c:	dec00204 	addi	sp,sp,8
   2f830:	f800283a 	ret

0002f834 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   2f834:	defffa04 	addi	sp,sp,-24
   2f838:	dfc00515 	stw	ra,20(sp)
   2f83c:	df000415 	stw	fp,16(sp)
   2f840:	df000404 	addi	fp,sp,16
   2f844:	e13ffd15 	stw	r4,-12(fp)
   2f848:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   2f84c:	e0bffd17 	ldw	r2,-12(fp)
   2f850:	10000326 	beq	r2,zero,2f860 <alt_dev_llist_insert+0x2c>
   2f854:	e0bffd17 	ldw	r2,-12(fp)
   2f858:	10800217 	ldw	r2,8(r2)
   2f85c:	1000061e 	bne	r2,zero,2f878 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   2f860:	002f7f80 	call	2f7f8 <alt_get_errno>
   2f864:	1007883a 	mov	r3,r2
   2f868:	00800584 	movi	r2,22
   2f86c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   2f870:	00bffa84 	movi	r2,-22
   2f874:	00001406 	br	2f8c8 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   2f878:	e0bffd17 	ldw	r2,-12(fp)
   2f87c:	e0fffc17 	ldw	r3,-16(fp)
   2f880:	e0ffff15 	stw	r3,-4(fp)
   2f884:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
   2f888:	e0bffe17 	ldw	r2,-8(fp)
   2f88c:	e0ffff17 	ldw	r3,-4(fp)
   2f890:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2f894:	e0bfff17 	ldw	r2,-4(fp)
   2f898:	10c00017 	ldw	r3,0(r2)
   2f89c:	e0bffe17 	ldw	r2,-8(fp)
   2f8a0:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
   2f8a4:	e0bfff17 	ldw	r2,-4(fp)
   2f8a8:	10800017 	ldw	r2,0(r2)
   2f8ac:	e0fffe17 	ldw	r3,-8(fp)
   2f8b0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2f8b4:	e0bfff17 	ldw	r2,-4(fp)
   2f8b8:	e0fffe17 	ldw	r3,-8(fp)
   2f8bc:	10c00015 	stw	r3,0(r2)
}
   2f8c0:	0001883a 	nop

  return 0;  
   2f8c4:	0005883a 	mov	r2,zero
}
   2f8c8:	e037883a 	mov	sp,fp
   2f8cc:	dfc00117 	ldw	ra,4(sp)
   2f8d0:	df000017 	ldw	fp,0(sp)
   2f8d4:	dec00204 	addi	sp,sp,8
   2f8d8:	f800283a 	ret

0002f8dc <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   2f8dc:	defffd04 	addi	sp,sp,-12
   2f8e0:	dfc00215 	stw	ra,8(sp)
   2f8e4:	df000115 	stw	fp,4(sp)
   2f8e8:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2f8ec:	008000f4 	movhi	r2,3
   2f8f0:	10817104 	addi	r2,r2,1476
   2f8f4:	e0bfff15 	stw	r2,-4(fp)
   2f8f8:	00000606 	br	2f914 <_do_ctors+0x38>
        (*ctor) (); 
   2f8fc:	e0bfff17 	ldw	r2,-4(fp)
   2f900:	10800017 	ldw	r2,0(r2)
   2f904:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2f908:	e0bfff17 	ldw	r2,-4(fp)
   2f90c:	10bfff04 	addi	r2,r2,-4
   2f910:	e0bfff15 	stw	r2,-4(fp)
   2f914:	e0ffff17 	ldw	r3,-4(fp)
   2f918:	008000f4 	movhi	r2,3
   2f91c:	10817204 	addi	r2,r2,1480
   2f920:	18bff62e 	bgeu	r3,r2,2f8fc <_do_ctors+0x20>
}
   2f924:	0001883a 	nop
   2f928:	0001883a 	nop
   2f92c:	e037883a 	mov	sp,fp
   2f930:	dfc00117 	ldw	ra,4(sp)
   2f934:	df000017 	ldw	fp,0(sp)
   2f938:	dec00204 	addi	sp,sp,8
   2f93c:	f800283a 	ret

0002f940 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   2f940:	defffd04 	addi	sp,sp,-12
   2f944:	dfc00215 	stw	ra,8(sp)
   2f948:	df000115 	stw	fp,4(sp)
   2f94c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2f950:	008000f4 	movhi	r2,3
   2f954:	10817104 	addi	r2,r2,1476
   2f958:	e0bfff15 	stw	r2,-4(fp)
   2f95c:	00000606 	br	2f978 <_do_dtors+0x38>
        (*dtor) (); 
   2f960:	e0bfff17 	ldw	r2,-4(fp)
   2f964:	10800017 	ldw	r2,0(r2)
   2f968:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2f96c:	e0bfff17 	ldw	r2,-4(fp)
   2f970:	10bfff04 	addi	r2,r2,-4
   2f974:	e0bfff15 	stw	r2,-4(fp)
   2f978:	e0ffff17 	ldw	r3,-4(fp)
   2f97c:	008000f4 	movhi	r2,3
   2f980:	10817204 	addi	r2,r2,1480
   2f984:	18bff62e 	bgeu	r3,r2,2f960 <_do_dtors+0x20>
}
   2f988:	0001883a 	nop
   2f98c:	0001883a 	nop
   2f990:	e037883a 	mov	sp,fp
   2f994:	dfc00117 	ldw	ra,4(sp)
   2f998:	df000017 	ldw	fp,0(sp)
   2f99c:	dec00204 	addi	sp,sp,8
   2f9a0:	f800283a 	ret

0002f9a4 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   2f9a4:	defffa04 	addi	sp,sp,-24
   2f9a8:	dfc00515 	stw	ra,20(sp)
   2f9ac:	df000415 	stw	fp,16(sp)
   2f9b0:	df000404 	addi	fp,sp,16
   2f9b4:	e13ffd15 	stw	r4,-12(fp)
   2f9b8:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
   2f9bc:	e0bffc17 	ldw	r2,-16(fp)
   2f9c0:	10800017 	ldw	r2,0(r2)
   2f9c4:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   2f9c8:	e13ffd17 	ldw	r4,-12(fp)
   2f9cc:	0020b840 	call	20b84 <strlen>
   2f9d0:	10800044 	addi	r2,r2,1
   2f9d4:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2f9d8:	00000d06 	br	2fa10 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   2f9dc:	e0bfff17 	ldw	r2,-4(fp)
   2f9e0:	10800217 	ldw	r2,8(r2)
   2f9e4:	e0fffe17 	ldw	r3,-8(fp)
   2f9e8:	180d883a 	mov	r6,r3
   2f9ec:	e17ffd17 	ldw	r5,-12(fp)
   2f9f0:	1009883a 	mov	r4,r2
   2f9f4:	00303a00 	call	303a0 <memcmp>
   2f9f8:	1000021e 	bne	r2,zero,2fa04 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   2f9fc:	e0bfff17 	ldw	r2,-4(fp)
   2fa00:	00000706 	br	2fa20 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   2fa04:	e0bfff17 	ldw	r2,-4(fp)
   2fa08:	10800017 	ldw	r2,0(r2)
   2fa0c:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
   2fa10:	e0ffff17 	ldw	r3,-4(fp)
   2fa14:	e0bffc17 	ldw	r2,-16(fp)
   2fa18:	18bff01e 	bne	r3,r2,2f9dc <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
   2fa1c:	0005883a 	mov	r2,zero
}
   2fa20:	e037883a 	mov	sp,fp
   2fa24:	dfc00117 	ldw	ra,4(sp)
   2fa28:	df000017 	ldw	fp,0(sp)
   2fa2c:	dec00204 	addi	sp,sp,8
   2fa30:	f800283a 	ret

0002fa34 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   2fa34:	deffff04 	addi	sp,sp,-4
   2fa38:	df000015 	stw	fp,0(sp)
   2fa3c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
   2fa40:	0001883a 	nop
   2fa44:	e037883a 	mov	sp,fp
   2fa48:	df000017 	ldw	fp,0(sp)
   2fa4c:	dec00104 	addi	sp,sp,4
   2fa50:	f800283a 	ret

0002fa54 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   2fa54:	defff904 	addi	sp,sp,-28
   2fa58:	dfc00615 	stw	ra,24(sp)
   2fa5c:	df000515 	stw	fp,20(sp)
   2fa60:	df000504 	addi	fp,sp,20
   2fa64:	e13ffe15 	stw	r4,-8(fp)
   2fa68:	e17ffd15 	stw	r5,-12(fp)
   2fa6c:	e1bffc15 	stw	r6,-16(fp)
   2fa70:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
   2fa74:	e1bffb17 	ldw	r6,-20(fp)
   2fa78:	e17ffc17 	ldw	r5,-16(fp)
   2fa7c:	e13ffd17 	ldw	r4,-12(fp)
   2fa80:	002fdf40 	call	2fdf4 <open>
   2fa84:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
   2fa88:	e0bfff17 	ldw	r2,-4(fp)
   2fa8c:	10001716 	blt	r2,zero,2faec <alt_open_fd+0x98>
  {
    fd->dev      = alt_fd_list[old].dev;
   2fa90:	e0bfff17 	ldw	r2,-4(fp)
   2fa94:	10c00324 	muli	r3,r2,12
   2fa98:	008000f4 	movhi	r2,3
   2fa9c:	1885883a 	add	r2,r3,r2
   2faa0:	10c5ac17 	ldw	r3,5808(r2)
   2faa4:	e0bffe17 	ldw	r2,-8(fp)
   2faa8:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   2faac:	e0bfff17 	ldw	r2,-4(fp)
   2fab0:	10c00324 	muli	r3,r2,12
   2fab4:	008000f4 	movhi	r2,3
   2fab8:	1885883a 	add	r2,r3,r2
   2fabc:	10c5ad17 	ldw	r3,5812(r2)
   2fac0:	e0bffe17 	ldw	r2,-8(fp)
   2fac4:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   2fac8:	e0bfff17 	ldw	r2,-4(fp)
   2facc:	10c00324 	muli	r3,r2,12
   2fad0:	008000f4 	movhi	r2,3
   2fad4:	1885883a 	add	r2,r3,r2
   2fad8:	10c5ae17 	ldw	r3,5816(r2)
   2fadc:	e0bffe17 	ldw	r2,-8(fp)
   2fae0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   2fae4:	e13fff17 	ldw	r4,-4(fp)
   2fae8:	002e2400 	call	2e240 <alt_release_fd>
  }
} 
   2faec:	0001883a 	nop
   2faf0:	e037883a 	mov	sp,fp
   2faf4:	dfc00117 	ldw	ra,4(sp)
   2faf8:	df000017 	ldw	fp,0(sp)
   2fafc:	dec00204 	addi	sp,sp,8
   2fb00:	f800283a 	ret

0002fb04 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   2fb04:	defffb04 	addi	sp,sp,-20
   2fb08:	dfc00415 	stw	ra,16(sp)
   2fb0c:	df000315 	stw	fp,12(sp)
   2fb10:	df000304 	addi	fp,sp,12
   2fb14:	e13fff15 	stw	r4,-4(fp)
   2fb18:	e17ffe15 	stw	r5,-8(fp)
   2fb1c:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   2fb20:	01c07fc4 	movi	r7,511
   2fb24:	01800044 	movi	r6,1
   2fb28:	e17fff17 	ldw	r5,-4(fp)
   2fb2c:	010000f4 	movhi	r4,3
   2fb30:	2105af04 	addi	r4,r4,5820
   2fb34:	002fa540 	call	2fa54 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   2fb38:	01c07fc4 	movi	r7,511
   2fb3c:	000d883a 	mov	r6,zero
   2fb40:	e17ffe17 	ldw	r5,-8(fp)
   2fb44:	010000f4 	movhi	r4,3
   2fb48:	2105ac04 	addi	r4,r4,5808
   2fb4c:	002fa540 	call	2fa54 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   2fb50:	01c07fc4 	movi	r7,511
   2fb54:	01800044 	movi	r6,1
   2fb58:	e17ffd17 	ldw	r5,-12(fp)
   2fb5c:	010000f4 	movhi	r4,3
   2fb60:	2105b204 	addi	r4,r4,5832
   2fb64:	002fa540 	call	2fa54 <alt_open_fd>
}  
   2fb68:	0001883a 	nop
   2fb6c:	e037883a 	mov	sp,fp
   2fb70:	dfc00117 	ldw	ra,4(sp)
   2fb74:	df000017 	ldw	fp,0(sp)
   2fb78:	dec00204 	addi	sp,sp,8
   2fb7c:	f800283a 	ret

0002fb80 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
   2fb80:	defff004 	addi	sp,sp,-64
   2fb84:	df000f15 	stw	fp,60(sp)
   2fb88:	df000f04 	addi	fp,sp,60
   2fb8c:	e13ff315 	stw	r4,-52(fp)
   2fb90:	e17ff215 	stw	r5,-56(fp)
   2fb94:	e1bff115 	stw	r6,-60(fp)
  int rc = -EINVAL;  
   2fb98:	00bffa84 	movi	r2,-22
   2fb9c:	e0bfff15 	stw	r2,-4(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   2fba0:	e0bff317 	ldw	r2,-52(fp)
   2fba4:	10800828 	cmpgeui	r2,r2,32
   2fba8:	1000501e 	bne	r2,zero,2fcec <alt_irq_register+0x16c>
  NIOS2_READ_STATUS (context);
   2fbac:	0005303a 	rdctl	r2,status
   2fbb0:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2fbb4:	e0fffd17 	ldw	r3,-12(fp)
   2fbb8:	00bfff84 	movi	r2,-2
   2fbbc:	1884703a 	and	r2,r3,r2
   2fbc0:	1001703a 	wrctl	status,r2
  return context;
   2fbc4:	e0bffd17 	ldw	r2,-12(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
   2fbc8:	e0bffe15 	stw	r2,-8(fp)

    alt_irq[id].handler = handler;
   2fbcc:	e0bff317 	ldw	r2,-52(fp)
   2fbd0:	100890fa 	slli	r4,r2,3
   2fbd4:	e0fff117 	ldw	r3,-60(fp)
   2fbd8:	008000f4 	movhi	r2,3
   2fbdc:	2085883a 	add	r2,r4,r2
   2fbe0:	10d16d15 	stw	r3,17844(r2)
    alt_irq[id].context = context;
   2fbe4:	e0bff317 	ldw	r2,-52(fp)
   2fbe8:	100890fa 	slli	r4,r2,3
   2fbec:	e0fff217 	ldw	r3,-56(fp)
   2fbf0:	008000f4 	movhi	r2,3
   2fbf4:	2085883a 	add	r2,r4,r2
   2fbf8:	10d16e15 	stw	r3,17848(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   2fbfc:	e0bff117 	ldw	r2,-60(fp)
   2fc00:	10001a26 	beq	r2,zero,2fc6c <alt_irq_register+0xec>
   2fc04:	e0bff317 	ldw	r2,-52(fp)
   2fc08:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_READ_STATUS (context);
   2fc0c:	0005303a 	rdctl	r2,status
   2fc10:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2fc14:	e0fffb17 	ldw	r3,-20(fp)
   2fc18:	00bfff84 	movi	r2,-2
   2fc1c:	1884703a 	and	r2,r3,r2
   2fc20:	1001703a 	wrctl	status,r2
  return context;
   2fc24:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2fc28:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active |= (1 << id);
   2fc2c:	00c00044 	movi	r3,1
   2fc30:	e0bffc17 	ldw	r2,-16(fp)
   2fc34:	1884983a 	sll	r2,r3,r2
   2fc38:	1007883a 	mov	r3,r2
   2fc3c:	d0a72417 	ldw	r2,-25456(gp)
   2fc40:	1884b03a 	or	r2,r3,r2
   2fc44:	d0a72415 	stw	r2,-25456(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2fc48:	d0a72417 	ldw	r2,-25456(gp)
   2fc4c:	100170fa 	wrctl	ienable,r2
   2fc50:	e0bffa17 	ldw	r2,-24(fp)
   2fc54:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context);
   2fc58:	e0bff917 	ldw	r2,-28(fp)
   2fc5c:	1001703a 	wrctl	status,r2
}
   2fc60:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
   2fc64:	0005883a 	mov	r2,zero
   2fc68:	00001a06 	br	2fcd4 <alt_irq_register+0x154>
   2fc6c:	e0bff317 	ldw	r2,-52(fp)
   2fc70:	e0bff815 	stw	r2,-32(fp)
  NIOS2_READ_STATUS (context);
   2fc74:	0005303a 	rdctl	r2,status
   2fc78:	e0bff715 	stw	r2,-36(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2fc7c:	e0fff717 	ldw	r3,-36(fp)
   2fc80:	00bfff84 	movi	r2,-2
   2fc84:	1884703a 	and	r2,r3,r2
   2fc88:	1001703a 	wrctl	status,r2
  return context;
   2fc8c:	e0bff717 	ldw	r2,-36(fp)
  status = alt_irq_disable_all ();
   2fc90:	e0bff615 	stw	r2,-40(fp)
  alt_irq_active &= ~(1 << id);
   2fc94:	00c00044 	movi	r3,1
   2fc98:	e0bff817 	ldw	r2,-32(fp)
   2fc9c:	1884983a 	sll	r2,r3,r2
   2fca0:	0084303a 	nor	r2,zero,r2
   2fca4:	1007883a 	mov	r3,r2
   2fca8:	d0a72417 	ldw	r2,-25456(gp)
   2fcac:	1884703a 	and	r2,r3,r2
   2fcb0:	d0a72415 	stw	r2,-25456(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2fcb4:	d0a72417 	ldw	r2,-25456(gp)
   2fcb8:	100170fa 	wrctl	ienable,r2
   2fcbc:	e0bff617 	ldw	r2,-40(fp)
   2fcc0:	e0bff515 	stw	r2,-44(fp)
  NIOS2_WRITE_STATUS (context);
   2fcc4:	e0bff517 	ldw	r2,-44(fp)
   2fcc8:	1001703a 	wrctl	status,r2
}
   2fccc:	0001883a 	nop
  return 0;
   2fcd0:	0005883a 	mov	r2,zero
   2fcd4:	e0bfff15 	stw	r2,-4(fp)
   2fcd8:	e0bffe17 	ldw	r2,-8(fp)
   2fcdc:	e0bff415 	stw	r2,-48(fp)
  NIOS2_WRITE_STATUS (context);
   2fce0:	e0bff417 	ldw	r2,-48(fp)
   2fce4:	1001703a 	wrctl	status,r2
}
   2fce8:	0001883a 	nop

    alt_irq_enable_all(status);
  }
  return rc; 
   2fcec:	e0bfff17 	ldw	r2,-4(fp)
}
   2fcf0:	e037883a 	mov	sp,fp
   2fcf4:	df000017 	ldw	fp,0(sp)
   2fcf8:	dec00104 	addi	sp,sp,4
   2fcfc:	f800283a 	ret

0002fd00 <alt_get_errno>:
{
   2fd00:	defffe04 	addi	sp,sp,-8
   2fd04:	dfc00115 	stw	ra,4(sp)
   2fd08:	df000015 	stw	fp,0(sp)
   2fd0c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2fd10:	d0a00917 	ldw	r2,-32732(gp)
   2fd14:	10000326 	beq	r2,zero,2fd24 <alt_get_errno+0x24>
   2fd18:	d0a00917 	ldw	r2,-32732(gp)
   2fd1c:	103ee83a 	callr	r2
   2fd20:	00000106 	br	2fd28 <alt_get_errno+0x28>
   2fd24:	d0a71f04 	addi	r2,gp,-25476
}
   2fd28:	e037883a 	mov	sp,fp
   2fd2c:	dfc00117 	ldw	ra,4(sp)
   2fd30:	df000017 	ldw	fp,0(sp)
   2fd34:	dec00204 	addi	sp,sp,8
   2fd38:	f800283a 	ret

0002fd3c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   2fd3c:	defffd04 	addi	sp,sp,-12
   2fd40:	df000215 	stw	fp,8(sp)
   2fd44:	df000204 	addi	fp,sp,8
   2fd48:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   2fd4c:	e0bffe17 	ldw	r2,-8(fp)
   2fd50:	10800217 	ldw	r2,8(r2)
   2fd54:	10d00034 	orhi	r3,r2,16384
   2fd58:	e0bffe17 	ldw	r2,-8(fp)
   2fd5c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2fd60:	e03fff15 	stw	zero,-4(fp)
   2fd64:	00001a06 	br	2fdd0 <alt_file_locked+0x94>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2fd68:	e0bfff17 	ldw	r2,-4(fp)
   2fd6c:	10c00324 	muli	r3,r2,12
   2fd70:	008000f4 	movhi	r2,3
   2fd74:	1885883a 	add	r2,r3,r2
   2fd78:	10c5ac17 	ldw	r3,5808(r2)
   2fd7c:	e0bffe17 	ldw	r2,-8(fp)
   2fd80:	10800017 	ldw	r2,0(r2)
   2fd84:	18800f1e 	bne	r3,r2,2fdc4 <alt_file_locked+0x88>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2fd88:	e0bfff17 	ldw	r2,-4(fp)
   2fd8c:	10c00324 	muli	r3,r2,12
   2fd90:	008000f4 	movhi	r2,3
   2fd94:	1885883a 	add	r2,r3,r2
   2fd98:	1085ae17 	ldw	r2,5816(r2)
    if ((alt_fd_list[i].dev == fd->dev) &&
   2fd9c:	1000090e 	bge	r2,zero,2fdc4 <alt_file_locked+0x88>
        (&alt_fd_list[i] != fd))
   2fda0:	e0bfff17 	ldw	r2,-4(fp)
   2fda4:	10c00324 	muli	r3,r2,12
   2fda8:	008000f4 	movhi	r2,3
   2fdac:	1085ac04 	addi	r2,r2,5808
   2fdb0:	1885883a 	add	r2,r3,r2
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2fdb4:	e0fffe17 	ldw	r3,-8(fp)
   2fdb8:	18800226 	beq	r3,r2,2fdc4 <alt_file_locked+0x88>
    {
      return -EACCES;
   2fdbc:	00bffcc4 	movi	r2,-13
   2fdc0:	00000806 	br	2fde4 <alt_file_locked+0xa8>
  for (i = 0; i <= alt_max_fd; i++)
   2fdc4:	e0bfff17 	ldw	r2,-4(fp)
   2fdc8:	10800044 	addi	r2,r2,1
   2fdcc:	e0bfff15 	stw	r2,-4(fp)
   2fdd0:	d0a00817 	ldw	r2,-32736(gp)
   2fdd4:	1007883a 	mov	r3,r2
   2fdd8:	e0bfff17 	ldw	r2,-4(fp)
   2fddc:	18bfe22e 	bgeu	r3,r2,2fd68 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   2fde0:	0005883a 	mov	r2,zero
}
   2fde4:	e037883a 	mov	sp,fp
   2fde8:	df000017 	ldw	fp,0(sp)
   2fdec:	dec00104 	addi	sp,sp,4
   2fdf0:	f800283a 	ret

0002fdf4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   2fdf4:	defff604 	addi	sp,sp,-40
   2fdf8:	dfc00915 	stw	ra,36(sp)
   2fdfc:	df000815 	stw	fp,32(sp)
   2fe00:	df000804 	addi	fp,sp,32
   2fe04:	e13ffa15 	stw	r4,-24(fp)
   2fe08:	e17ff915 	stw	r5,-28(fp)
   2fe0c:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   2fe10:	00bfffc4 	movi	r2,-1
   2fe14:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
   2fe18:	00bffb44 	movi	r2,-19
   2fe1c:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
   2fe20:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   2fe24:	d1600604 	addi	r5,gp,-32744
   2fe28:	e13ffa17 	ldw	r4,-24(fp)
   2fe2c:	002f9a40 	call	2f9a4 <alt_find_dev>
   2fe30:	e0bfff15 	stw	r2,-4(fp)
   2fe34:	e0bfff17 	ldw	r2,-4(fp)
   2fe38:	1000051e 	bne	r2,zero,2fe50 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   2fe3c:	e13ffa17 	ldw	r4,-24(fp)
   2fe40:	003013c0 	call	3013c <alt_find_file>
   2fe44:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
   2fe48:	00800044 	movi	r2,1
   2fe4c:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   2fe50:	e0bfff17 	ldw	r2,-4(fp)
   2fe54:	10002926 	beq	r2,zero,2fefc <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   2fe58:	e13fff17 	ldw	r4,-4(fp)
   2fe5c:	00302440 	call	30244 <alt_get_fd>
   2fe60:	e0bffe15 	stw	r2,-8(fp)
   2fe64:	e0bffe17 	ldw	r2,-8(fp)
   2fe68:	1000030e 	bge	r2,zero,2fe78 <open+0x84>
    {
      status = index;
   2fe6c:	e0bffe17 	ldw	r2,-8(fp)
   2fe70:	e0bffd15 	stw	r2,-12(fp)
   2fe74:	00002306 	br	2ff04 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   2fe78:	e0bffe17 	ldw	r2,-8(fp)
   2fe7c:	10c00324 	muli	r3,r2,12
   2fe80:	008000f4 	movhi	r2,3
   2fe84:	1085ac04 	addi	r2,r2,5808
   2fe88:	1885883a 	add	r2,r3,r2
   2fe8c:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   2fe90:	e0fff917 	ldw	r3,-28(fp)
   2fe94:	00900034 	movhi	r2,16384
   2fe98:	10bfffc4 	addi	r2,r2,-1
   2fe9c:	1886703a 	and	r3,r3,r2
   2fea0:	e0bffb17 	ldw	r2,-20(fp)
   2fea4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   2fea8:	e0bffc17 	ldw	r2,-16(fp)
   2feac:	1000051e 	bne	r2,zero,2fec4 <open+0xd0>
   2feb0:	e13ffb17 	ldw	r4,-20(fp)
   2feb4:	002fd3c0 	call	2fd3c <alt_file_locked>
   2feb8:	e0bffd15 	stw	r2,-12(fp)
   2febc:	e0bffd17 	ldw	r2,-12(fp)
   2fec0:	10001016 	blt	r2,zero,2ff04 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   2fec4:	e0bfff17 	ldw	r2,-4(fp)
   2fec8:	10800317 	ldw	r2,12(r2)
   2fecc:	10000826 	beq	r2,zero,2fef0 <open+0xfc>
   2fed0:	e0bfff17 	ldw	r2,-4(fp)
   2fed4:	10800317 	ldw	r2,12(r2)
   2fed8:	e1fff817 	ldw	r7,-32(fp)
   2fedc:	e1bff917 	ldw	r6,-28(fp)
   2fee0:	e17ffa17 	ldw	r5,-24(fp)
   2fee4:	e13ffb17 	ldw	r4,-20(fp)
   2fee8:	103ee83a 	callr	r2
   2feec:	00000106 	br	2fef4 <open+0x100>
   2fef0:	0005883a 	mov	r2,zero
   2fef4:	e0bffd15 	stw	r2,-12(fp)
   2fef8:	00000206 	br	2ff04 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   2fefc:	00bffb44 	movi	r2,-19
   2ff00:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   2ff04:	e0bffd17 	ldw	r2,-12(fp)
   2ff08:	1000090e 	bge	r2,zero,2ff30 <open+0x13c>
  {
    alt_release_fd (index);  
   2ff0c:	e13ffe17 	ldw	r4,-8(fp)
   2ff10:	002e2400 	call	2e240 <alt_release_fd>
    ALT_ERRNO = -status;
   2ff14:	002fd000 	call	2fd00 <alt_get_errno>
   2ff18:	1007883a 	mov	r3,r2
   2ff1c:	e0bffd17 	ldw	r2,-12(fp)
   2ff20:	0085c83a 	sub	r2,zero,r2
   2ff24:	18800015 	stw	r2,0(r3)
    return -1;
   2ff28:	00bfffc4 	movi	r2,-1
   2ff2c:	00000106 	br	2ff34 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   2ff30:	e0bffe17 	ldw	r2,-8(fp)
}
   2ff34:	e037883a 	mov	sp,fp
   2ff38:	dfc00117 	ldw	ra,4(sp)
   2ff3c:	df000017 	ldw	fp,0(sp)
   2ff40:	dec00204 	addi	sp,sp,8
   2ff44:	f800283a 	ret

0002ff48 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   2ff48:	defffa04 	addi	sp,sp,-24
   2ff4c:	df000515 	stw	fp,20(sp)
   2ff50:	df000504 	addi	fp,sp,20
   2ff54:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
   2ff58:	0005303a 	rdctl	r2,status
   2ff5c:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ff60:	e0fffc17 	ldw	r3,-16(fp)
   2ff64:	00bfff84 	movi	r2,-2
   2ff68:	1884703a 	and	r2,r3,r2
   2ff6c:	1001703a 	wrctl	status,r2
  return context;
   2ff70:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   2ff74:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
   2ff78:	e0bffb17 	ldw	r2,-20(fp)
   2ff7c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   2ff80:	e0bffd17 	ldw	r2,-12(fp)
   2ff84:	10800017 	ldw	r2,0(r2)
   2ff88:	e0fffd17 	ldw	r3,-12(fp)
   2ff8c:	18c00117 	ldw	r3,4(r3)
   2ff90:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   2ff94:	e0bffd17 	ldw	r2,-12(fp)
   2ff98:	10800117 	ldw	r2,4(r2)
   2ff9c:	e0fffd17 	ldw	r3,-12(fp)
   2ffa0:	18c00017 	ldw	r3,0(r3)
   2ffa4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   2ffa8:	e0bffd17 	ldw	r2,-12(fp)
   2ffac:	e0fffd17 	ldw	r3,-12(fp)
   2ffb0:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   2ffb4:	e0bffd17 	ldw	r2,-12(fp)
   2ffb8:	e0fffd17 	ldw	r3,-12(fp)
   2ffbc:	10c00015 	stw	r3,0(r2)
} 
   2ffc0:	0001883a 	nop
   2ffc4:	e0bfff17 	ldw	r2,-4(fp)
   2ffc8:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
   2ffcc:	e0bffe17 	ldw	r2,-8(fp)
   2ffd0:	1001703a 	wrctl	status,r2
}
   2ffd4:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
   2ffd8:	0001883a 	nop
   2ffdc:	e037883a 	mov	sp,fp
   2ffe0:	df000017 	ldw	fp,0(sp)
   2ffe4:	dec00104 	addi	sp,sp,4
   2ffe8:	f800283a 	ret

0002ffec <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   2ffec:	defff904 	addi	sp,sp,-28
   2fff0:	dfc00615 	stw	ra,24(sp)
   2fff4:	df000515 	stw	fp,20(sp)
   2fff8:	dc400415 	stw	r17,16(sp)
   2fffc:	dc000315 	stw	r16,12(sp)
   30000:	df000504 	addi	fp,sp,20
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   30004:	d0a00c17 	ldw	r2,-32720(gp)
   30008:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   3000c:	d1272617 	ldw	r4,-25448(gp)
   30010:	d1672717 	ldw	r5,-25444(gp)
   30014:	01800044 	movi	r6,1
   30018:	000f883a 	mov	r7,zero
   3001c:	2185883a 	add	r2,r4,r6
   30020:	1111803a 	cmpltu	r8,r2,r4
   30024:	29c7883a 	add	r3,r5,r7
   30028:	40c9883a 	add	r4,r8,r3
   3002c:	2007883a 	mov	r3,r4
   30030:	1009883a 	mov	r4,r2
   30034:	180b883a 	mov	r5,r3
   30038:	d1272615 	stw	r4,-25448(gp)
   3003c:	d1672715 	stw	r5,-25444(gp)
 
  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   30040:	00002906 	br	300e8 <alt_tick+0xfc>
  {
    next = (alt_alarm*) alarm->llist.next;
   30044:	e0bffd17 	ldw	r2,-12(fp)
   30048:	10800017 	ldw	r2,0(r2)
   3004c:	e0bffc15 	stw	r2,-16(fp)
    
    /* if the alarm period has expired, make the callback */    
    if (alarm->time <= _alt_nticks)
   30050:	e13ffd17 	ldw	r4,-12(fp)
   30054:	20800217 	ldw	r2,8(r4)
   30058:	20c00317 	ldw	r3,12(r4)
   3005c:	d1272617 	ldw	r4,-25448(gp)
   30060:	d1672717 	ldw	r5,-25444(gp)
   30064:	28c01e36 	bltu	r5,r3,300e0 <alt_tick+0xf4>
   30068:	1940011e 	bne	r3,r5,30070 <alt_tick+0x84>
   3006c:	20801c36 	bltu	r4,r2,300e0 <alt_tick+0xf4>
    {
      next_callback = alarm->callback (alarm->context);
   30070:	e0bffd17 	ldw	r2,-12(fp)
   30074:	10800417 	ldw	r2,16(r2)
   30078:	e0fffd17 	ldw	r3,-12(fp)
   3007c:	18c00517 	ldw	r3,20(r3)
   30080:	1809883a 	mov	r4,r3
   30084:	103ee83a 	callr	r2
   30088:	e0bffb15 	stw	r2,-20(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   3008c:	e0bffb17 	ldw	r2,-20(fp)
   30090:	1000031e 	bne	r2,zero,300a0 <alt_tick+0xb4>
      {
        alt_alarm_stop (alarm);
   30094:	e13ffd17 	ldw	r4,-12(fp)
   30098:	002ff480 	call	2ff48 <alt_alarm_stop>
   3009c:	00001006 	br	300e0 <alt_tick+0xf4>
      }
      else
      {
        alarm->time += next_callback;
   300a0:	e0bffd17 	ldw	r2,-12(fp)
   300a4:	11000217 	ldw	r4,8(r2)
   300a8:	11400317 	ldw	r5,12(r2)
   300ac:	e0bffb17 	ldw	r2,-20(fp)
   300b0:	1021883a 	mov	r16,r2
   300b4:	0023883a 	mov	r17,zero
   300b8:	2405883a 	add	r2,r4,r16
   300bc:	110d803a 	cmpltu	r6,r2,r4
   300c0:	2c47883a 	add	r3,r5,r17
   300c4:	30c9883a 	add	r4,r6,r3
   300c8:	2007883a 	mov	r3,r4
   300cc:	1009883a 	mov	r4,r2
   300d0:	180b883a 	mov	r5,r3
   300d4:	e0bffd17 	ldw	r2,-12(fp)
   300d8:	11000215 	stw	r4,8(r2)
   300dc:	11400315 	stw	r5,12(r2)
      }
    }
    alarm = next;
   300e0:	e0bffc17 	ldw	r2,-16(fp)
   300e4:	e0bffd15 	stw	r2,-12(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
   300e8:	e0fffd17 	ldw	r3,-12(fp)
   300ec:	d0a00c04 	addi	r2,gp,-32720
   300f0:	18bfd41e 	bne	r3,r2,30044 <alt_tick+0x58>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   300f4:	0001883a 	nop
}
   300f8:	0001883a 	nop
   300fc:	e6fffe04 	addi	sp,fp,-8
   30100:	dfc00317 	ldw	ra,12(sp)
   30104:	df000217 	ldw	fp,8(sp)
   30108:	dc400117 	ldw	r17,4(sp)
   3010c:	dc000017 	ldw	r16,0(sp)
   30110:	dec00404 	addi	sp,sp,16
   30114:	f800283a 	ret

00030118 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   30118:	deffff04 	addi	sp,sp,-4
   3011c:	df000015 	stw	fp,0(sp)
   30120:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   30124:	000170fa 	wrctl	ienable,zero
}
   30128:	0001883a 	nop
   3012c:	e037883a 	mov	sp,fp
   30130:	df000017 	ldw	fp,0(sp)
   30134:	dec00104 	addi	sp,sp,4
   30138:	f800283a 	ret

0003013c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   3013c:	defffb04 	addi	sp,sp,-20
   30140:	dfc00415 	stw	ra,16(sp)
   30144:	df000315 	stw	fp,12(sp)
   30148:	df000304 	addi	fp,sp,12
   3014c:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   30150:	d0a00417 	ldw	r2,-32752(gp)
   30154:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   30158:	00003106 	br	30220 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   3015c:	e0bfff17 	ldw	r2,-4(fp)
   30160:	10800217 	ldw	r2,8(r2)
   30164:	1009883a 	mov	r4,r2
   30168:	0020b840 	call	20b84 <strlen>
   3016c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   30170:	e0bfff17 	ldw	r2,-4(fp)
   30174:	10c00217 	ldw	r3,8(r2)
   30178:	e0bffe17 	ldw	r2,-8(fp)
   3017c:	10bfffc4 	addi	r2,r2,-1
   30180:	1885883a 	add	r2,r3,r2
   30184:	10800003 	ldbu	r2,0(r2)
   30188:	10803fcc 	andi	r2,r2,255
   3018c:	1080201c 	xori	r2,r2,128
   30190:	10bfe004 	addi	r2,r2,-128
   30194:	10800bd8 	cmpnei	r2,r2,47
   30198:	1000031e 	bne	r2,zero,301a8 <alt_find_file+0x6c>
    {
      len -= 1;
   3019c:	e0bffe17 	ldw	r2,-8(fp)
   301a0:	10bfffc4 	addi	r2,r2,-1
   301a4:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   301a8:	e0bffe17 	ldw	r2,-8(fp)
   301ac:	e0fffd17 	ldw	r3,-12(fp)
   301b0:	1885883a 	add	r2,r3,r2
   301b4:	10800003 	ldbu	r2,0(r2)
   301b8:	10803fcc 	andi	r2,r2,255
   301bc:	1080201c 	xori	r2,r2,128
   301c0:	10bfe004 	addi	r2,r2,-128
   301c4:	10800be0 	cmpeqi	r2,r2,47
   301c8:	1000081e 	bne	r2,zero,301ec <alt_find_file+0xb0>
   301cc:	e0bffe17 	ldw	r2,-8(fp)
   301d0:	e0fffd17 	ldw	r3,-12(fp)
   301d4:	1885883a 	add	r2,r3,r2
   301d8:	10800003 	ldbu	r2,0(r2)
   301dc:	10803fcc 	andi	r2,r2,255
   301e0:	1080201c 	xori	r2,r2,128
   301e4:	10bfe004 	addi	r2,r2,-128
   301e8:	10000a1e 	bne	r2,zero,30214 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   301ec:	e0bfff17 	ldw	r2,-4(fp)
   301f0:	10800217 	ldw	r2,8(r2)
   301f4:	e0fffe17 	ldw	r3,-8(fp)
   301f8:	180d883a 	mov	r6,r3
   301fc:	e17ffd17 	ldw	r5,-12(fp)
   30200:	1009883a 	mov	r4,r2
   30204:	00303a00 	call	303a0 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
   30208:	1000021e 	bne	r2,zero,30214 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
   3020c:	e0bfff17 	ldw	r2,-4(fp)
   30210:	00000706 	br	30230 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   30214:	e0bfff17 	ldw	r2,-4(fp)
   30218:	10800017 	ldw	r2,0(r2)
   3021c:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
   30220:	e0ffff17 	ldw	r3,-4(fp)
   30224:	d0a00404 	addi	r2,gp,-32752
   30228:	18bfcc1e 	bne	r3,r2,3015c <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
   3022c:	0005883a 	mov	r2,zero
}
   30230:	e037883a 	mov	sp,fp
   30234:	dfc00117 	ldw	ra,4(sp)
   30238:	df000017 	ldw	fp,0(sp)
   3023c:	dec00204 	addi	sp,sp,8
   30240:	f800283a 	ret

00030244 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   30244:	defffc04 	addi	sp,sp,-16
   30248:	df000315 	stw	fp,12(sp)
   3024c:	df000304 	addi	fp,sp,12
   30250:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
   30254:	00bffa04 	movi	r2,-24
   30258:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   3025c:	e03fff15 	stw	zero,-4(fp)
   30260:	00001706 	br	302c0 <alt_get_fd+0x7c>
  {
    if (!alt_fd_list[i].dev)
   30264:	e0bfff17 	ldw	r2,-4(fp)
   30268:	10c00324 	muli	r3,r2,12
   3026c:	008000f4 	movhi	r2,3
   30270:	1885883a 	add	r2,r3,r2
   30274:	1085ac17 	ldw	r2,5808(r2)
   30278:	10000e1e 	bne	r2,zero,302b4 <alt_get_fd+0x70>
    {
      alt_fd_list[i].dev = dev;
   3027c:	e0bfff17 	ldw	r2,-4(fp)
   30280:	11000324 	muli	r4,r2,12
   30284:	e0fffd17 	ldw	r3,-12(fp)
   30288:	008000f4 	movhi	r2,3
   3028c:	2085883a 	add	r2,r4,r2
   30290:	10c5ac15 	stw	r3,5808(r2)
      if (i > alt_max_fd)
   30294:	d0e00817 	ldw	r3,-32736(gp)
   30298:	e0bfff17 	ldw	r2,-4(fp)
   3029c:	1880020e 	bge	r3,r2,302a8 <alt_get_fd+0x64>
      {
        alt_max_fd = i;
   302a0:	e0bfff17 	ldw	r2,-4(fp)
   302a4:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
   302a8:	e0bfff17 	ldw	r2,-4(fp)
   302ac:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   302b0:	00000706 	br	302d0 <alt_get_fd+0x8c>
  for (i = 0; i < ALT_MAX_FD; i++)
   302b4:	e0bfff17 	ldw	r2,-4(fp)
   302b8:	10800044 	addi	r2,r2,1
   302bc:	e0bfff15 	stw	r2,-4(fp)
   302c0:	e0bfff17 	ldw	r2,-4(fp)
   302c4:	10800810 	cmplti	r2,r2,32
   302c8:	103fe61e 	bne	r2,zero,30264 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
   302cc:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   302d0:	e0bffe17 	ldw	r2,-8(fp)
}
   302d4:	e037883a 	mov	sp,fp
   302d8:	df000017 	ldw	fp,0(sp)
   302dc:	dec00104 	addi	sp,sp,4
   302e0:	f800283a 	ret

000302e4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   302e4:	defffe04 	addi	sp,sp,-8
   302e8:	df000115 	stw	fp,4(sp)
   302ec:	df000104 	addi	fp,sp,4
   302f0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   302f4:	e0bfff17 	ldw	r2,-4(fp)
   302f8:	10bffe84 	addi	r2,r2,-6
   302fc:	10c00428 	cmpgeui	r3,r2,16
   30300:	18c03fcc 	andi	r3,r3,255
   30304:	18000f1e 	bne	r3,zero,30344 <alt_exception_cause_generated_bad_addr+0x60>
   30308:	00c00044 	movi	r3,1
   3030c:	1884983a 	sll	r2,r3,r2
   30310:	10e2c8cc 	andi	r3,r2,35619
   30314:	1806c03a 	cmpne	r3,r3,zero
   30318:	18c03fcc 	andi	r3,r3,255
   3031c:	1800051e 	bne	r3,zero,30334 <alt_exception_cause_generated_bad_addr+0x50>
   30320:	1084100c 	andi	r2,r2,4160
   30324:	1004c03a 	cmpne	r2,r2,zero
   30328:	10803fcc 	andi	r2,r2,255
   3032c:	1000031e 	bne	r2,zero,3033c <alt_exception_cause_generated_bad_addr+0x58>
   30330:	00000406 	br	30344 <alt_exception_cause_generated_bad_addr+0x60>
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   30334:	00800044 	movi	r2,1
   30338:	00000306 	br	30348 <alt_exception_cause_generated_bad_addr+0x64>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   3033c:	0005883a 	mov	r2,zero
   30340:	00000106 	br	30348 <alt_exception_cause_generated_bad_addr+0x64>

  default:
    return 0;
   30344:	0005883a 	mov	r2,zero
  }
}
   30348:	e037883a 	mov	sp,fp
   3034c:	df000017 	ldw	fp,0(sp)
   30350:	dec00104 	addi	sp,sp,4
   30354:	f800283a 	ret

00030358 <atexit>:
   30358:	200b883a 	mov	r5,r4
   3035c:	000f883a 	mov	r7,zero
   30360:	000d883a 	mov	r6,zero
   30364:	0009883a 	mov	r4,zero
   30368:	00304181 	jmpi	30418 <__register_exitproc>

0003036c <exit>:
   3036c:	defffe04 	addi	sp,sp,-8
   30370:	000b883a 	mov	r5,zero
   30374:	dc000015 	stw	r16,0(sp)
   30378:	dfc00115 	stw	ra,4(sp)
   3037c:	2021883a 	mov	r16,r4
   30380:	00304a80 	call	304a8 <__call_exitprocs>
   30384:	008000f4 	movhi	r2,3
   30388:	110a3a17 	ldw	r4,10472(r2)
   3038c:	20800f17 	ldw	r2,60(r4)
   30390:	10000126 	beq	r2,zero,30398 <exit+0x2c>
   30394:	103ee83a 	callr	r2
   30398:	8009883a 	mov	r4,r16
   3039c:	002daf40 	call	2daf4 <_exit>

000303a0 <memcmp>:
   303a0:	30800128 	cmpgeui	r2,r6,4
   303a4:	10000d26 	beq	r2,zero,303dc <memcmp+0x3c>
   303a8:	2144b03a 	or	r2,r4,r5
   303ac:	108000cc 	andi	r2,r2,3
   303b0:	10000726 	beq	r2,zero,303d0 <memcmp+0x30>
   303b4:	30bfffc4 	addi	r2,r6,-1
   303b8:	00000a06 	br	303e4 <memcmp+0x44>
   303bc:	31bfff04 	addi	r6,r6,-4
   303c0:	30800128 	cmpgeui	r2,r6,4
   303c4:	21000104 	addi	r4,r4,4
   303c8:	29400104 	addi	r5,r5,4
   303cc:	10000326 	beq	r2,zero,303dc <memcmp+0x3c>
   303d0:	20c00017 	ldw	r3,0(r4)
   303d4:	28800017 	ldw	r2,0(r5)
   303d8:	18bff826 	beq	r3,r2,303bc <memcmp+0x1c>
   303dc:	30bfffc4 	addi	r2,r6,-1
   303e0:	30000b26 	beq	r6,zero,30410 <memcmp+0x70>
   303e4:	11800044 	addi	r6,r2,1
   303e8:	218d883a 	add	r6,r4,r6
   303ec:	00000106 	br	303f4 <memcmp+0x54>
   303f0:	21800726 	beq	r4,r6,30410 <memcmp+0x70>
   303f4:	20800003 	ldbu	r2,0(r4)
   303f8:	28c00003 	ldbu	r3,0(r5)
   303fc:	21000044 	addi	r4,r4,1
   30400:	29400044 	addi	r5,r5,1
   30404:	10fffa26 	beq	r2,r3,303f0 <memcmp+0x50>
   30408:	10c5c83a 	sub	r2,r2,r3
   3040c:	f800283a 	ret
   30410:	0005883a 	mov	r2,zero
   30414:	f800283a 	ret

00030418 <__register_exitproc>:
   30418:	008000f4 	movhi	r2,3
   3041c:	10ca3a17 	ldw	r3,10472(r2)
   30420:	18805217 	ldw	r2,328(r3)
   30424:	10001726 	beq	r2,zero,30484 <__register_exitproc+0x6c>
   30428:	10c00117 	ldw	r3,4(r2)
   3042c:	1a000808 	cmpgei	r8,r3,32
   30430:	40001b1e 	bne	r8,zero,304a0 <__register_exitproc+0x88>
   30434:	20000b26 	beq	r4,zero,30464 <__register_exitproc+0x4c>
   30438:	181090ba 	slli	r8,r3,2
   3043c:	02400044 	movi	r9,1
   30440:	48d2983a 	sll	r9,r9,r3
   30444:	1211883a 	add	r8,r2,r8
   30448:	41802215 	stw	r6,136(r8)
   3044c:	11806217 	ldw	r6,392(r2)
   30450:	21000098 	cmpnei	r4,r4,2
   30454:	324cb03a 	or	r6,r6,r9
   30458:	11806215 	stw	r6,392(r2)
   3045c:	41c04215 	stw	r7,264(r8)
   30460:	20000b26 	beq	r4,zero,30490 <__register_exitproc+0x78>
   30464:	19000084 	addi	r4,r3,2
   30468:	200890ba 	slli	r4,r4,2
   3046c:	18c00044 	addi	r3,r3,1
   30470:	10c00115 	stw	r3,4(r2)
   30474:	1105883a 	add	r2,r2,r4
   30478:	11400015 	stw	r5,0(r2)
   3047c:	0005883a 	mov	r2,zero
   30480:	f800283a 	ret
   30484:	18805304 	addi	r2,r3,332
   30488:	18805215 	stw	r2,328(r3)
   3048c:	003fe606 	br	30428 <__register_exitproc+0x10>
   30490:	11006317 	ldw	r4,396(r2)
   30494:	2248b03a 	or	r4,r4,r9
   30498:	11006315 	stw	r4,396(r2)
   3049c:	003ff106 	br	30464 <__register_exitproc+0x4c>
   304a0:	00bfffc4 	movi	r2,-1
   304a4:	f800283a 	ret

000304a8 <__call_exitprocs>:
   304a8:	defff704 	addi	sp,sp,-36
   304ac:	008000f4 	movhi	r2,3
   304b0:	dcc00315 	stw	r19,12(sp)
   304b4:	14ca3a17 	ldw	r19,10472(r2)
   304b8:	dc800215 	stw	r18,8(sp)
   304bc:	dfc00815 	stw	ra,32(sp)
   304c0:	9c805217 	ldw	r18,328(r19)
   304c4:	ddc00715 	stw	r23,28(sp)
   304c8:	dd800615 	stw	r22,24(sp)
   304cc:	dd400515 	stw	r21,20(sp)
   304d0:	dd000415 	stw	r20,16(sp)
   304d4:	dc400115 	stw	r17,4(sp)
   304d8:	dc000015 	stw	r16,0(sp)
   304dc:	90001026 	beq	r18,zero,30520 <__call_exitprocs+0x78>
   304e0:	202b883a 	mov	r21,r4
   304e4:	282d883a 	mov	r22,r5
   304e8:	05000044 	movi	r20,1
   304ec:	94000117 	ldw	r16,4(r18)
   304f0:	847fffc4 	addi	r17,r16,-1
   304f4:	88000a16 	blt	r17,zero,30520 <__call_exitprocs+0x78>
   304f8:	84000044 	addi	r16,r16,1
   304fc:	802090ba 	slli	r16,r16,2
   30500:	9421883a 	add	r16,r18,r16
   30504:	b0001126 	beq	r22,zero,3054c <__call_exitprocs+0xa4>
   30508:	80804017 	ldw	r2,256(r16)
   3050c:	15800f26 	beq	r2,r22,3054c <__call_exitprocs+0xa4>
   30510:	8c7fffc4 	addi	r17,r17,-1
   30514:	88bfffd8 	cmpnei	r2,r17,-1
   30518:	843fff04 	addi	r16,r16,-4
   3051c:	103ff91e 	bne	r2,zero,30504 <__call_exitprocs+0x5c>
   30520:	dfc00817 	ldw	ra,32(sp)
   30524:	ddc00717 	ldw	r23,28(sp)
   30528:	dd800617 	ldw	r22,24(sp)
   3052c:	dd400517 	ldw	r21,20(sp)
   30530:	dd000417 	ldw	r20,16(sp)
   30534:	dcc00317 	ldw	r19,12(sp)
   30538:	dc800217 	ldw	r18,8(sp)
   3053c:	dc400117 	ldw	r17,4(sp)
   30540:	dc000017 	ldw	r16,0(sp)
   30544:	dec00904 	addi	sp,sp,36
   30548:	f800283a 	ret
   3054c:	90800117 	ldw	r2,4(r18)
   30550:	81800017 	ldw	r6,0(r16)
   30554:	10bfffc4 	addi	r2,r2,-1
   30558:	14401726 	beq	r2,r17,305b8 <__call_exitprocs+0x110>
   3055c:	80000015 	stw	zero,0(r16)
   30560:	303feb26 	beq	r6,zero,30510 <__call_exitprocs+0x68>
   30564:	a446983a 	sll	r3,r20,r17
   30568:	90806217 	ldw	r2,392(r18)
   3056c:	95c00117 	ldw	r23,4(r18)
   30570:	1884703a 	and	r2,r3,r2
   30574:	1000081e 	bne	r2,zero,30598 <__call_exitprocs+0xf0>
   30578:	303ee83a 	callr	r6
   3057c:	90c00117 	ldw	r3,4(r18)
   30580:	98805217 	ldw	r2,328(r19)
   30584:	1dc0011e 	bne	r3,r23,3058c <__call_exitprocs+0xe4>
   30588:	14bfe126 	beq	r2,r18,30510 <__call_exitprocs+0x68>
   3058c:	103fe426 	beq	r2,zero,30520 <__call_exitprocs+0x78>
   30590:	1025883a 	mov	r18,r2
   30594:	003fd506 	br	304ec <__call_exitprocs+0x44>
   30598:	90806317 	ldw	r2,396(r18)
   3059c:	81002017 	ldw	r4,128(r16)
   305a0:	1886703a 	and	r3,r3,r2
   305a4:	1800061e 	bne	r3,zero,305c0 <__call_exitprocs+0x118>
   305a8:	200b883a 	mov	r5,r4
   305ac:	a809883a 	mov	r4,r21
   305b0:	303ee83a 	callr	r6
   305b4:	003ff106 	br	3057c <__call_exitprocs+0xd4>
   305b8:	94400115 	stw	r17,4(r18)
   305bc:	003fe806 	br	30560 <__call_exitprocs+0xb8>
   305c0:	303ee83a 	callr	r6
   305c4:	003fed06 	br	3057c <__call_exitprocs+0xd4>
